<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.20.0415.1518                               -->
<workbook original-version='18.1' source-build='2019.2.11 (20192.20.0415.1518)' source-platform='win' version='18.1' xml:base='https://dub01.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='01_dashboard_v001' path='/t/aidacovid/workbooks' revision='1.4' site='aidacovid' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='Top 10 Total' caption='Country Selection' datatype='string' name='[Measure to Show (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Top10_total&quot;'>
        <calculation class='tableau' formula='&quot;Top10_total&quot;' />
        <aliases>
          <alias key='&quot;Top10_total&quot;' value='Top 10 Total' />
        </aliases>
        <members>
          <member alias='Top 10 Total' value='&quot;Top10_total&quot;' />
          <member value='&quot;Bottom10_total&quot;' />
        </members>
      </column>
      <column alias='New Deaths' caption='Measure' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;new_deaths&quot;'>
        <calculation class='tableau' formula='&quot;new_deaths&quot;' />
        <aliases>
          <alias key='&quot;new_cases&quot;' value='New Cases' />
          <alias key='&quot;new_cases_per_million&quot;' value='New Cases (p.M)' />
          <alias key='&quot;new_deaths&quot;' value='New Deaths' />
          <alias key='&quot;new_deaths_per_million&quot;' value='New Deaths (p.M)' />
          <alias key='&quot;total_cases&quot;' value='Total Cases' />
          <alias key='&quot;total_cases_per_million&quot;' value='Total Cases (p.M)' />
          <alias key='&quot;total_deaths&quot;' value='Total Deaths' />
          <alias key='&quot;total_deaths_per_million&quot;' value='Totals Deaths (p.M)' />
        </aliases>
        <members>
          <member alias='New Cases' value='&quot;new_cases&quot;' />
          <member alias='Total Cases' value='&quot;total_cases&quot;' />
          <member alias='New Deaths' value='&quot;new_deaths&quot;' />
          <member alias='Total Deaths' value='&quot;total_deaths&quot;' />
          <member alias='New Cases (p.M)' value='&quot;new_cases_per_million&quot;' />
          <member alias='Total Cases (p.M)' value='&quot;total_cases_per_million&quot;' />
          <member alias='New Deaths (p.M)' value='&quot;new_deaths_per_million&quot;' />
          <member alias='Totals Deaths (p.M)' value='&quot;total_deaths_per_million&quot;' />
        </members>
      </column>
      <column alias='predict' caption='Prediction' datatype='date' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='#2020-11-22#'>
        <calculation class='tableau' formula='#2020-11-22#' />
        <aliases>
          <alias key='#2020-11-22#' value='predict' />
        </aliases>
        <members>
          <member alias='predict' value='#2020-11-22#' />
        </members>
      </column>
    </datasource>
    <datasource caption='[01a] - owid-covid-data - original' inline='true' name='federated.0bdudug06c89yc164m65t1pbh640' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='owid-covid-data' name='textscan.07iqnjf0qak6cw10xf4830jedvvo'>
            <connection class='textscan' directory='C:/AIDA/CertProjCovid19/Tableau/Input' filename='owid-covid-data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.07iqnjf0qak6cw10xf4830jedvvo' name='owid-covid-data.csv' table='[owid-covid-data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='real' name='total_deaths' ordinal='7' />
            <column datatype='real' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='integer' name='icu_patients' ordinal='17' />
            <column datatype='real' name='icu_patients_per_million' ordinal='18' />
            <column datatype='integer' name='hosp_patients' ordinal='19' />
            <column datatype='real' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='integer' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='real' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='integer' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='real' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='integer' name='total_tests' ordinal='25' />
            <column datatype='integer' name='new_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='real' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='tests_per_case' ordinal='31' />
            <column datatype='real' name='positive_rate' ordinal='32' />
            <column datatype='integer' name='tests_units' ordinal='33' />
            <column datatype='real' name='stringency_index' ordinal='34' />
            <column datatype='real' name='population' ordinal='35' />
            <column datatype='real' name='population_density' ordinal='36' />
            <column datatype='real' name='median_age' ordinal='37' />
            <column datatype='real' name='aged_65_older' ordinal='38' />
            <column datatype='real' name='aged_70_older' ordinal='39' />
            <column datatype='real' name='gdp_per_capita' ordinal='40' />
            <column datatype='string' name='extreme_poverty' ordinal='41' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='42' />
            <column datatype='real' name='diabetes_prevalence' ordinal='43' />
            <column datatype='string' name='female_smokers' ordinal='44' />
            <column datatype='string' name='male_smokers' ordinal='45' />
            <column datatype='real' name='handwashing_facilities' ordinal='46' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='47' />
            <column datatype='real' name='life_expectancy' ordinal='48' />
            <column datatype='real' name='human_development_index' ordinal='49' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekly_icu_admissions]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_icu_admissions</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_icu_admissions_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_icu_admissions_per_million</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekly_hosp_admissions]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_hosp_admissions_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>129</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='string' name='[iso_code]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='string' name='[location]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.475628' measure-ordering='alphabetic' measure-percentage='0.490399' parameter-percentage='0.0339734' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='[01b] - owid_clean' inline='true' name='federated.1778kex0kgg0m118q1p271qx5l7r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='owid_clean' name='textscan.0cb2auj0hmj29f114n4zt03kz22z'>
            <connection class='textscan' directory='C:/AIDA/CertProjCovid19/Tableau/Input' filename='owid_clean.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0cb2auj0hmj29f114n4zt03kz22z' name='owid_clean.csv' table='[owid_clean#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='real' name='total_deaths' ordinal='7' />
            <column datatype='real' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='integer' name='icu_patients' ordinal='17' />
            <column datatype='real' name='icu_patients_per_million' ordinal='18' />
            <column datatype='integer' name='hosp_patients' ordinal='19' />
            <column datatype='real' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='integer' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='real' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='integer' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='real' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='integer' name='total_tests' ordinal='25' />
            <column datatype='integer' name='new_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='real' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='tests_per_case' ordinal='31' />
            <column datatype='real' name='positive_rate' ordinal='32' />
            <column datatype='integer' name='tests_units' ordinal='33' />
            <column datatype='real' name='stringency_index' ordinal='34' />
            <column datatype='real' name='population' ordinal='35' />
            <column datatype='real' name='population_density' ordinal='36' />
            <column datatype='real' name='median_age' ordinal='37' />
            <column datatype='real' name='aged_65_older' ordinal='38' />
            <column datatype='real' name='aged_70_older' ordinal='39' />
            <column datatype='real' name='gdp_per_capita' ordinal='40' />
            <column datatype='string' name='extreme_poverty' ordinal='41' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='42' />
            <column datatype='real' name='diabetes_prevalence' ordinal='43' />
            <column datatype='string' name='female_smokers' ordinal='44' />
            <column datatype='string' name='male_smokers' ordinal='45' />
            <column datatype='real' name='handwashing_facilities' ordinal='46' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='47' />
            <column datatype='real' name='life_expectancy' ordinal='48' />
            <column datatype='real' name='human_development_index' ordinal='49' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekly_icu_admissions]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>weekly_icu_admissions</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_icu_admissions_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>weekly_icu_admissions_per_million</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekly_hosp_admissions]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_hosp_admissions_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>129</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country' datatype='string' name='[Calculation_1118581610973171713]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[location]' />
      </column>
      <column caption='Period' datatype='string' name='[Calculation_1118581610988412931]' role='measure' type='nominal'>
        <calculation class='tableau' formula='str(DATEPART(&apos;day&apos;,min([date]))) + &apos;.&apos; +&#13;&#10;str(DATEPART(&apos;month&apos;,min([date]))) + &apos;.-&apos; +&#13;&#10;str(DATEPART(&apos;day&apos;,max([date]))) + &apos;.&apos; +&#13;&#10;str(DATEPART(&apos;month&apos;,max([date])))+ &apos;.&apos; +&#13;&#10;str(DATEPART(&apos;year&apos;,max([date]))) + &apos; (CW &apos; +&#13;&#10;str(DATEPART(&apos;week&apos;,max([date]))) + &apos;)&apos;' />
      </column>
      <column caption='Filter_by_Paramter' datatype='boolean' name='[Calculation_1118581610995380228]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Measure to Show (copy)] = &quot;Top10_total&quot; THEN [Set 1]&#13;&#10;ELSEIF [Parameters].[Measure to Show (copy)] = &quot;Bottom10_total&quot; THEN [Top Countries by New Cases (copy)]&#13;&#10;END' />
      </column>
      <column caption='ShowValue' datatype='real' name='[Calculation_1118581610997878789]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='IF [Calculation_1118581611035512838] &lt; 11 THEN SUM([new_cases]) END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Country_Rank_by_new_cases' datatype='integer' name='[Calculation_1118581611035512838]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM([new_cases]))'>
          <table-calc ordering-field='[federated.1778kex0kgg0m118q1p271qx5l7r].[Calculation_1118581610973171713]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Top 10 Countries' datatype='real' name='[Calculation_1118581611048226829]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF RANK(SUM([new_cases]))&lt;=10 &#13;&#10;THEN SUM([new_cases])&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Global Contamination [p.M.]' datatype='real' name='[Calculation_1118581611050946576]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([new_cases])/SUM([Calculation_1118581611051085841])*1000000' />
      </column>
      <column caption='c_pop' datatype='real' name='[Calculation_1118581611051085841]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Calculation_1118581610973171713]: AVG([population])}' />
      </column>
      <column caption='Global Cases' datatype='real' name='[Calculation_1118581611054268434]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([new_cases])' />
      </column>
      <column caption='first case' datatype='date' name='[Calculation_734086793138049024]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{ FIXED [location]: min(if ([new_cases])&gt;0 THEN ([date]) END)}' />
      </column>
      <column caption='has first case' datatype='boolean' name='[Calculation_734086793146056705]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[total_cases]&gt;0' />
      </column>
      <column caption='Log_per_M' datatype='real' name='[Calculation_895371954159882240]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ISNULL(SUM([new_cases_per_million])) THEN 0&#13;&#10;ELSE LOG(SUM([new_cases_per_million]))&#13;&#10;END' />
      </column>
      <column caption='Measure_by_Selction' datatype='real' name='[Calculation_895371954178236418]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == &apos;new_cases&apos; THEN [new_cases]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_cases&apos; THEN [total_cases]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_deaths&apos; THEN [total_deaths]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;new_deaths&apos; THEN [new_deaths]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;new_cases_per_million&apos; THEN [new_cases_per_million]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_cases_per_million&apos; THEN [total_cases_per_million]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_deaths_per_million&apos; THEN [total_deaths_per_million]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;new_deaths_per_million&apos; THEN [new_deaths_per_million]&#13;&#10;ELSE Null&#13;&#10;END' />
      </column>
      <column caption='Event' datatype='string' name='[Calculation_895371954181685251]' role='measure' type='nominal'>
        <calculation class='tableau' formula='ATTR([federated.1tqx0su0ika3du183um0b12cwg8m].[measure])' />
      </column>
      <column caption='Global Deaths' datatype='real' name='[Global Cases (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([new_deaths])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='string' name='[iso_code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;OWID_KOS&quot;' value='&quot;Kosovo&quot;' />
        </semantic-values>
      </column>
      <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_734086793146056705]' derivation='None' name='[none:Calculation_734086793146056705:nk]' pivot='key' type='nominal' />
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <group caption='Top Countries by New Cases' name='[Set 1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[location]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Cottom Countries by New Cases' name='[Top Countries by New Cases (copy)]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[location]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.391433' group-percentage='0.103397' measure-ordering='alphabetic' measure-percentage='0.364845' parameter-percentage='0.140325' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_734086793146056705:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>false</bucket>
            </map>
            <map to='#e15759'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:continent:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='%null%' />
        <semantic-value key='[County].[Name]' value='%null%' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column alias='Top 10 Total' caption='Country Selection' datatype='string' name='[Measure to Show (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Top10_total&quot;'>
          <calculation class='tableau' formula='&quot;Top10_total&quot;' />
          <aliases>
            <alias key='&quot;Top10_total&quot;' value='Top 10 Total' />
          </aliases>
        </column>
        <column alias='New Deaths' caption='Measure' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;new_deaths&quot;'>
          <calculation class='tableau' formula='&quot;new_deaths&quot;' />
          <aliases>
            <alias key='&quot;new_cases&quot;' value='New Cases' />
            <alias key='&quot;new_cases_per_million&quot;' value='New Cases (p.M)' />
            <alias key='&quot;new_deaths&quot;' value='New Deaths' />
            <alias key='&quot;new_deaths_per_million&quot;' value='New Deaths (p.M)' />
            <alias key='&quot;total_cases&quot;' value='Total Cases' />
            <alias key='&quot;total_cases_per_million&quot;' value='Total Cases (p.M)' />
            <alias key='&quot;total_deaths&quot;' value='Total Deaths' />
            <alias key='&quot;total_deaths_per_million&quot;' value='Totals Deaths (p.M)' />
          </aliases>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1tqx0su0ika3du183um0b12cwg8m'>
        <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='[10] - predictions_for_tableau' inline='true' name='federated.0m3vwg5077pvbz1bksxis1j7semv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='predictions_for_tableau' name='textscan.107q0kn047pqls19avodn1io96y1'>
            <connection class='textscan' directory='C:/AIDA/CertProjCovid19/Tableau/Input' filename='predictions_for_tableau.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.107q0kn047pqls19avodn1io96y1' name='predictions_for_tableau.csv' table='[predictions_for_tableau#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='new_cases' ordinal='4' />
            <column datatype='real' name='predicted' ordinal='5' />
            <column datatype='string' name='arima_model' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[predictions_for_tableau.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[predictions_for_tableau.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[predictions_for_tableau.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[predictions_for_tableau.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[predictions_for_tableau.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[predictions_for_tableau.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>predicted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[predicted]</local-name>
            <parent-name>[predictions_for_tableau.csv]</parent-name>
            <remote-alias>predicted</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arima_model</remote-name>
            <remote-type>129</remote-type>
            <local-name>[arima_model]</local-name>
            <parent-name>[predictions_for_tableau.csv]</parent-name>
            <remote-alias>arima_model</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk]&quot;' value='Real Cases (thin)' />
          <alias key='&quot;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:predicted:qk]&quot;' value='Prediction (bold)' />
        </aliases>
      </column>
      <column caption='max_date' datatype='datetime' name='[Calculation_1118581611083980819]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{ FIXED [location]: max(if [new_cases]&gt;0 then DATEADD(&apos;day&apos;, 0, [date]) END)}' />
      </column>
      <column caption='new_cases_cut' datatype='real' name='[Calculation_1118581611088285718]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [date]&lt;= DATEADD(&apos;day&apos;, 7, [Parameters].[Parameter 2]) THEN ([new_cases]) END' />
      </column>
      <column caption='last_full_week' datatype='datetime' name='[Calculation_1118581611130515480]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='If DATETRUNC(&apos;week&apos;,[Calculation_1118581611083980819])&lt;&gt; [Calculation_1118581611083980819] &#13;&#10;THEN DATEADD(&apos;day&apos;,-0,DATETRUNC(&apos;week&apos;,[Calculation_1118581611083980819])) &#13;&#10;ELSE [Calculation_1118581611083980819]&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[location]' role='dimension' type='nominal' />
      <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
      <column datatype='real' name='[predicted]' role='measure' type='quantitative' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1118581611088285718]' derivation='Sum' name='[sum:Calculation_1118581611088285718:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[predicted]' derivation='Sum' name='[sum:predicted:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1118581611088285718]' derivation='User' name='[usr:Calculation_1118581611088285718:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.416544' measure-ordering='alphabetic' measure-percentage='0.322009' parameter-percentage='0.261448' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:new_cases:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m3vwg5077pvbz1bksxis1j7semv].[usr:Calculation_1118581611088285718:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:predicted:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column alias='predict' caption='Prediction' datatype='date' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='#2020-11-22#'>
          <calculation class='tableau' formula='#2020-11-22#' />
          <aliases>
            <alias key='#2020-11-22#' value='predict' />
          </aliases>
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='[98] - Locations' inline='true' name='federated.1oj1ff50ycwa1h1gzrf681w40tvc' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='locations' name='textscan.0yiu33h1s64y8j1bo9s290botwzc'>
            <connection class='textscan' directory='C:/AIDA/CertProjCovid19/Tableau/Input' filename='locations.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0yiu33h1s64y8j1bo9s290botwzc' name='locations.csv' table='[locations#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='countriesAndTerritories' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='string' name='continent' ordinal='2' />
            <column datatype='date' date-parse-format='yyyy' name='population_year' ordinal='3' />
            <column datatype='integer' name='population' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[locations.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countriesAndTerritories</remote-name>
            <remote-type>129</remote-type>
            <local-name>[countriesAndTerritories]</local-name>
            <parent-name>[locations.csv]</parent-name>
            <remote-alias>countriesAndTerritories</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[locations.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[locations.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[population_year]</local-name>
            <parent-name>[locations.csv]</parent-name>
            <remote-alias>population_year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[locations.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='string' name='[countriesAndTerritories]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.354505' measure-ordering='alphabetic' measure-percentage='0.354505' parameter-percentage='0.29099' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='[99] - Measures' inline='true' name='federated.1tqx0su0ika3du183um0b12cwg8m' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='measures' name='excel-direct.1ieujvi18vc1d117z40pn0ei6epy'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/AIDA/CertProjCovid19/Tableau/Input/measures.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1ieujvi18vc1d117z40pn0ei6epy' name='Tabelle1' table='[Tabelle1$]' type='table'>
          <columns gridOrigin='A1:C367:no:A1:C367:0' header='yes' outcome='2'>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='measure' ordinal='1' />
            <column datatype='string' name='type' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>measure</remote-name>
            <remote-type>130</remote-type>
            <local-name>[measure]</local-name>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias>measure</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDE_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDE_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C367:no:A1:C367:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Event' datatype='real' datatype-customized='true' name='[Calculation_895371954195169286]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF NOT(ISNULL(MIN([measure])))&#13;&#10;THEN MIN([federated.0bdudug06c89yc164m65t1pbh640].[new_cases])+100&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.355982' measure-ordering='alphabetic' measure-percentage='0.322009' parameter-percentage='0.322009' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='federated.0bdudug06c89yc164m65t1pbh640'>
        <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[type]' filter-group='2'>
        <groupfilter function='member' level='[type]' member='&quot;Germany&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
    </datasource>
    <datasource caption='[02] - Country Details' inline='true' name='federated.05u4i471ywr5a811qiskp1vheq6p' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='country_details' name='textscan.0fyx4i60ummtbt1gslc391146wdz'>
            <connection class='textscan' directory='C:/AIDA/CertProjCovid19/Tableau/Input' filename='country_details.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0fyx4i60ummtbt1gslc391146wdz' name='country_details.csv' table='[country_details#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='string' name='nuts_1' ordinal='2' />
            <column datatype='string' name='nuts_2' ordinal='3' />
            <column datatype='integer' name='Pop Total' ordinal='4' />
            <column datatype='real' name='cases/100k pop.' ordinal='5' />
            <column datatype='real' name='cases' ordinal='6' />
            <column datatype='real' name='deaths' ordinal='7' />
            <column datatype='datetime' name='datetime' ordinal='8' />
            <column datatype='real' name='new_cases' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nuts_1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[nuts_1]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>nuts_1</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nuts_2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[nuts_2]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>nuts_2</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pop Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pop Total]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>Pop Total</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases/100k pop.</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases/100k pop.]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>cases/100k pop.</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>datetime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[datetime]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>datetime</remote-alias>
            <ordinal>8</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='JP-Departements' datatype='string' name='[Calculation_734086793217118210]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='tableau' formula='[nuts_2]' />
      </column>
      <column caption='max_cases_Bundesland' datatype='real' name='[Calculation_734086793298964485]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [nuts_1]: max([cases])}' />
      </column>
      <column caption='pop_Bundesländer' datatype='real' name='[Calculation_734086793304289287]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [nuts_1]: max([Calculation_734086793298964485])/max([cases/100k pop.])/10}' />
      </column>
      <column caption='max_JPN' datatype='real' name='[Calculation_734086793305341960]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Calculation_734086793217118210]: max([new_cases])}' />
      </column>
      <column caption='inc_per_1000_JPN' datatype='real' name='[Calculation_734086793306525705]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Calculation_734086793217118210]: max([Calculation_734086793305341960])/max([Pop Total])}' />
      </column>
      <column caption='inc_per_GER' datatype='real' name='[Calculation_734086793306796042]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [nuts_1]: max([Calculation_734086793298964485])/max([Calculation_734086793304289287])/1000}' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='datetime' name='[datetime]' role='dimension' type='ordinal' />
      <column datatype='string' name='[nuts_1]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[nuts_2]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal' />
      <column-instance column='[datetime]' derivation='Month' name='[mn:datetime:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_734086793217118210]' derivation='None' name='[none:Calculation_734086793217118210:nk]' pivot='key' type='nominal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[nuts_1]' derivation='None' name='[none:nuts_1:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (country,JP-Departements,MONTH(datetime))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:country:nk]' />
          <groupfilter function='level-members' level='[none:Calculation_734086793217118210:nk]' />
          <groupfilter function='level-members' level='[mn:datetime:ok]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='country, nuts_1'>
          <field>[country]</field>
          <field>[nuts_1]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.354505' measure-ordering='alphabetic' measure-percentage='0.447563' parameter-percentage='0.197932' rowDisplayCount='100000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:nuts_1:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Hamburg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thüringen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Baden-Württem­berg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rhein­land-Pfalz&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brandenburg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sachsen-Anhalt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kinki&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hessen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tohoku&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bremen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Schles­wig-Holstein&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nordrhein-Westfalen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Baden-Württemberg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rheinland-Pfalz&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niedersachsen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chubu&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Schleswig-Holstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kyushu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mecklenburg-Vor­pommern&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nordrhein-West­falen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Okinawa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hokkaido&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chugoku&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shikoku&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bayern&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saarland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mecklenburg-Vorpommern&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kanto&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Berlin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sachsen&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <filter class='categorical' column='[nuts_1]' filter-group='2'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[nuts_1]' />
          <groupfilter function='member' level='[nuts_1]' member='&quot;Repatriierte&quot;' />
        </groupfilter>
      </filter>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
      <column datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[date]' derivation='Day' name='[dy:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Week' name='[wk:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1tqx0su0ika3du183um0b12cwg8m'>
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[date]' derivation='Day' name='[dy:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Week' name='[wk:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-relationship source='federated.1778kex0kgg0m118q1p271qx5l7r' target='federated.1tqx0su0ika3du183um0b12cwg8m'>
      <column-mapping>
        <map key='[federated.1778kex0kgg0m118q1p271qx5l7r].[dy:date:ok]' value='[federated.1tqx0su0ika3du183um0b12cwg8m].[dy:date:ok]' />
        <map key='[federated.1778kex0kgg0m118q1p271qx5l7r].[mn:date:ok]' value='[federated.1tqx0su0ika3du183um0b12cwg8m].[mn:date:ok]' />
        <map key='[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:date:ok]' value='[federated.1tqx0su0ika3du183um0b12cwg8m].[tdy:date:ok]' />
        <map key='[federated.1778kex0kgg0m118q1p271qx5l7r].[tmn:date:ok]' value='[federated.1tqx0su0ika3du183um0b12cwg8m].[tmn:date:ok]' />
        <map key='[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:ok]' value='[federated.1tqx0su0ika3du183um0b12cwg8m].[twk:date:ok]' />
        <map key='[federated.1778kex0kgg0m118q1p271qx5l7r].[tyr:date:ok]' value='[federated.1tqx0su0ika3du183um0b12cwg8m].[tyr:date:ok]' />
        <map key='[federated.1778kex0kgg0m118q1p271qx5l7r].[wk:date:ok]' value='[federated.1tqx0su0ika3du183um0b12cwg8m].[wk:date:ok]' />
        <map key='[federated.1778kex0kgg0m118q1p271qx5l7r].[yr:date:ok]' value='[federated.1tqx0su0ika3du183um0b12cwg8m].[yr:date:ok]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Country Trend Lines' />
      <command command='tsc:brush'>
        <param name='field-captions' value='location' />
        <param name='target' value='Country Trend Lines' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Entire World' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='location' />
        <param name='target' value='Entire World' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 1' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Measures' />
      <command command='tsc:brush'>
        <param name='field-captions' value='location' />
        <param name='target' value='Measures' />
      </command>
    </action>
    <action caption='Highlight 3 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Further Ideas' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='location' />
        <param name='target' value='Further Ideas' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
          </datasources>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Global Cases' datatype='real' name='[Calculation_1118581611054268434]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([new_cases])' />
            </column>
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581611054268434]' derivation='User' name='[usr:Calculation_1118581611054268434:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='font-size' value='18' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' scope='rows' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#faf4e7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581611054268434:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3E2D8D12-0512-4811-9C4A-CD5439AD48D0}' />
    </worksheet>
    <worksheet name='Contamination'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>Global Contamination (p.M.)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
          </datasources>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Country' datatype='string' name='[Calculation_1118581610973171713]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[location]' />
            </column>
            <column caption='Global Contamination [p.M.]' datatype='real' name='[Calculation_1118581611050946576]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([new_cases])/SUM([Calculation_1118581611051085841])*1000000' />
            </column>
            <column caption='c_pop' datatype='real' name='[Calculation_1118581611051085841]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1118581610973171713]: AVG([population])}' />
            </column>
            <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581611050946576]' derivation='User' name='[usr:Calculation_1118581611050946576:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581611050946576:qk]' value='' />
            <format attr='text-align' value='center' />
            <format attr='font-size' value='18' />
            <format attr='text-align' data-class='total' scope='cols' value='right' />
            <format attr='text-align' data-class='subtotal' scope='cols' value='right' />
            <format attr='text-align' data-class='subtotal' scope='rows' value='right' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-align' data-class='total' scope='cols' value='right' />
            <format attr='text-align' data-class='subtotal' scope='cols' value='right' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' scope='cols' value='right' />
            <format attr='text-align' scope='rows' value='right' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5ead7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581611050946576:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C4B2F49C-4CF9-4A34-9D4E-D2F6CA68DBCD}' />
    </worksheet>
    <worksheet name='Country Trend Lines'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Top 10 Total' caption='Country Selection' datatype='string' name='[Measure to Show (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Top10_total&quot;'>
              <calculation class='tableau' formula='&quot;Top10_total&quot;' />
              <aliases>
                <alias key='&quot;Top10_total&quot;' value='Top 10 Total' />
              </aliases>
            </column>
            <column alias='New Deaths' caption='Measure' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;new_deaths&quot;'>
              <calculation class='tableau' formula='&quot;new_deaths&quot;' />
              <aliases>
                <alias key='&quot;new_cases&quot;' value='New Cases' />
                <alias key='&quot;new_cases_per_million&quot;' value='New Cases (p.M)' />
                <alias key='&quot;new_deaths&quot;' value='New Deaths' />
                <alias key='&quot;new_deaths_per_million&quot;' value='New Deaths (p.M)' />
                <alias key='&quot;total_cases&quot;' value='Total Cases' />
                <alias key='&quot;total_cases_per_million&quot;' value='Total Cases (p.M)' />
                <alias key='&quot;total_deaths&quot;' value='Total Deaths' />
                <alias key='&quot;total_deaths_per_million&quot;' value='Totals Deaths (p.M)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Filter_by_Paramter' datatype='boolean' name='[Calculation_1118581610995380228]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Measure to Show (copy)] = &quot;Top10_total&quot; THEN [Set 1]&#13;&#10;ELSEIF [Parameters].[Measure to Show (copy)] = &quot;Bottom10_total&quot; THEN [Top Countries by New Cases (copy)]&#13;&#10;END' />
            </column>
            <column caption='Measure_by_Selction' datatype='real' name='[Calculation_895371954178236418]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == &apos;new_cases&apos; THEN [new_cases]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_cases&apos; THEN [total_cases]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_deaths&apos; THEN [total_deaths]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;new_deaths&apos; THEN [new_deaths]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;new_cases_per_million&apos; THEN [new_cases_per_million]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_cases_per_million&apos; THEN [total_cases_per_million]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_deaths_per_million&apos; THEN [total_deaths_per_million]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;new_deaths_per_million&apos; THEN [new_deaths_per_million]&#13;&#10;ELSE Null&#13;&#10;END' />
            </column>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
            <column datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
            <column datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581610995380228]' derivation='None' name='[none:Calculation_1118581610995380228:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_895371954178236418]' derivation='Sum' name='[sum:Calculation_895371954178236418:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610995380228:nk]'>
            <groupfilter function='member' level='[none:Calculation_1118581610995380228:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]'>
            <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]' direction='DESC' using='[federated.1778kex0kgg0m118q1p271qx5l7r].[sum:new_cases:qk]' />
          <filter class='quantitative' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:date:qk]' included-values='in-range'>
            <min>#2019-12-31 00:00:00#</min>
            <max>#2020-11-29 00:00:00#</max>
          </filter>
          <filter class='quantitative' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:qk]' included-values='in-range'>
            <max>#2020-11-22 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]</column>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]</column>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:qk]</column>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610995380228:nk]</column>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[sum:Calculation_895371954178236418:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f7faf0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
            <format attr='background-color' value='#e9ebe0' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='8' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]' value='Country' />
          </style-rule>
        </style>
        <panes>
          <pane id='53' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.33983424305915833' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1778kex0kgg0m118q1p271qx5l7r].[sum:Calculation_895371954178236418:qk]</rows>
        <cols>[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:qk]</cols>
        <table-calculations>
          <partitionable-measures>
            <column>[federated.1tqx0su0ika3du183um0b12cwg8m].[max:measure:nk]</column>
          </partitionable-measures>
        </table-calculations>
      </table>
      <simple-id uuid='{14C8554F-5725-4836-B01D-C60AE6E84B0A}' />
    </worksheet>
    <worksheet name='Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
          </datasources>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Global Deaths' datatype='real' name='[Global Cases (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([new_deaths])' />
            </column>
            <column datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Global Cases (copy)]' derivation='User' name='[usr:Global Cases (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='font-size' value='18' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Global Cases (copy):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{71DA9CCE-0D82-4787-95B0-854142610CE6}' />
    </worksheet>
    <worksheet name='FirstCase Days'>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
          </datasources>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Country' datatype='string' name='[Calculation_1118581610973171713]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[location]' />
            </column>
            <column caption='first case' datatype='date' name='[Calculation_734086793138049024]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ FIXED [location]: min(if ([new_cases])&gt;0 THEN ([date]) END)}' />
            </column>
            <column datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Calculation_1118581610973171713]' derivation='CountD' name='[ctd:Calculation_1118581610973171713:qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581610973171713]' derivation='None' name='[none:Calculation_1118581610973171713:nk]' pivot='key' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_734086793138049024]' derivation='Day-Trunc' name='[tdy:Calculation_734086793138049024:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:Calculation_734086793138049024:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tdy:Calculation_734086793138049024:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='%null%' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2019-12-31 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-01 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-02 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-03 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-04 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-05 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-06 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-07 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-08 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-09 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-10 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-11 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-12 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-13 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-14 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-15 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-16 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-17 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-18 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-03-29 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-03-30 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-03-31 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-01 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-02 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-03 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-04 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-05 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-06 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-07 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-08 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-09 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-10 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-11 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-12 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-13 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-14 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-15 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-16 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-17 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-18 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-19 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-20 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-21 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-22 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-23 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-24 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-25 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-26 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-27 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-28 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-29 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-30 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-01 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-02 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-03 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-04 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-05 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-06 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-07 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-08 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-09 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-10 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-11 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-12 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-13 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-14 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-15 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-16 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-17 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-18 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-19 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-20 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-21 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-22 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-23 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-24 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-25 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-26 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-27 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-28 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-29 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-30 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-31 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-01 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-02 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-03 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-04 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-05 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-06 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-07 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-08 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-09 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-10 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-11 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-12 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-13 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-14 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-15 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-16 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-17 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-18 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-19 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-20 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-21 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-22 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-23 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-24 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-25 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-26 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-27 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-28 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-29 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-30 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-01 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-02 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-03 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-04 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-05 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-06 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-07 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-08 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-09 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-10 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-11 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-12 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-13 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-14 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-15 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-16 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-17 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-18 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-19 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-20 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-21 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-22 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-23 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-24 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-25 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-26 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-27 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-28 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-29 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-30 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-31 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-01 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-02 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-03 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-04 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-05 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-06 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-07 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-08 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-09 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-10 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-11 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-12 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-13 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-14 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-15 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-16 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-17 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-18 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-19 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-20 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-21 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-22 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-23 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-24 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-25 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-26 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-27 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-28 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-29 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-30 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-31 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-01 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-02 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-03 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-04 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-05 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-06 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-07 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-08 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-09 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-10 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-11 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-12 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-13 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-14 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-15 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-16 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-17 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-18 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-19 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-20 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-21 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-22 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-23 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-24 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-25 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-26 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-27 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-28 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-29 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-30 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-01 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-02 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-03 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-04 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-05 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-06 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-07 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-08 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-09 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-10 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-11 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-12 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-13 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-14 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-15 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-16 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-17 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-18 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-19 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-20 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-21 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-22 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-23 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-24 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-25 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-26 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-27 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-28 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-29 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-30 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-31 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-11-01 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-11-02 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-11-03 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-11-04 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-11-05 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-11-06 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-11-07 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-11-08 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-11-09 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-11-10 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-11-11 00:00:00#' />
              </groupfilter>
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[ctd:Calculation_1118581610973171713:qk]' field-type='quantitative' max='14' min='0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1778kex0kgg0m118q1p271qx5l7r].[ctd:Calculation_1118581610973171713:qk]</rows>
        <cols include-empty='true'>[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:Calculation_734086793138049024:ok]</cols>
      </table>
      <simple-id uuid='{8D420EB7-487F-4B24-BC93-DBAA0D2CE986}' />
    </worksheet>
    <worksheet name='FirstCase List'>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
          </datasources>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Country' datatype='string' name='[Calculation_1118581610973171713]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[location]' />
            </column>
            <column caption='first case' datatype='date' name='[Calculation_734086793138049024]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ FIXED [location]: min(if ([new_cases])&gt;0 THEN ([date]) END)}' />
            </column>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581610973171713]' derivation='None' name='[none:Calculation_1118581610973171713:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_734086793138049024]' derivation='Day-Trunc' name='[tdy:Calculation_734086793138049024:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:Calculation_734086793138049024:ok] / [federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{84D17366-7932-432A-9CC7-C96DE638CCCC}' />
    </worksheet>
    <worksheet name='FirstCase Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>World Map </run>
            <run bold='true' fontsize='10'>(Incidence per M.)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Country' datatype='string' name='[Calculation_1118581610973171713]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[location]' />
            </column>
            <column caption='Period' datatype='string' name='[Calculation_1118581610988412931]' role='measure' type='nominal'>
              <calculation class='tableau' formula='str(DATEPART(&apos;day&apos;,min([date]))) + &apos;.&apos; +&#13;&#10;str(DATEPART(&apos;month&apos;,min([date]))) + &apos;.-&apos; +&#13;&#10;str(DATEPART(&apos;day&apos;,max([date]))) + &apos;.&apos; +&#13;&#10;str(DATEPART(&apos;month&apos;,max([date])))+ &apos;.&apos; +&#13;&#10;str(DATEPART(&apos;year&apos;,max([date]))) + &apos; (CW &apos; +&#13;&#10;str(DATEPART(&apos;week&apos;,max([date]))) + &apos;)&apos;' />
            </column>
            <column caption='has first case' datatype='boolean' name='[Calculation_734086793146056705]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[total_cases]&gt;0' />
            </column>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[iso_code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;OWID_KOS&quot;' value='&quot;Kosovo&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Calculation_1118581610973171713]' derivation='None' name='[none:Calculation_1118581610973171713:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_734086793146056705]' derivation='None' name='[none:Calculation_734086793146056705:nk]' pivot='key' type='nominal' />
            <column-instance column='[iso_code]' derivation='None' name='[none:iso_code:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
            <column datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581610988412931]' derivation='User' name='[usr:Calculation_1118581610988412931:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[Longitude (generated)]' field-type='quantitative' max='25260974.208058458' min='-21622584.531280968' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[Latitude (generated)]' field-type='quantitative' max='18320348.585919134' min='-8793860.9368053228' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#faf4e7' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:iso_code:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_734086793146056705:nk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:iso_code:nk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581610988412931:nk]' />
              <geometry column='[federated.1778kex0kgg0m118q1p271qx5l7r].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run>&lt;[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>New Cases:&#9;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Cases:&#9;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Period:&#9;</run>
                <run>&lt;[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581610988412931:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1778kex0kgg0m118q1p271qx5l7r].[Latitude (generated)]</rows>
        <cols>[federated.1778kex0kgg0m118q1p271qx5l7r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:date:ok]</column>
        </pages>
        <page-trail-options size='5' />
      </table>
      <simple-id uuid='{10F84087-277F-422D-9731-2B75A622EBAE}' />
    </worksheet>
    <worksheet name='FirstCase Weeks'>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
          </datasources>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Country' datatype='string' name='[Calculation_1118581610973171713]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[location]' />
            </column>
            <column caption='first case' datatype='date' name='[Calculation_734086793138049024]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ FIXED [location]: min(if ([new_cases])&gt;0 THEN ([date]) END)}' />
            </column>
            <column datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Calculation_1118581610973171713]' derivation='CountD' name='[ctd:Calculation_1118581610973171713:qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581610973171713]' derivation='None' name='[none:Calculation_1118581610973171713:nk]' pivot='key' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_734086793138049024]' derivation='Week-Trunc' name='[twk:Calculation_734086793138049024:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1778kex0kgg0m118q1p271qx5l7r].[ctd:Calculation_1118581610973171713:qk]</rows>
        <cols include-empty='true'>[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:Calculation_734086793138049024:ok]</cols>
      </table>
      <simple-id uuid='{EE8553B7-E5CF-4D3F-9A2E-18069B50E98F}' />
    </worksheet>
    <worksheet name='Germany'>
      <table>
        <view>
          <datasources>
            <datasource caption='[10] - predictions_for_tableau' name='federated.0m3vwg5077pvbz1bksxis1j7semv' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='predict' caption='Prediction' datatype='date' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='#2020-11-22#'>
              <calculation class='tableau' formula='#2020-11-22#' />
              <aliases>
                <alias key='#2020-11-22#' value='predict' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0m3vwg5077pvbz1bksxis1j7semv'>
            <column caption='new_cases_cut' datatype='real' name='[Calculation_1118581611088285718]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [date]&lt;= DATEADD(&apos;day&apos;, 7, [Parameters].[Parameter 2]) THEN ([new_cases]) END' />
            </column>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' type='nominal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[predicted]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581611088285718]' derivation='Sum' name='[sum:Calculation_1118581611088285718:qk]' pivot='key' type='quantitative' />
            <column-instance column='[predicted]' derivation='Sum' name='[sum:predicted:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:date:qk]' filter-group='3' included-values='in-range'>
            <min>#2020-01-28#</min>
            <max>#2020-12-13#</max>
          </filter>
          <filter class='categorical' column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;Germany&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]' filter-group='4' included-values='in-range'>
            <min>#2020-02-06 00:00:00#</min>
            <max>#2020-12-07 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]</column>
            <column>[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:date:qk]</column>
            <column>[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]' scope='cols' value='' />
            <format attr='display' class='0' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:predicted:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#ffaaff' />
            <format attr='fill-below' id='refline0' value='#f5f5f5' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[:Measure Names]' value='Data Type'>
              <formatted-text>
                <run bold='true' underline='true'>Data Type</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]' enable-instant-analytics='true' formula='max' id='refline0' label-type='automatic' scope='per-table' value-column='[Parameters].[Parameter 2]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.25187844038009644' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:predicted:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2.7292816638946533' />
                <format attr='mark-transparency' value='111' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.49375692009925842' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:predicted:qk] + [federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk])</rows>
        <cols>([federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk] * [federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk])</cols>
      </table>
      <simple-id uuid='{176BD3CC-3B83-4194-ABBD-6CBF19E2AE99}' />
    </worksheet>
    <worksheet name='Incidence Germany'>
      <table>
        <view>
          <datasources>
            <datasource caption='[02] - Country Details' name='federated.05u4i471ywr5a811qiskp1vheq6p' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.05u4i471ywr5a811qiskp1vheq6p'>
            <column caption='max_cases_Bundesland' datatype='real' name='[Calculation_734086793298964485]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [nuts_1]: max([cases])}' />
            </column>
            <column caption='pop_Bundesländer' datatype='real' name='[Calculation_734086793304289287]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [nuts_1]: max([Calculation_734086793298964485])/max([cases/100k pop.])/10}' />
            </column>
            <column caption='inc_per_GER' datatype='real' name='[Calculation_734086793306796042]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [nuts_1]: max([Calculation_734086793298964485])/max([Calculation_734086793304289287])/1000}' />
            </column>
            <column-instance column='[Calculation_734086793298964485]' derivation='Attribute' name='[attr:Calculation_734086793298964485:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[cases/100k pop.]' role='measure' type='quantitative' />
            <column datatype='real' name='[cases]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[nuts_1]' derivation='None' name='[none:nuts_1:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[nuts_1]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_734086793306796042]' derivation='Sum' name='[sum:Calculation_734086793306796042:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;DE&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306796042:qk]' max='20.0' min='0.0' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306796042:qk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[none:nuts_1:nk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[attr:Calculation_734086793298964485:qk]' />
              <geometry column='[federated.05u4i471ywr5a811qiskp1vheq6p].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05u4i471ywr5a811qiskp1vheq6p].[Latitude (generated)]</rows>
        <cols>[federated.05u4i471ywr5a811qiskp1vheq6p].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DDE45985-81FA-4913-B132-3FE7C74168B1}' />
    </worksheet>
    <worksheet name='Incidence Japan'>
      <table>
        <view>
          <datasources>
            <datasource caption='[02] - Country Details' name='federated.05u4i471ywr5a811qiskp1vheq6p' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.05u4i471ywr5a811qiskp1vheq6p'>
            <column caption='JP-Departements' datatype='string' name='[Calculation_734086793217118210]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='[nuts_2]' />
            </column>
            <column caption='max_JPN' datatype='real' name='[Calculation_734086793305341960]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_734086793217118210]: max([new_cases])}' />
            </column>
            <column caption='inc_per_1000_JPN' datatype='real' name='[Calculation_734086793306525705]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_734086793217118210]: max([Calculation_734086793305341960])/max([Pop Total])}' />
            </column>
            <column datatype='integer' name='[Pop Total]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_734086793305341960]' derivation='Attribute' name='[attr:Calculation_734086793305341960:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pop Total]' derivation='Attribute' name='[attr:Pop Total:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='datetime' name='[datetime]' role='dimension' type='ordinal' />
            <column-instance column='[datetime]' derivation='Month' name='[mn:datetime:ok]' pivot='key' type='ordinal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_734086793217118210]' derivation='None' name='[none:Calculation_734086793217118210:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[nuts_2]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal' />
            <column-instance column='[Calculation_734086793306525705]' derivation='Sum' name='[sum:Calculation_734086793306525705:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;JPN&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.05u4i471ywr5a811qiskp1vheq6p].[Longitude (generated)]' field-type='quantitative' max='16028687.421921618' min='13668122.533477323' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.05u4i471ywr5a811qiskp1vheq6p].[Latitude (generated)]' field-type='quantitative' max='5988748.8580266945' min='2396371.607427855' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]' max='20.0' min='0.0' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[none:Calculation_734086793217118210:nk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[attr:Pop Total:qk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[attr:Calculation_734086793305341960:qk]' />
              <geometry column='[federated.05u4i471ywr5a811qiskp1vheq6p].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05u4i471ywr5a811qiskp1vheq6p].[Latitude (generated)]</rows>
        <cols>[federated.05u4i471ywr5a811qiskp1vheq6p].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.05u4i471ywr5a811qiskp1vheq6p].[mn:datetime:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{40D81D85-AC5E-4766-81C0-964C6E668E17}' />
    </worksheet>
    <worksheet name='Incidence Japan (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='[02] - Country Details' name='federated.05u4i471ywr5a811qiskp1vheq6p' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.05u4i471ywr5a811qiskp1vheq6p'>
            <column caption='JP-Departements' datatype='string' name='[Calculation_734086793217118210]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='[nuts_2]' />
            </column>
            <column caption='max_JPN' datatype='real' name='[Calculation_734086793305341960]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_734086793217118210]: max([new_cases])}' />
            </column>
            <column caption='inc_per_1000_JPN' datatype='real' name='[Calculation_734086793306525705]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_734086793217118210]: max([Calculation_734086793305341960])/max([Pop Total])}' />
            </column>
            <column datatype='integer' name='[Pop Total]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_734086793305341960]' derivation='Attribute' name='[attr:Calculation_734086793305341960:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pop Total]' derivation='Attribute' name='[attr:Pop Total:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='datetime' name='[datetime]' role='dimension' type='ordinal' />
            <column-instance column='[datetime]' derivation='Month' name='[mn:datetime:ok]' pivot='key' type='ordinal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_734086793217118210]' derivation='None' name='[none:Calculation_734086793217118210:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[nuts_2]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal' />
            <column-instance column='[Calculation_734086793306525705]' derivation='Sum' name='[sum:Calculation_734086793306525705:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;JPN&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.05u4i471ywr5a811qiskp1vheq6p].[Longitude (generated)]' field-type='quantitative' max='16028687.421921618' min='13668122.533477323' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.05u4i471ywr5a811qiskp1vheq6p].[Latitude (generated)]' field-type='quantitative' max='5988748.8580266945' min='2396371.607427855' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[none:Calculation_734086793217118210:nk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[attr:Pop Total:qk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[attr:Calculation_734086793305341960:qk]' />
              <geometry column='[federated.05u4i471ywr5a811qiskp1vheq6p].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05u4i471ywr5a811qiskp1vheq6p].[Latitude (generated)]</rows>
        <cols>[federated.05u4i471ywr5a811qiskp1vheq6p].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.05u4i471ywr5a811qiskp1vheq6p].[mn:datetime:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{DA90F943-8E45-4492-9CBF-ACA179D28AE8}' />
    </worksheet>
    <worksheet name='Measures'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
            <datasource name='Parameters' />
            <datasource caption='[99] - Measures' name='federated.1tqx0su0ika3du183um0b12cwg8m' />
            <datasource caption='[01a] - owid-covid-data - original' name='federated.0bdudug06c89yc164m65t1pbh640' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='New Deaths' caption='Measure' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;new_deaths&quot;'>
              <calculation class='tableau' formula='&quot;new_deaths&quot;' />
              <aliases>
                <alias key='&quot;new_cases&quot;' value='New Cases' />
                <alias key='&quot;new_cases_per_million&quot;' value='New Cases (p.M)' />
                <alias key='&quot;new_deaths&quot;' value='New Deaths' />
                <alias key='&quot;new_deaths_per_million&quot;' value='New Deaths (p.M)' />
                <alias key='&quot;total_cases&quot;' value='Total Cases' />
                <alias key='&quot;total_cases_per_million&quot;' value='Total Cases (p.M)' />
                <alias key='&quot;total_deaths&quot;' value='Total Deaths' />
                <alias key='&quot;total_deaths_per_million&quot;' value='Totals Deaths (p.M)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0bdudug06c89yc164m65t1pbh640'>
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Measure_by_Selction' datatype='real' name='[Calculation_895371954178236418]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == &apos;new_cases&apos; THEN [new_cases]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_cases&apos; THEN [total_cases]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_deaths&apos; THEN [total_deaths]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;new_deaths&apos; THEN [new_deaths]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;new_cases_per_million&apos; THEN [new_cases_per_million]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_cases_per_million&apos; THEN [total_cases_per_million]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_deaths_per_million&apos; THEN [total_deaths_per_million]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;new_deaths_per_million&apos; THEN [new_deaths_per_million]&#13;&#10;ELSE Null&#13;&#10;END' />
            </column>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
            <column datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
            <column datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_895371954178236418]' derivation='Sum' name='[sum:Calculation_895371954178236418:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1tqx0su0ika3du183um0b12cwg8m'>
            <column caption='Event' datatype='real' datatype-customized='true' name='[Calculation_895371954195169286]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF NOT(ISNULL(MIN([measure])))&#13;&#10;THEN MIN([federated.0bdudug06c89yc164m65t1pbh640].[new_cases])+100&#13;&#10;END' />
            </column>
            <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal' />
            <column-instance column='[measure]' derivation='Min' name='[min:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_895371954195169286]' derivation='User' name='[usr:Calculation_895371954195169286:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;Germany&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:qk]' included-values='in-range'>
            <max>#2020-11-22 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]</column>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]</column>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[sum:Calculation_895371954178236418:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.1tqx0su0ika3du183um0b12cwg8m].[usr:Calculation_895371954195169286:qk]' field-type='quantitative' fold='true' max='300.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1tqx0su0ika3du183um0b12cwg8m].[usr:Calculation_895371954195169286:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1tqx0su0ika3du183um0b12cwg8m].[usr:Calculation_895371954195169286:qk]' value='#c0c0c0' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#d4d4d4' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
            <format attr='background-color' value='#c0c0c0' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='8' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-weight' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane id='53' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.33983424305915833' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='54' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1778kex0kgg0m118q1p271qx5l7r].[sum:Calculation_895371954178236418:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.2853591442108154' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='55' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1tqx0su0ika3du183um0b12cwg8m].[usr:Calculation_895371954195169286:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1tqx0su0ika3du183um0b12cwg8m].[min:measure:nk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-labels-show' value='true' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-color' value='#ff0000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1778kex0kgg0m118q1p271qx5l7r].[sum:Calculation_895371954178236418:qk] + [federated.1tqx0su0ika3du183um0b12cwg8m].[usr:Calculation_895371954195169286:qk])</rows>
        <cols>[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:qk]</cols>
        <table-calculations>
          <partitionable-measures>
            <column>[federated.1tqx0su0ika3du183um0b12cwg8m].[max:measure:nk]</column>
          </partitionable-measures>
        </table-calculations>
      </table>
      <simple-id uuid='{2C53DE37-A85A-4B87-B8E8-FD64D017589A}' />
    </worksheet>
    <worksheet name='Others'>
      <table>
        <view>
          <datasources>
            <datasource caption='[10] - predictions_for_tableau' name='federated.0m3vwg5077pvbz1bksxis1j7semv' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='predict' caption='Prediction' datatype='date' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='#2020-11-22#'>
              <calculation class='tableau' formula='#2020-11-22#' />
              <aliases>
                <alias key='#2020-11-22#' value='predict' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0m3vwg5077pvbz1bksxis1j7semv'>
            <column caption='new_cases_cut' datatype='real' name='[Calculation_1118581611088285718]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [date]&lt;= DATEADD(&apos;day&apos;, 7, [Parameters].[Parameter 2]) THEN ([new_cases]) END' />
            </column>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' type='nominal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[predicted]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581611088285718]' derivation='Sum' name='[sum:Calculation_1118581611088285718:qk]' pivot='key' type='quantitative' />
            <column-instance column='[predicted]' derivation='Sum' name='[sum:predicted:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:date:qk]' filter-group='3' included-values='in-range'>
            <min>#2020-01-28#</min>
            <max>#2020-12-13#</max>
          </filter>
          <filter class='categorical' column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]'>
            <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]' filter-group='4' included-values='in-range'>
            <min>#2020-02-06 00:00:00#</min>
            <max>#2020-12-07 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]</column>
            <column>[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:date:qk]</column>
            <column>[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]' scope='cols' value='' />
            <format attr='display' class='0' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:predicted:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#ffaaff' />
            <format attr='fill-below' id='refline0' value='#f5f5f5' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' value='Countries'>
              <formatted-text>
                <run bold='true' fontcolor='#000000' underline='true'>Countries</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' value='Available Countries'>
              <formatted-text>
                <run bold='true' underline='true'>Available Countries</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]' enable-instant-analytics='true' formula='max' id='refline0' label-type='automatic' scope='per-table' value-column='[Parameters].[Parameter 2]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.25187844038009644' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:predicted:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2.5966851711273193' />
                <format attr='mark-transparency' value='103' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.25187844038009644' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:predicted:qk] + [federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk])</rows>
        <cols>[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]</cols>
      </table>
      <simple-id uuid='{843320CD-36A1-40D6-9B76-15B60098C0B1}' />
    </worksheet>
    <worksheet name='Sheet 15'>
      <table>
        <view>
          <datasources>
            <datasource caption='[02] - Country Details' name='federated.05u4i471ywr5a811qiskp1vheq6p' />
          </datasources>
          <datasource-dependencies datasource='federated.05u4i471ywr5a811qiskp1vheq6p'>
            <column datatype='datetime' name='[datetime]' role='dimension' type='ordinal' />
            <column-instance column='[nuts_1]' derivation='None' name='[none:nuts_1:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[nuts_1]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[datetime]' derivation='Hour-Trunc' name='[thr:datetime:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05u4i471ywr5a811qiskp1vheq6p].[none:nuts_1:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols>[federated.05u4i471ywr5a811qiskp1vheq6p].[thr:datetime:qk]</cols>
      </table>
      <simple-id uuid='{BE7442EB-7C4C-4AB9-8729-20A3B6B0BD6A}' />
    </worksheet>
    <worksheet name='Sheet 16'>
      <table>
        <view>
          <datasources>
            <datasource caption='[10] - predictions_for_tableau' name='federated.0m3vwg5077pvbz1bksxis1j7semv' />
          </datasources>
          <datasource-dependencies datasource='federated.0m3vwg5077pvbz1bksxis1j7semv'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m3vwg5077pvbz1bksxis1j7semv].[tdy:date:ok]</rows>
        <cols>[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{212A2F5F-C71F-451C-B376-09B52CEAF242}' />
    </worksheet>
    <worksheet name='Sheet 17'>
      <table>
        <view>
          <datasources>
            <datasource caption='[02] - Country Details' name='federated.05u4i471ywr5a811qiskp1vheq6p' />
          </datasources>
          <datasource-dependencies datasource='federated.05u4i471ywr5a811qiskp1vheq6p'>
            <column caption='max_cases_Bundesland' datatype='real' name='[Calculation_734086793298964485]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [nuts_1]: max([cases])}' />
            </column>
            <column caption='pop_Bundesländer' datatype='real' name='[Calculation_734086793304289287]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [nuts_1]: max([Calculation_734086793298964485])/max([cases/100k pop.])/10}' />
            </column>
            <column datatype='real' name='[cases/100k pop.]' role='measure' type='quantitative' />
            <column datatype='real' name='[cases]' role='measure' type='quantitative' />
            <column-instance column='[nuts_1]' derivation='None' name='[none:nuts_1:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[nuts_1]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_734086793304289287]' derivation='Sum' name='[sum:Calculation_734086793304289287:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.05u4i471ywr5a811qiskp1vheq6p].[none:nuts_1:nk] / [federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793304289287:ok])</rows>
        <cols />
      </table>
      <simple-id uuid='{D7B30ACA-4000-4237-837A-BFE519798EF8}' />
    </worksheet>
    <worksheet name='World Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Incidence per Million</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Country' datatype='string' name='[Calculation_1118581610973171713]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[location]' />
            </column>
            <column caption='Period' datatype='string' name='[Calculation_1118581610988412931]' role='measure' type='nominal'>
              <calculation class='tableau' formula='str(DATEPART(&apos;day&apos;,min([date]))) + &apos;.&apos; +&#13;&#10;str(DATEPART(&apos;month&apos;,min([date]))) + &apos;.-&apos; +&#13;&#10;str(DATEPART(&apos;day&apos;,max([date]))) + &apos;.&apos; +&#13;&#10;str(DATEPART(&apos;month&apos;,max([date])))+ &apos;.&apos; +&#13;&#10;str(DATEPART(&apos;year&apos;,max([date]))) + &apos; (CW &apos; +&#13;&#10;str(DATEPART(&apos;week&apos;,max([date]))) + &apos;)&apos;' />
            </column>
            <column caption='Top 10 Countries' datatype='real' name='[Calculation_1118581611048226829]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF RANK(SUM([new_cases]))&lt;=10 &#13;&#10;THEN SUM([new_cases])&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Log_per_M' datatype='real' name='[Calculation_895371954159882240]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ISNULL(SUM([new_cases_per_million])) THEN 0&#13;&#10;ELSE LOG(SUM([new_cases_per_million]))&#13;&#10;END' />
            </column>
            <column datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[iso_code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;OWID_KOS&quot;' value='&quot;Kosovo&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581610973171713]' derivation='None' name='[none:Calculation_1118581610973171713:nk]' pivot='key' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[iso_code]' derivation='None' name='[none:iso_code:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1118581610988412931]' derivation='User' name='[usr:Calculation_1118581610988412931:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1118581611048226829]' derivation='User' name='[usr:Calculation_1118581611048226829:qk:7]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[federated.1778kex0kgg0m118q1p271qx5l7r].[Calculation_1118581610973171713]' />
                <order field='[federated.1778kex0kgg0m118q1p271qx5l7r].[iso_code]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_895371954159882240]' derivation='User' name='[usr:Calculation_895371954159882240:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]'>
            <groupfilter function='level-members' level='[none:continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:ok]'>
            <groupfilter function='level-members' level='[twk:date:ok]' />
          </filter>
          <slices>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]</column>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[Longitude (generated)]' field-type='quantitative' max='27214127.567261592' min='-13042102.722800465' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[Latitude (generated)]' field-type='quantitative' max='12718585.506073151' min='-8520234.090090245' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:ok]' value='*yyyy\ \Www' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_895371954159882240:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#dfedeb' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_895371954159882240:qk]' value='false' />
            <format attr='in-tooltip' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:ok]' value='false' />
            <format attr='in-tooltip' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:iso_code:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]' value='Focus' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='Calender Week' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_895371954159882240:qk]' />
              <text column='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581611048226829:qk:7]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:iso_code:nk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[sum:new_cases:qk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[max:total_cases:qk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581610988412931:nk]' />
              <geometry column='[federated.1778kex0kgg0m118q1p271qx5l7r].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run>&lt;[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>New Cases:&#9;</run>
                <run>&lt;[federated.1778kex0kgg0m118q1p271qx5l7r].[sum:new_cases:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Total Cases:&#9;</run>
                <run>&lt;[federated.1778kex0kgg0m118q1p271qx5l7r].[max:total_cases:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Period:&#9;</run>
                <run>&lt;[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581610988412931:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1778kex0kgg0m118q1p271qx5l7r].[Latitude (generated)]</rows>
        <cols>[federated.1778kex0kgg0m118q1p271qx5l7r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:ok]</column>
        </pages>
        <page-trail-options size='5' />
      </table>
      <simple-id uuid='{293BE3CA-DC7F-4449-B709-AA166CA4AB7A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Entire World'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#00000000' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Top 10 Total' caption='Country Selection' datatype='string' name='[Measure to Show (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Top10_total&quot;'>
          <calculation class='tableau' formula='&quot;Top10_total&quot;' />
          <aliases>
            <alias key='&quot;Top10_total&quot;' value='Top 10 Total' />
          </aliases>
          <members>
            <member alias='Top 10 Total' value='&quot;Top10_total&quot;' />
            <member value='&quot;Bottom10_total&quot;' />
          </members>
        </column>
        <column alias='New Deaths' caption='Measure' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;new_deaths&quot;'>
          <calculation class='tableau' formula='&quot;new_deaths&quot;' />
          <aliases>
            <alias key='&quot;new_cases&quot;' value='New Cases' />
            <alias key='&quot;new_cases_per_million&quot;' value='New Cases (p.M)' />
            <alias key='&quot;new_deaths&quot;' value='New Deaths' />
            <alias key='&quot;new_deaths_per_million&quot;' value='New Deaths (p.M)' />
            <alias key='&quot;total_cases&quot;' value='Total Cases' />
            <alias key='&quot;total_cases_per_million&quot;' value='Total Cases (p.M)' />
            <alias key='&quot;total_deaths&quot;' value='Total Deaths' />
            <alias key='&quot;total_deaths_per_million&quot;' value='Totals Deaths (p.M)' />
          </aliases>
          <members>
            <member alias='New Cases' value='&quot;new_cases&quot;' />
            <member alias='Total Cases' value='&quot;total_cases&quot;' />
            <member alias='New Deaths' value='&quot;new_deaths&quot;' />
            <member alias='Total Deaths' value='&quot;total_deaths&quot;' />
            <member alias='New Cases (p.M)' value='&quot;new_cases_per_million&quot;' />
            <member alias='Total Cases (p.M)' value='&quot;total_cases_per_million&quot;' />
            <member alias='New Deaths (p.M)' value='&quot;new_deaths_per_million&quot;' />
            <member alias='Totals Deaths (p.M)' value='&quot;total_deaths_per_million&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
        <column datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='99250' id='18' param='horz' type='layout-flow' w='99400' x='300' y='375'>
            <zone h='99250' id='16' type='layout-basic' w='99400' x='300' y='375'>
              <zone h='40260' id='5' param='horz' type='layout-flow' w='24430' x='300' y='15421'>
                <zone fixed-size='160' h='40260' id='4' is-fixed='true' param='vert' type='layout-flow' w='24430' x='300' y='15421'>
                  <zone fixed-size='60' forceUpdate='true' h='8500' id='15' is-fixed='true' type='text' w='23130' x='500' y='16296'>
                    <formatted-text>
                      <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='15'>Global</run>
                      <run fontalignment='1'>Æ&#10;</run>
                      <run fontalignment='1' fontcolor='#000000' fontsize='10'>(as of 28.11.2020)</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='background-color' value='#eae0ce' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='77' h='10211' id='12' is-fixed='true' name='Cases' w='23130' x='500' y='24796'>
                    <layout-cache type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='background-color' value='#f5ead7' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='102' h='10211' id='13' is-fixed='true' name='Contamination' w='23130' x='500' y='35007'>
                    <layout-cache type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='background-color' value='#f5ead7' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='91' h='10213' id='14' is-fixed='true' name='Deaths' w='23130' x='500' y='45218'>
                    <layout-cache type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='background-color' value='#f5ead7' />
                    </zone-style>
                  </zone>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='1' />
                    <format attr='margin-top' value='6' />
                    <format attr='margin-right' value='10' />
                    <format attr='margin-bottom' value='1' />
                    <format attr='background-color' value='#f5ead7' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='55306' id='1' name='World Map' w='74970' x='24730' y='375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='1' />
                  <format attr='margin-left' value='0' />
                  <format attr='padding' value='1' />
                  <format attr='background-color' value='#dfedeb' />
                </zone-style>
              </zone>
              <zone h='34569' id='8' name='Country Trend Lines' w='81804' x='300' y='55681'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='1' />
                  <format attr='margin-top' value='7' />
                  <format attr='padding' value='1' />
                  <format attr='background-color' value='#e8edda' />
                </zone-style>
              </zone>
              <zone h='28499' id='9' name='Country Trend Lines' pane-specification-id='53' param='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]' type='color' w='17596' x='82104' y='71126'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='1' />
                  <format attr='padding' value='2' />
                  <format attr='background-color' value='#e8edda' />
                </zone-style>
              </zone>
              <zone h='15445' id='10' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='17596' x='82104' y='55681'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='1' />
                  <format attr='margin-top' value='7' />
                  <format attr='padding' value='3' />
                  <format attr='background-color' value='#e8edda' />
                </zone-style>
              </zone>
              <zone fixed-size='48' h='15046' id='7' is-fixed='true' name='World Map' synchronized='1' trailctrls='0' type='currpage' w='24430' x='300' y='375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='1' />
                  <format attr='margin-right' value='0' />
                  <format attr='padding' value='12' />
                  <format attr='background-color' value='#dfedeb' />
                </zone-style>
              </zone>
              <zone h='9375' id='19' name='Country Trend Lines' param='[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:date:qk]' type='filter' values='database' w='81804' x='300' y='90250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='2' />
                  <format attr='padding' value='2' />
                  <format attr='background-color' value='#e8edda' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='0' />
            <format attr='padding' value='3' />
            <format attr='background-color' value='#c0c0c0' />
          </zone-style>
        </zone>
        <zone h='6625' id='11' mode='compact' param='[Parameters].[Measure to Show (copy)]' type='paramctrl' w='16000' x='82300' y='63125'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='padding' value='3' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{0E103314-0984-450D-9216-0F2645B4D9EA}' />
    </dashboard>
    <dashboard name='Further Ideas'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='New Deaths' caption='Measure' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;new_deaths&quot;'>
          <calculation class='tableau' formula='&quot;new_deaths&quot;' />
          <aliases>
            <alias key='&quot;new_cases&quot;' value='New Cases' />
            <alias key='&quot;new_cases_per_million&quot;' value='New Cases (p.M)' />
            <alias key='&quot;new_deaths&quot;' value='New Deaths' />
            <alias key='&quot;new_deaths_per_million&quot;' value='New Deaths (p.M)' />
            <alias key='&quot;total_cases&quot;' value='Total Cases' />
            <alias key='&quot;total_cases_per_million&quot;' value='Total Cases (p.M)' />
            <alias key='&quot;total_deaths&quot;' value='Total Deaths' />
            <alias key='&quot;total_deaths_per_million&quot;' value='Totals Deaths (p.M)' />
          </aliases>
          <members>
            <member alias='New Cases' value='&quot;new_cases&quot;' />
            <member alias='Total Cases' value='&quot;total_cases&quot;' />
            <member alias='New Deaths' value='&quot;new_deaths&quot;' />
            <member alias='Total Deaths' value='&quot;total_deaths&quot;' />
            <member alias='New Cases (p.M)' value='&quot;new_cases_per_million&quot;' />
            <member alias='Total Cases (p.M)' value='&quot;total_cases_per_million&quot;' />
            <member alias='New Deaths (p.M)' value='&quot;new_deaths_per_million&quot;' />
            <member alias='Totals Deaths (p.M)' value='&quot;total_deaths_per_million&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='43899' id='7' param='horz' type='layout-flow' w='98400' x='800' y='6000'>
            <zone h='43899' id='5' type='layout-basic' w='98400' x='800' y='6000'>
              <zone h='43899' id='3' name='Measures' w='98400' x='800' y='6000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='0' />
                  <format attr='background-color' value='#f5eddc' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='45125' id='11' name='FirstCase Map' w='49200' x='800' y='53875'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='0' />
              <format attr='background-color' value='#dfedeb' />
            </zone-style>
          </zone>
          <zone h='40250' id='14' name='FirstCase Weeks' w='49200' x='50000' y='58750'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='0' />
              <format attr='background-color' value='#e9ebe0' />
            </zone-style>
          </zone>
          <zone h='3976' id='13' name='FirstCase Map' synchronized='1' type='currpage' w='49200' x='800' y='49899'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='0' />
              <format attr='background-color' value='#dfedeb' />
            </zone-style>
          </zone>
          <zone h='8851' id='15' name='FirstCase Weeks' pane-specification-id='0' param='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]' type='color' w='49200' x='50000' y='49899'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='0' />
              <format attr='background-color' value='#e9ebe0' />
            </zone-style>
          </zone>
          <zone h='5000' id='16' type='layout-flow' w='24200' x='800' y='1000'>
            <zone h='5000' id='9' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='24200' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='0' />
                <format attr='background-color' value='#f5eddc' />
              </zone-style>
            </zone>
          </zone>
          <zone h='5000' id='17' type='empty' w='74200' x='25000' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='0' />
              <format attr='background-color' value='#f5eddc' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='21' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='5000' id='9' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='24200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5eddc' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43899' id='3' is-fixed='true' name='Measures' w='98400' x='800' y='6000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5eddc' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45125' id='11' is-fixed='true' name='FirstCase Map' w='49200' x='800' y='53875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#dfedeb' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40250' id='14' is-fixed='true' name='FirstCase Weeks' w='49200' x='50000' y='58750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#e9ebe0' />
                  </zone-style>
                </zone>
                <zone h='8851' id='15' name='FirstCase Weeks' pane-specification-id='0' param='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]' type='color' w='49200' x='50000' y='49899'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#e9ebe0' />
                  </zone-style>
                </zone>
                <zone h='3976' id='13' name='FirstCase Map' synchronized='1' type='currpage' w='49200' x='800' y='49899'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#dfedeb' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1EC93D55-9EB1-4DDC-947C-6F3E1A3AF36D}' />
    </dashboard>
    <dashboard name='GER vs. JP'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='12' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='10' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='98000' id='5' param='horz' type='layout-flow' w='25300' x='800' y='1000'>
                <zone h='98000' id='3' type='layout-basic' w='25300' x='800' y='1000'>
                  <zone h='98000' id='1' name='Incidence Germany' w='25300' x='800' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='98000' id='8' name='Incidence Japan' w='34100' x='26100' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98000' id='9' name='Incidence Japan (2)' w='39000' x='60200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#f5eddc' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#c0c0c0' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{BB08DFD7-0D06-483C-A217-A8D46F41E42C}' />
    </dashboard>
    <dashboard name='Predictions'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#c0c0c0' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='[10] - predictions_for_tableau' name='federated.0m3vwg5077pvbz1bksxis1j7semv' />
      </datasources>
      <datasource-dependencies datasource='federated.0m3vwg5077pvbz1bksxis1j7semv'>
        <column datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[location]' role='dimension' type='nominal' />
        <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
        <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='10' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='92988' id='13' param='horz' type='layout-flow' w='98400' x='800' y='6012'>
            <zone h='92988' id='11' type='layout-basic' w='98400' x='800' y='6012'>
              <zone h='35819' id='9' name='Germany' w='79299' x='800' y='6012'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='1' />
                </zone-style>
              </zone>
              <zone h='40919' id='15' name='Others' w='79292' x='800' y='41831'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='1' />
                  <format attr='padding' value='1' />
                </zone-style>
              </zone>
              <zone h='11150' id='17' name='Others' pane-specification-id='3' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' type='color' w='79292' x='800' y='87850'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='1' />
                  <format attr='padding' value='3' />
                </zone-style>
              </zone>
              <zone h='51476' id='16' mode='radiolist' name='Others' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' type='filter' w='19108' x='80092' y='47524'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='1' />
                  <format attr='padding' value='2' />
                </zone-style>
              </zone>
              <zone fixed-size='160' h='35819' id='12' is-fixed='true' param='vert' type='layout-flow' w='19101' x='80099' y='6012'>
                <zone fixed-size='209' h='11939' id='35' is-fixed='true' type='empty' w='19101' x='80099' y='6012'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='151' h='11939' id='36' is-fixed='true' type='empty' w='19101' x='80099' y='17951'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='246' h='11941' id='14' is-fixed='true' name='Germany' pane-specification-id='3' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[:Measure Names]' type='color' w='19101' x='80099' y='29890'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='1' />
                    <format attr='padding' value='2' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='5100' id='32' name='Germany' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]' type='filter' values='database' w='79292' x='800' y='82750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5693' id='33' type='empty' w='19108' x='80092' y='41831'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='5012' id='34' type='text' w='98400' x='800' y='1000'>
            <formatted-text>
              <run fontalignment='1' fontcolor='#000000' fontsize='14'>Predictions</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#c0c0c0' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='43' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='44' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone forceUpdate='true' h='5012' id='34' type='text' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#000000' fontsize='14'>Predictions</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5100' id='32' name='Germany' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]' type='filter' values='database' w='79292' x='800' y='82750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35819' id='9' is-fixed='true' name='Germany' w='79299' x='800' y='6012'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='246' h='11941' id='14' name='Germany' pane-specification-id='3' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[:Measure Names]' type='color' w='19101' x='80099' y='29890'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='51476' id='16' mode='dropdown' name='Others' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' type='filter' w='19108' x='80092' y='47524'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40919' id='15' is-fixed='true' name='Others' w='79292' x='800' y='41831'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11150' id='17' name='Others' pane-specification-id='3' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' type='color' w='79292' x='800' y='87850'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{21D71AB9-2291-4A51-B9D6-0FB3CA552D40}' />
    </dashboard>
  </dashboards>
  <windows source-height='130'>
    <window class='worksheet' name='World Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]' type='filter' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-11-23 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:iso_code:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581610988412931:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581610997878789:nk:1]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_895371954159882240:qk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <geo-search-visibility value='1' />
        <map-scale-visibility value='0' />
        <default-map-tool-selection tool='2' />
        <default-map-unit-selection mapunit='1' />
      </viewpoint>
      <simple-id uuid='{C82F291A-36DF-42AB-9E8A-73EAAF6D5B80}' />
    </window>
    <window class='worksheet' name='Country Trend Lines'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' values='relevant' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Measure to Show (copy)]' type='parameter' />
            <card pane-specification-id='53' param='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Measure Parameter]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[Set 1]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610995380228:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_895371954196762632:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[sum:Calculation_895371954183909380:ok]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_895371954183909380:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[yr:date:ok]</field>
            <field>[federated.1tqx0su0ika3du183um0b12cwg8m].[none:measure:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{C115E562-9AA1-49B5-A3D9-3825217E3F29}' />
    </window>
    <window class='worksheet' maximized='true' name='Cases' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E460A1DF-F399-4B33-9D8A-C9480C666619}' />
    </window>
    <window class='worksheet' name='Contamination' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581611050946576:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>8025.3656870252471</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{2E3508AF-546B-428B-86F2-8168CD7BACDB}' />
    </window>
    <window class='worksheet' name='Deaths' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{78D9CEA4-F7B1-4D7C-9051-A710DAC29089}' />
    </window>
    <window class='dashboard' name='Entire World'>
      <viewpoints>
        <viewpoint name='Cases'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Contamination'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Country Trend Lines'>
          <zoom type='entire-view' />
          <highlight field='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Deaths'>
          <zoom type='fit-width' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581611054268434:qk]</field>
                    <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Global Cases (copy):qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>62269170.0</value>
                  <value>1453422.0</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='World Map'>
          <current-page>
            <multibucket>
              <bucket>#2020-08-24 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{8E9C89E4-3012-4A5F-A6FE-6FF7DF161484}' />
    </window>
    <window class='worksheet' name='Incidence Germany'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306796042:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>11</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:Calculation_734086793217118210:nk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:nuts_1:nk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793230741508:qk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306796042:qk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:cases:qk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[yr:datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BFCFF678-AAB7-4E8B-AD22-9539D66FE4A1}' />
    </window>
    <window class='worksheet' name='Incidence Japan'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>11</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:Calculation_734086793217118210:nk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:Calculation_734086793299320838:qk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:nuts_1:nk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793230741508:qk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:cases:qk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[yr:datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0FC8A249-8D9D-4A91-9DFE-102C28D0699A}' />
    </window>
    <window class='worksheet' name='Incidence Japan (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>11</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:Calculation_734086793217118210:nk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:Calculation_734086793299320838:qk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:nuts_1:nk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793230741508:qk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:cases:qk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[yr:datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C426DAF9-35F4-4D3B-9BF9-344762FC9885}' />
    </window>
    <window class='dashboard' name='GER vs. JP'>
      <viewpoints>
        <viewpoint name='Incidence Germany'>
          <current-page>
            <multibucket>
              <bucket>11</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Incidence Japan'>
          <current-page>
            <multibucket>
              <bucket>11</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Incidence Japan (2)'>
          <current-page>
            <multibucket>
              <bucket>11</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{6E065582-64DD-4549-84CA-FBAF7C4B6FCA}' />
    </window>
    <window class='worksheet' name='Germany'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='3' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[:Measure Names]</field>
            <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:date:qk]</field>
            <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]</field>
            <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[yr:Calculation_1118581611130515480:ok]</field>
            <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DAE77FF8-4501-4D6A-9100-E871A0BE9E9C}' />
    </window>
    <window class='worksheet' name='Others'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' type='filter' />
            <card pane-specification-id='3' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]</field>
            <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[yr:Calculation_1118581611130515480:ok]</field>
            <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5FBD9C64-D9A3-48D2-8297-CD24AA559EDE}' />
    </window>
    <window class='dashboard' name='Predictions'>
      <viewpoints>
        <viewpoint name='Germany'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Others'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{1FDD80D1-DFFC-4A72-93EE-390090653271}' />
    </window>
    <window class='worksheet' name='Measures'>
      <cards>
        <edge name='left'>
          <strip size='212'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Measure Parameter]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[Set 1]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610995380228:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_895371954196762632:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[sum:Calculation_895371954183909380:ok]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_895371954183909380:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[yr:date:ok]</field>
            <field>[federated.1tqx0su0ika3du183um0b12cwg8m].[none:measure:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{698ED573-2CDD-4028-88FD-3F9463813F77}' />
    </window>
    <window class='worksheet' name='FirstCase Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_734086793146056705:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-07-19 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_734086793146056705:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:iso_code:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581610988412931:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581610997878789:nk:1]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_895371954159882240:qk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <geo-search-visibility value='1' />
        <map-scale-visibility value='0' />
        <default-map-tool-selection tool='2' />
        <default-map-unit-selection mapunit='1' />
      </viewpoint>
      <simple-id uuid='{74449D2E-FA6E-41C3-B7D8-B26C061DC757}' />
    </window>
    <window class='worksheet' name='FirstCase Weeks'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:Calculation_734086793138049024:ok]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[yr:Calculation_734086793138049024:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{56B464AE-E2F1-4714-9923-6E814F935025}' />
    </window>
    <window class='dashboard' name='Further Ideas'>
      <viewpoints>
        <viewpoint name='FirstCase Map'>
          <current-page>
            <multibucket>
              <bucket>#2020-03-26 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
          <geo-search-visibility value='1' />
          <map-scale-visibility value='0' />
          <default-map-unit-selection mapunit='1' />
        </viewpoint>
        <viewpoint name='FirstCase Weeks'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Measures'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='13' />
      <simple-id uuid='{B09C2B8B-FDB0-4473-A8B6-274CD9C0252A}' />
    </window>
    <window class='worksheet' name='FirstCase List'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[yr:Calculation_734086793138049024:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1B237090-B4E5-4143-BF1D-E0A0FCD9A7B8}' />
    </window>
    <window class='worksheet' name='FirstCase Days'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:Calculation_734086793138049024:ok]</field>
                </fields>
                <multibucket>
                  <bucket>#2020-01-18 00:00:00#</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:Calculation_734086793138049024:ok]</field>
                </fields>
                <multibucket>
                  <bucket>#2020-01-17 00:00:00#</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:Calculation_734086793138049024:ok]</field>
                </fields>
                <multibucket>
                  <bucket>#2020-01-16 00:00:00#</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:Calculation_734086793138049024:ok]</field>
                </fields>
                <multibucket>
                  <bucket>#2020-01-15 00:00:00#</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:Calculation_734086793138049024:ok]</field>
                </fields>
                <multibucket>
                  <bucket>#2020-01-14 00:00:00#</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:Calculation_734086793138049024:ok]</field>
                </fields>
                <multibucket>
                  <bucket>#2020-01-13 00:00:00#</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:Calculation_734086793138049024:ok]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[yr:Calculation_734086793138049024:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{26815C8D-4B5C-44A8-9CFF-1353FC70DE7D}' />
    </window>
    <window class='worksheet' name='Sheet 15'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.05u4i471ywr5a811qiskp1vheq6p].[none:nuts_1:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:nuts_1:nk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[yr:datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B42CC69F-7163-4DB5-A83F-B541373D5805}' />
    </window>
    <window class='worksheet' name='Sheet 16'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]</field>
            <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{59F29725-24E3-4472-8F37-94320C92F59E}' />
    </window>
    <window class='worksheet' name='Sheet 17'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:Calculation_734086793299320838:nk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:nuts_1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0D3676C3-AC52-4E1A-803F-1FF0EF638494}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='38' name='Cases' width='144'>
      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
      hUb9Or2eg5kncXJyIib64UVTnU7Hzl0Z3LxdzgtTJ7RYK/o1yMm7woWsXEaOiDFb6HyQlu6j
      RqNh2+ff4OLizMjhMUZjrRKQi7OYpEWzUatrmT1vKRcv5aLRatHpdBRcKWJu4goAXo2fYrCI
      eQXXcHN1NhCVpWzZnsagkVPYsj3NoL2yspo7ZXfp0jm4VdnG85PHMmzwABYteZdd3x5oOrNJ
      ZVUkp2xkz75MXp/5YtMhX6WuZeFbq9myPY2y8gp0Oh06vZ6S0lssXvIue/cfJWnhaybDaF7+
      VUaNf4m/JSSZDRutRattZO+Bo3h5Shg+JNqiMS7OYt5YMAtZZRXLVq7j5q07wC/Xvi6V/17I
      ZvHfZxq9B4M2+JzDz9eHf61/mz17M0lel8qdO+UAeHt7MmHsUzw3/mmjcrxUWkllVQ3TXp77
      UP9DB/VnedK8h9rdr2ek7d5P2u79Ldq6OItZu+rNpmwK7r3zmTv7ZWIGRrLt891s2LQDjVaL
      i7OYAf37kPrRaoMMUSx2YsYrz7NzVwaz5i4xqH8NjulH4rwZJssGD2PpO+/z3ckzZvuWPvB3
      eGiIUXmk+EYJ5/57iWlTx+HtZXzDzdE+wJfUj1bzybavmDknCblC2fQ5x8YPV/56n3MI/H8j
      fJEoYBWCgASsQhCQgFUIAhKwiv8BEKiaGBr75g0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='38' name='Contamination' width='84'>
      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
      JJkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Country Trend Lines' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='38' name='Deaths' width='144'>
      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
      P0S/WhxQTgibAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Entire World' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='FirstCase Days' width='192'>
      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
      jQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='FirstCase List' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='FirstCase Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='FirstCase Weeks' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Further Ideas' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='GER vs. JP' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9149kWXon9rs+vMmISFNZ6cpXl+uurjbT3Rw/5CyXwyGXxK5WBHZBPUiA
      BOhJEKB/QJAAvelVELQQdkEtlks7dDOcmSa7q7u6urq8ycxK7zMyvLtxrR6ivpMnbtyIjMjM
      6upZ9g9IZGbENeeee853vu/3mSO4ruvia3yNf6IQX3UDvsbXeJWQ6Y8PP/zwVbbja3yNVwKZ
      /+db3/rWq2rHK8O9e/dQKpVw7do1JBKJV92c/yKwvLyMlZUVTE1NYXp6+lU3pye+VoG+xj9p
      fD0BvsY/abRNgM3FJehdDsxls3Be/D37+AmMQ9xsef4pPv/8NtZ38oc4+yVDL2Jxs+D7lVEr
      oVR78cTVLTxcOVz711fXDtu6X1ksLi51+cZBNptj/z18/ORQ1z9sn5rVLD7+/FG7DbC1tIzQ
      qRk8uPkhbKh44+13sfjkLhw1hnhERQouHty5jSezK5h67Ry+uH0HoaERxFQH27kilGAMZ8aT
      ePBkAdNnziO7Ng9bjeHaa+fQLKxio6bg/RtvwXVdbK8tYWVjF5ev38Dm4hNYcgxWZRcN3YAU
      CEOQNFyYGsaT50tIpMcgm2UUyg2EExlIbhOnT5/G0tIKZmamD9UBHdCLWMq50PcWoRsWRiYv
      wKntYHuvhgtnRmAoYSzOPUFxexmN9HXMP3mAYlPAjYsn8Q9fzENVFLx74wru3r6D2PA4FLuK
      rVwNN956E7LQusX62jo0BVhZ38L4zAXkN+fQaJiYOHcVRmEDW9kCLlx9E/MPP4NlAxfeeBvx
      gNy73V9xLC0tQ4aBXLGGYGwI48kAniys48z516A3a8hv1/F8PYtCpYZMbH9MPLt3i/XBzuIT
      1BwV08NRzC+v49SFq0jHggBafZoZiuDhswXEUiPQnBpypRqiyRGkIxIWVtYxMj6DemETNd3A
      0MgkpseH8fkXj3Hjg2/7q0AWJFwcUzA3/wwlcRiXL5zB+voa8ot3II1ewtmZCSx+cRNbuotb
      t25ha30bF1+/jnIhiy/uPsXb77yNqLGOe0sFPLl9CxUbqOa2EU2P4vnTh/jJT3+Ojz++CUm0
      cPOTO3g0u4ALZ6ZQ1Q1cnUlC10bRrBThOg4cB7j/4D62dnN4/fp15HZWkd9cxerCY5Sd8LG/
      sGK1ges33sbqwiMsbezirbfegF3cQrbawMZOCdevXgSsAm7eeor8wj0839iFFJ+AYul49sXn
      GL50HWemT+LmzZtAbQO3Hq63Xd+2LECQcO/+PZRrTdx4513MPfwClm1BEmq4d/c5Ghbw9sUx
      PFrcO/bnexVY387i9evXUchu4O7T53jn7RtIxUNYX1/D4/klvH3jOiIBpW1MsD6Ym8duScQb
      ly/go5sfQ5IkfHrzk7brO44Dx3Vx7/4DbO7mcP36m9heW4JjW3Ah4MG9+8gWq7h+/QY2VhcA
      AKagQBO72ACCKAAQIEcyKK0/xaNnrZOCiREsPvwMCysbSI2dRFAErl69CggiBAEABKSTIXx2
      +zZKdhDpiIJzl64iIAGpmavYeviPKNabiEVjOHlyHJACuHL5HIZHRtC6I9cGAM8X5iBIEiRJ
      giAI7Jg337mBP/mbT3H1dOaYX9X+s0MAREvH55/fgwkAkFAt7uDeo1lADmN8LIH0zGs4EZVf
      tE1AZmIUT2/fxsLKBsbHT0KJjePidApmo4zbn30KMRzH/MJzSJIEURRRzu/is1ufIpoaw/P5
      BUiaBtF1IAhiW1/8qkMQW+8OApAMKbh9+3Pky3UAgOQYuHP3HqoNs21MsD6QI9BL67j36Bkm
      Tp6E4wJXr14BADy+dxtV08HiwnO4ogRZkmAbdXzx+W04cqDVp5IESRQhCDTUX/SsY8EFIJAn
      +MMPP/yVoUE3l+ewmjPw7puXj3ytV0mDfvLpx/jGu+9/qff8MvAqadB++7S4MY/lehC/kgrm
      ielzODH9qltxdPyXOPhfNfrt08T4WUwXi1/ToF/jny4SiUT7CtBsNl9VW145TNP8J/38xwnH
      aRHmtm1/5fu0bQKYpglFUWAYBkzThG3b0HUdmqbBtm0AgOu6sG0bqqqCAkkFQYAgCHBdl33G
      B5kKgoBmswlN0+A4DjueziEj13Vd1nmmaUKWZViWBUmS0Gg0EA6H265Pf0uSxM7z3leSJDSb
      Tciy3NZeL8rlMkzTHLgDbduG67pQVXXgc73gn+koEMXWws6/k4OuS+fQb2D/2QRBQDweh6Zp
      KBaLMAyDfQ4AiqIglUqx/y3LAgDU63XkcvtcP//eRVFk7QOAYrHIbDBvm+kcACiVSshkMuwe
      XnjHoOM4Hc8uiiJM02yREfwXpmnCsizYtg3LstiE4Buiqiosy4JhGDAMo+NG3gbQd7IswzRN
      9iC2bcM0TRiGAdu22QCuVCrQdZ0dD7QGZygU8u0U6kRvx9J9XNdt+4w/h3/ZfpPCi1qt1vGZ
      oihoNBqQJMn3HO99+XsSur2ow4B/joOuR8d6f/PnCoKAcDiMYDAISZKgaVrbMa7rsnFz0L34
      +3jv6e0/7zuk/pEkCbrezV3bHxzH2Z/w/BeGYaBWq6Fer6PZbDJpDbRmDc2cUCiEQCDAJCxd
      1Cv9+Yek8+l/x3GgKAo0TYPrupBlGZVKBYlEAsFgkB2j6zpGRkYgiiKbJPQi+E7q1XndOp4f
      IDSZu8GyLIRCITSbzbbz6Pp+A8Bv4tEzfBnwm2w8/FZrx3Ha3qWqqohGo6zfgsGg72pHq0I3
      ePuBh23bB/Y/nZdIJFAsFqEoCiRJgizL7Hevc70g4drWQ9RhNDBJzeFVDdu2IUkSG7SWZXVI
      fO+Lp+9pkNBkcF0XwWAQqVQKANjqQsdrmoZAIADLstoGjm3bTCXze0jvxKPJ7FWPeNCKJEkS
      DMOAruvQdZ3ZBiR9QqEQDMNgzyAIAiKRCHZ2dvpaRV4mvCpPv5ONFxb0m/4mQUeQJAnhcLsD
      0nVd6LrecwL0Uj9lWYaiKF1XcR6WZSGdTmNnZwe5XA7ZbBaFQgFPnz5tcf6SBEVR2p6t2z0B
      jw3Az3rvrBRFEZZl+XaWV6ryKwffCE3TYJom6vU6m8FkG9Dgp4FK14pGo9jb20MkEmH3c12X
      DUK+7d0GIHUuANY2moAEetGVSgXBYJBd2zCMtkFAE98wDKiqytRCWZY7+sYP3pXnIAyycnRb
      gfs5j1cj+fMCgUDH8fTueCFEquxBq043dJPg3tWb/h8aGmrr73g8jq2tLYiiiEqlgvPnzzNV
      qVt/i6LYvgKQlJNlmakhdKAgCLBtG7FYrE3Sm6bZJg15VYd/CHqJsiyzAQ+0BiTZGt620DnU
      Lu/KQlAUBeFwGIFAAIlEAuFwmKlmNMG8UsyvU2RZRigUapOkZAPxxyuKglKp1DbgZFnusCl4
      aebtD/45u70gP115EPDC5KBreNVGAL7vkr7n1Vn6rJca000Font5V3TvOXQsr6LR347jwLIs
      DA8PY3h4GJOTk1hZWWFCib8GnUtET9u0i0ajCAZbQUaVSgWqqqLZbLa9TP4haYB0m/l+urJX
      NaK/aUKQZOZ/yFjWdZ21j+9ETdMQCoXgOA4kSYKqqggGg8jlcpBlmbEZNJGA1mDvpTfyL8EP
      iqKwZ3YcB8lkEvl8HrFYjD1HN/uE75t+VoujGsfdVgY/lZDv93A43FUNIXWWv0Y3Fs3PBiNU
      KhWIoohQKOR7jvceXiKE/563w8bHx7Gzs4Ph4WH2Od8OWtnaRgBv0CqKAl3X2Ut2XZcxREBr
      AJA17Td7efAShVYS3urndWlaSkkXpwFNKwepZqIoIhgMwnVdNgH5ScizUjSQ+EHpOE5fHLX3
      hdHzelcRMtJVVe0YCPwK6GXJDuq3Xsd41biDVhKvmshPMD8Vy0/9AVoD3e9eJGj87k/t87PV
      SL09qO3d2uq3ehmGgWQyib29PWbE02rBj5MOsU3GDOlP/MVFUWTqRK+O77b08ywOqTSxWIyp
      P2R8F4tFrK2tQVVV1mD6TRMhEAiwDiUGwnVdlEolGIbBDF/2oJ72HGQk+kkr+t80zTYVkRCL
      xVAul7saXv1+xrexV/v43wdNlF5t6taGbp93u1ev/vQbD/V6vcOgPir4SeK6LpLJJARBwMbG
      BgKBQMeq3zEBRFFso5X4l04OJ++DkpPJMIw2Q5g3iPkXFovFIMsyEokENE3bt8hlGeVyGbIs
      Y2pqCvl8HrlcDqlUqq3TefqLGCTXdbG3t4dAIIBms4lqtcqkNd8pjuP4skh+4AcO/a3rOpP0
      PKhP+lGrCL0GXz/nAgevEr0GMf/jh259xD8jL029bB1vE/o9K6+SHoR+WC3vc5B2oCgKotGo
      L1Xd8bbq9TpbBXh1wbvs+7ETvPOK7AVeiouiiEQi0dVrKggtv0IymYTjOKhUKm1sA9+BxBqR
      /thoNBAIBKBpGvvJ5/NspfF2Xr9shfelmabJiADvSqiqKnK5HERR7DpBvEv6YdHv6tVN5fG+
      R6DTJuh2Dy/7xv/tVSv9DOlGo8FYxUHh12cH9SXviPW2RfYeSHw4f3EKfQD2DSDSP3npyHc6
      3RRoSRJZlhEOhzvYHi/S6TTq9Trq9Tqmp6dZp/IvUhRF5h+oVCqIxWLI5/NIJpOwbRuNRqNN
      etm23SbJLcs6UP/305n563g7nZ6ZbBa/61F/9gvvBOv3HD7MwNtWb7t72Q3kk+mmCvqdX6/X
      ux4LtAa/LMtoNpt9S3/+ufpZuXmQ7Ur2QCwWaxNGbdOh28X55UdRFEQiEaYqeY+j39RgAEzN
      IYrxIEiSBMuyUKvVfD2MRKOSVzKXyzGmiO5LNgw5wgzDYFSpbdvMjvADT/GRBBNFEfV6nUn/
      bv1Ek90Lv+f2qpOHVYf4dvMSjp7Pj+05CK7rdjjB/OBVbXpRoRTiQkJwkBWAF67dGLZe8As1
      EQTBnwXyHmQYBqMN+aWRAtUOQiAQQCwW67vRqqq2MVJe0CokyzICgQBM00QymYRpmiiVSh0O
      OzJYc7kcFEVhA7QXYwF0qknegc1LaJr0tBoRHTqI5PfTYfuBn8ojSRJbyYl56+c6dF+SnAet
      2P22i7zpdD0iM74sNBqNNulPwqLtjZJq0Wg02l4sDTL6n74jjyg9lN8L0zRtoMEP7NsCfAQq
      z0Tx9yF7xTRNlMvlDqOb2hkKhRAOh+E4Dnu+g2hDL8rlchs3zqsYdA5N3Hx+v3JEs9nExMRE
      B3fuZ5scBn76Pj/g+51IXnWnX+8zr3L53Ys8//yA77b69gJvdw6qGmqahlKphHg8zq4F+BjB
      4XAYoiiiVquxmxAnz4MkBA1UP++vKIptgVSDwHs96mi+jbquo1arMfWEP5b/LcsyarUaUqkU
      Go1GT/aF9x14QRPZO/D5Z6ZVgLcV6vU61tfXGYkwOjraJp2PYgx77+33LINMMt447sZo+bWX
      /B/ee9VqtTa152WhlzChSZPJZLCzs8N8WMlksnMCCILAVIZardYR18ODj+P3QpZlJJPJgQwd
      Ht3ijqgjyVCmz/kX5/2bgvqq1SqzE/jrep+f/yFQiLj3WH4SeNtBn6mqyiJaG40GNjc3MTo6
      2tVxNAiOQqP2WgF5etoLbz9omsYEnWmaqFQqAFp9dpw8P09keCf2QawYCepIJMJ8SJVKxT8n
      mCaBoiio1+sol8ttzIZfx1WrVRYzrihKK91sAE7ci6GhIeTzeba60D3J2OUNVS9lxw8KokiD
      wSAMw+i5fHYb/IKwHyTnNSi99+42Gcn3IMsy0uk0isVim2rYz0Sg63ULO+nF1vg9p/e+/Od8
      cJ8X/ASgFY8EHS/wDiv8jhv8s1L4PdDyQPccobIsIxqNIhAItPkH/Gi0eDzOgtri8fiRBj+w
      75DrxUzRg/FBX15dVNM06LoOy7LQaDQO1ZZqtdqzYgQfE+SVTH6DjSRsLpdj4cW9JDnPqPET
      wLs6+60+fpKxn8nWbeV3HKdNHe6lTnaDt52DwCtwDgIfROmHA71BgrAfqNZNQgItejQYDCIe
      j7eFHx8W/CD2c7zw+q3XyUTfm6aJQqHAEmt4W8HPYOtGsfXzLN0MQK+woDbLsoxMJnNgMof3
      ubwslfedeAd/L8rWj3Win26UNR8PBrQEzKAh0Px9DoNuY9DvuIMo077FNKXFkV3ABxZFo9E2
      6vI4QGqYZVlQVRX1er1Dvwf8qUPS8xVFQSaTgWmaKBaLjP/30yFJT+Q7i4z8QViUbpPAr51E
      5/qd4zeoDloljsOY5okPP1AcF6lB3ihOv2vVajVIksSYn6O0lV8NBUHoaUf14y/oewLwAWt0
      cz655GWAoj/9oiv92BryZFP6IiXRV6tVAPsONtIFe+WWEqPRaDT6ZjC6eSp7SeFkMolCodDm
      YPOT5vyzCoLAKF/btjEyMtLRR0eRsJTo0+0ZQ6EQyuVyR/aVF41Gg42RbDaLdDrtG84+KPyI
      Dr9j+hmXA49cPriJ9KuXBfJL8MwNUWrdXq6iKOx7okp5o43O8w5+fsDRJKIqFoM4kQbRiXlV
      gD/fK7mor4nOzWaziMfjSKVSzLj2qjuHHfyyLCMej3d9r2S/AC0uv9f7D4VCbOVOp9MdfXTY
      ScCrvn72gF8f8n3N981XvjKcKIpQFIXFoPeK5OQZF0q39A4ETdM60ikBtA3+RqPBYtTJtukH
      3diVg87hj/e+OMq6y+fzEEUR8XgciUSCxSXJssxUUV7vP8wEIOr6oBWP2nhQKRjXdVkSE1/S
      5ijgB3+v6/GkAR3He4EBn1CIVwEyVnsZzn7J90D74KG/TdNkktsv4I06wctmAGB1kPgEjV46
      bq9n6hdkl9i23eEdFQQBpVIJAJDJZNomOH+M996HGWgUqduPusdHBRwETdOYB55vo5exG2RF
      IAnfLY2St+X4+9BvPlrglU0AUi1Ix+4mTURRRCQSYZ1OeQm8Ecs/rDfbzI9yo++DwSDK5TIA
      sOyzozhuevHuvQy1eDyO9fV1BAIBJs15ijedTvueT6oahfoeJkSAQETGQXDdlme734lGdC+R
      D9VqtW0yEwYZ/PxA9ruO37X483i8kglg2zaKxSLrxH6kjrfqAJ877B3c3XRhL5XISyWKLj0q
      SDrxL6fbQOGPPXnyZBvHz7evm5FH55OD77CQJGmgZyebStf1nhG+RCIMDQ2x90QJ7LyQOqwt
      QH3HD27eadrrunTcK5kAfJwRsJ9i2A2CICAUCsE0Tei63jGbaSL45er2wssw4Aeh+PwGez8G
      NzFblPc6aIw8D6KbBxmE1G7KvKPYLC/IkeoVBOQHGVT18bab1B3636sVeP0nXgoVeAWb5FFZ
      RYK3A7ota1TqhB6UVBZg3zDy6n789f2M04P8Fl5fwSA46KXybFq/4Fc8CgE/yuAHWkxOJBI5
      1AQAWsKsWzWIbu+RWL3j8l3wK7qXGeINZn4sMNLhyHcfAK7r+tbX5Jf6SqXiO+goB5gYIU3T
      WFgzb+R4KTD+Mz4/uNls+ralWq0e6aXQvQ6iiL1Ot4NA7aYln4oXHwWqqvakPP3gx6/3Smzh
      E4r4wXeYdEiyG/3oT6+w8tKeXrqYxstLU4G8jAUZTzynT+BDLXrlDgSDwbZq1YFAgA1ikmLe
      jiGd03Ecdr5lWYhEIm3Hlstl5nOo1+sYHh5mbRoUvD7qN5kHHfzAfrYZvehgMHjkXIJQKDSw
      GsiXPKdzyaPd7bm8tlosFmNxUKS2kkATBAHJZNL33ryg5AWdn0Hutf26rTYvZQJQri7NdH5A
      qKrK0hQJfKJEr4FBTi7i8R3HQTQaRaFQYDU8g8EgY0WoKFY4HGZ+hFAo1BHPArRYkEajAVVV
      GfV5WOOsF0/NS1A/WrfbPfmXTNGt/LmDQhCEQ2Vk0cojCK06Ts1mE7quM3vEG9fEt5tvK5VT
      J1+BJElIJBKMYaK+4IPy+EHsVXu88Ko8dI5XRT72CeA4DkqlEhynVVyLSqCUy2WmGvBe2EGD
      qcgY5hkFyvKRJAn1ep3FnVDiNb/cdou9IQqVUhm9EqQfZoHO8/M48tfir+E13PzsAv5alJzk
      3SthUAQCgUPFblFbqRofcfyVSsU3H7pX2+g73v8RiURQr9fZeyJSg/IT+JWE77tutKq3r4HW
      yiXLMlZXV49/AlBFBmowOaXohx+AgnCwN9EL8szScsnzwUTLkeSnSUDwLoN+UaakLtVqNSQS
      ibbO7mdF4CW8d5XxFhLgJwMfSu2VXN5r0zFH4f17VWPrBXo2WsmB/XL1vdQQoP8wET/nY61W
      Y+Uo/aht7/38bBXSQqrVKnRdx/Dw8PEbwZQjTOpPs9nsGAi9JORBIMcYX06bEIvFWGVrYL/E
      o5+qAbQbb7Sq0PLOb8gxaDu9ktxrAPod7/2bJgPPYEiShFqt1mG/DApSEw8DMu69gotqMXXD
      YelOgtfAJTW22zvyI0JUVcXW1haCwSAymdYWu8c+AXhOmfhqUkX4BpEk61VGo5caQaoTfy+/
      yFG/c3n+mKBpGiKRCKtDSqEUvP0y6AskiU8/QLt94CexeMPOO/hpqyhyPh1mUBE3f9jBKMsy
      E0DeZ+22Yh2m77ygPHW+8JpXSPD3BDpXINrcheLEgGOeAFRGg2oHUQMoCblcLrMkdmITDsrl
      7MUIUdplPzqhKIq+GzsQvO0Ih8O+ecmDwMs7e2k4foD7MRrelaRWq7H9sQ67MkWj0SNl65Hx
      2++AppDoo0IQBJaPwtPefA1bvmSm1xajiRKLxVhF6mOnQamEOV8rn7h/121tdgG0EtqJbSHH
      GEnZfmPvaUmj8uyCILRVrKP2UFts22aUqeM4TBrw16NzeQncLTXQD15JRL9p8BN4lYzaTsf6
      6a5A++48fA3WQUDprV8WiBqt1+uHtjmAVj9RIjsJU0Fo1XkiVdVPiHjfHU0SPqTm2I1gcjjw
      VCPPctDD8JK1WCwCaEnpoaGhvlgh0zTZbjP04GR/0H3IHtB1nSV58HVG/RJieM46kUiwCgd8
      KK1pmhgaGup6Ll2fN3C9xxG8Rp33M/qdz+dZ+XjvNQ6CILT8K/1W5vPi0YP7uHz1Gvb29rD5
      8B7CqTROXbl24LVkWW7b+ecwoSf8Skk0djabRSqV8o369DufB71/UsGPZQJsbGywjCZSg/xU
      Eb6RJPHr9XqbPt/vCxJFkXmCSSJScjlJVYo5IZWBH/x+dJ3X0ALAVi06j9gmYpwoM4rfWYY/
      ttfyz8el8M++sbEBRVGQTqcRj8cZtUs+kEFAE7mfMofdIMkKtlaWUd7L4qJdQ32jiDVVw+SF
      i32dT36Z46gEZ9s2otEoms0mwuEwZFlmfhF+zLmuy+wlcp4S+PyJY5kA29vb2NzcxMjICLLZ
      LKuTn0qlUCqVEA6HUSwWIYoiRkZGsLu7y3Rsy7IQjUYRDocRj8f7ekm8Z5cPgOOL1wL7ao1p
      ml33Ne4Gv8nI89aGYbC9bSn5nm+/dzXodW3e0M3n8xgZGWFOprW1NbaqHkaN4Hf0PCxmTp1C
      bnMDkGW4AEKKAmPhMbLxBDJjYweer6oqKpXKkScAz+bwK6QgCG3GMfkRVFXtCHchYoKt6Edq
      EXdRRVFQrVZRq9XYxtQ7OzuQZRmlUomVSNzb24Nt29ja2sLw8DA2NzeZlOrXJ0CFcyndjjrC
      u4rQahCPx+E4DkKhEEKhEILBYNs+ZX7Pc9CAUVWV1ZrkeXCv5O/FjPD3y2azTDBQzEsymcT0
      9DQymQzS6fTAsT/eLU4Pi0AggPFTpzF1/iLWy60BldAU7N27fWg/xEHw86Z7BQcNZrIlgdZG
      2qqqskrkfBCl3/WPZQWIx+NskNHNaWDs7e1hZGSESTialZlMBqIo4p133umZEMM3mGa2bdso
      lUpIJBK+Jbzpf/5HkiTEYrG2gcfbALwRfBjwEon+JiPMz3HjVZUkScLQ0BBjnujl04blxCD1
      O5j9nveo0DQNurz/nqZEG0sP7+HU1Te6nuO6+3u89Wu488f0osJ5Op1UYn7vNjqXViAq3Ear
      hW3bxzMBTp06xf4mmokaQEFlNCiDwWDbRti9imjxA6lcLrNBwCe991JnqIMovMHve/5efIzN
      oFBVFdVqFaZpspxdktjE4Xcb/OS1plgkUtsqlQqLYeqVHOP3XP3sxTAIiDkROP+JIokYWl/A
      kiBi5sq1jnNoAJLzbHd3l0WgHgS/gc/TmvwqD+xXsvCqnXQsqZTEOr4UGtQroWgA8DvFEG9P
      DaDZ6scSEK3KG6J8Z/DX8JPAAPoeCHzQ3qAqA7UlHA63dTKtPF6KjjyY/P3C4TByuRyjKckR
      5zXeD5oAlNvbq7TJYVAoFADXxZBrAdhfBcKqAnVzEU/zezjz3q9BUTpXctr1p1arQVVVlEql
      rjvOdxNk9J2XHeN9KV67wAtN06AoCtMiZFk+XkdYsVhENptFLpdjDhDHcdjmZCT1gf0XRbys
      XxgzxeZ7I0opaI0KLvF6NT/QAPRtV9A+Un45Av2AnpVsIYqH8pZk8XuJdL6XFeLP6Xcwh8Ph
      Q1VrOwjpdBr5fB5Dgc7+VCQRZ8wqVv/qTzD3yUdt31G7qV+pdCalce7t7bUd70cle1dOAtHt
      frYCsWZevwettuSXOtZeCgQCUFWVFUDid1B3XbctTJlXCfg9e2npp5xhy7JQr9eZDUAPSkwT
      L92pI7q5wg/CYaQ/Dzo3FAoxpoImPalEpM4YhsH2EwP8KdF+dGEeoigemfHpBUno3aeT4QBm
      ajn2Pz0HSXze8dhoNFAulzt8E90SaPp5fhr4RMpsbGy0Ij45f8Tm5iZCoRAL5zh2T7DfMs3P
      6EAgwFgYMpD4kigUyUmDhfRhAMyxRfH9tBrw9yAQNdpoNAaq9DCIxPV7KRRqS9cIBAIol8uI
      RqPMeUdxQcQi0b14zzNde5AwAr9tQI8LO+vrkOYeQgj0b1eQMOMjRwnJZJL1XalU6rDTeDZt
      kD6gvqxWqxgbG2Mbp5imiVQqhZmZGWaLSpJ0vBOAnBG8GuHHp1MMEEn0YDAIUXIYXgwAACAA
      SURBVBSZcUx6GoEGk6ZprErz5uZmmzHlHYh0336pQ17KNJvNA0MG/FQZ/jlJGgH7m0dQyUa+
      reTk0jSNqYPdlvxeiEQiB1aZPgqK2V2cGmDwA/tqpRf8Kg3sD3YvKXGQ1PcjFYD9feGi0SgL
      f65Wq5icnGTtYivvQE90ACgkljx0fKMINPP4yhC6rrdFcZLezktjfrBZlsVKltOxtGxSjBFt
      6D1oYStBEJg/4yCQhOLb5o0HoolLE5zaSqDoxEKhwCpY8xRfP6DklOMsTkyrJyEYT6B5iDze
      fu5D3lwvkcG/f7/+8JsgxWIRe3t7aDQaTOhQlC8RFTxBcOzrpSiK7IUTHcqDBgTfua7bCmfg
      izzRsfxv27ZZIdlUKsUiTzVNY7aFN0R6UIlIO2ASremnVng73o+l8P7PM1XeNsmyzFZPSvMk
      +tNvl0wCvdBuZUmOgtkH9xFcmUXj5BmE4nFU93YxckwTzLt6KoqCfD7vG85Af/fzHgOBALa3
      t3Hq1CkYhsFqSUWj0a5xUC+lKkQvTyrlBvhRk/TwtEp4kxposzsqe85LBlIhvGoID2JnukEQ
      BNTrdUaRUXqeruusRCHQmcPbzWjlkzb442mS8zVtKLaFVtGDIjcDgQCSySSbsMeNM5cuw4CI
      0/l1RGfvYqa0A6nLffoVMrxO7xUWlCjP2z7e/uRtAXrXfBrm0tISRkdH2fa6QEugxWIxJJNJ
      3/58KRYTzTwvKPEZaD0wv88XgWY7GUl8gj0tX4dFo9GArussc4yHKIooFottxhkAtip5j6W2
      0u+D0hN5X0CxWISmaWw1oyJXY2NjzHtL7BEZ/LQiqKrK1LyXtQWR4zhYfPoYGbk1sCOcSnoQ
      tvowufyIEtM0EY/H2z7nUy6JSSPIsozt7W2WSG8YBk6cONHmM6FwlV4C4tgnQC6Xw9zsLC5f
      udLxnSAI7GWSnk7ZOV51h/4mCkvXdZbxddiy7LRfGAVK8Wg0Gh0vAACbsN3YIdd1u64qfi+a
      zien2fLyMi5dugTLsliiOh1D8UqkCgH7Hs+XZeyWCwWs3fkUI3oF4UB78NpmqYJoQENUa+87
      6pctW8DQ+9/G5uaW77V7GfcUOuONoVJVFcvLy0gmk4hGo6wfSPKTrUdqMI0L8jccNE6Ofe38
      /LNbGBkdRTabZTE+pJuTYUUcMD0AGSkU10N5xNRRFNRE3lG/qs/9IBwOI5VK+YY7BAKBDrWM
      f1GhUKijpGM3W6AbyMCm4gAUywS0aEG/EoW0cgQCAVaP/2UNfgDYXF3GORgwXGBh9BQWlAgM
      28GCFkP0O78J/fX3sGgJaFrtkz6nNxF6411EIp2sDw9exeFXzWAw2GYzElO0s7ODU6dOoVKp
      wLIsph4LgoDh4eE21ZQXRLzztReOvypEsYC5p09hLs/hdFiDKUowownEL72OfC6HcqGAy29c
      990JnvhzSlkjY5CiPqmM31EwyODhBzi9MD6biNdLu9kB/LOtrq5ieHgYsViM2ULXrl3z3a/g
      VaBUKsGttAZUQYvgtUuXoes6Fh4+wKW33t6X4CdOYOnhfYRW5pAKtlaJYjSN8y8SzbuB708v
      5UmRnV7jmHIghoeHmXOUNmh3XRcjIyNMcPLMY7++g2OfAJPnL0JzLORlCReM3IsHtbH2+Ye4
      EFAhQMCjn/4FrEQG3/zt32UTgU+koQfgZzc5L74s+DmhQqEQ8vk8UqkUgM5KBfyAp3pElLJZ
      KBQwNjbGDF5RbJVF/zJTFHvBtm18cfNjXP/Ge1j++OeYlmw8+/u/QWRium3wA613MXPlGvIn
      TmLh6UPESnsQo/6x/l6nnh+1TdcOBoMolUqsVPvu7i6SySQjE/gYJ1EU27IOeaeoIAh9l148
      9glQzuegNetYzRWRiSg4/0JdnIjtS+5vDCn4s/k55gUG9qvDUeAUGaz0vZ83kWCaJm7+7V9j
      8rXLmOEiU48C70sCwPwKXkONd7rRd1R7lNRAWrlI2sVisWPJkDouSJKEb//wn0EQBOyevQRp
      +QnOwEDx+SM8Ny2cuXS5YxKk0mkMffBt5HZ3IfbYtcdbCIA+5ycHhTVTyDwJGooDowgBSqyi
      eB76jrSGQUmSY58AV9+4Dsu2Ed7egqyqaDy7jSDHorgAbq3vYDwcgG3bHXo3LWfEbxN60Zd/
      +ed/jvm7n6PY0JFfXsCb3/3BkZ+Dfzn8i/duEi1JEotdmpycZGwN7a1M1TH4SRMOh19qzM5h
      wfwtuSxEQcBT3YETSkDZ2YR1/oIvdS0IAtIjI12v6Q1l8JIdfB/wXttUKtURAk50Nx8ywpMq
      Xmq5Hxy74jmUSmF+bhZmrYZKbg+/WM+2fb9WquJ0MoZVW8TsrZsdBu39Tz7Go3//f2Frc7Pt
      c57yW3j2FPNzc1haWMDuzg5svYH/7q3LqG6sHpua5NX/6X/SM+l/mhDT09OYnZ2FaZrMoKag
      LO8q8jKiNY+KNqdluYi1chVj73yAmetvIXXh8rHFGHVjsCj8JRAIYHp6uq3AGYHSX70Tijd2
      JUlCNBrtmgPixUvxA7x26RKef/YJ1HIe3zyRbvtuMt6SiP8iHMQnzx7g+fIsnPgQxj/4HiAI
      EBo1bIaGkKj7hyJUKxXc+fu/g9WooypIuBgNwtGicKHgWyfSWF5aQO3K6wgfsQyH13lFCAQC
      LMlakiRks1mMjo5C13VcuHABuq5je3ub5Tp7dVGSWkfxZ7wMUMyOYRjIvPkOXMdBOpPBs88+
      wVBpD3efPsTk6zeQTqcPuNI+vF5wvk/pbyrzQhMwmUy2Rf1S3/O2IV3PS0gALcfXIHbVS5kA
      8XgCdrWMit5EVQEiavvSSQ91bXgIIUUGYGP9F38Jx3YwKQKZd7+PiReBSzz0RgN3fvo3mIkE
      cOPMOBzXhSgI+LOni1hBDO75q1Bs58DqcH7w6vF8ogXQ7o7n4/6TySS7H/kzkslk27Fe9ONQ
      elVQVRWpdAb3Pv4IS7c/hRyNI5ccwc7Tx7j2Hf+y5f3Az0MvSRKKxSLbndJ1WyX0vSHuvH3A
      9x1/XL87XHrxUiaAKIp49/f+NR798mcYre52Pa41+Fs4GWxJxM16s02NKZdKKJVKKO1lUZp/
      im8mAkC4xcKILzryxxdP4WerOzg/Ng4toKFUKiLRpcY8wcvykETx01f5vyk8O5fLsShW74Dm
      DTve2Bu09MurRFASkBEdFKIxiKoKyTKP3G7+fGJ5qJIG2U7E7pAD0HVbZWj4VFi+7A7ZYf3W
      k/Lipe4Rljl/CQ8+XMfVSH/L/ZO6hcyv/QbSL/jkra0tLP3tn+NsLIQToQDcWPfrfH9yBP/w
      d3+Bs8kobq1to/Hr/xwXLl3uOM6yLDQajY6ivf04tWhA12o1pNNp34rIPLzXowoGXxXq0w+u
      62JtcQFapYjhWATNzSWkQ0GomSG2/8JhwRu+e3t7SKfT2NvbQzAYZGoh0Zy7u7usr6jcPREk
      lF5LfgISRIfBS50Aud0dDKM9h7QbLMdBJZyAPT+L7XufQ5s5i9l//CV+Y3wIKhnAB0igb06O
      tg4TZfzyp3+HZrGAy+++x7h3wzB6epG9rnqvrprP5yEIAmN7+Nh9P3jtiK8a9emHWq0GYfYB
      xl7Q1qlQAEFVwagcxfL8HC5e7Ux+7wbvaserhURqEIuzu7uLdDqNarXKKG8qf9NsNlEoFDAx
      MYGdnR3E43GUy2V88MEHR15RX9oEWH76BDNnz+HZ+jLmN9cxE9ZwMtY9M0sWRRgrz3HuxDBi
      mobFLz7GG6no/uAfANfSMWxV6qg/uYeVsXEMDQ35VlTzk97eFyYIAqsER04Z/lrdVg1SfYil
      iMVix1ql4WUhHA7jk0IF+Xodtu2gaVmIBTSYlg1jbRMbiQTGJ6f6vp4gCCxknVJhgVaOcaPR
      QCKRYFK92WxiZGQEoiiiXC6zMjGO42B8fJztl0wbcxwHk3akCcCX8eBf/ubaGoL/+f/BSiAC
      xbJw1tQx60gQzpzCeJdJUG4aGE/GkQy21IOzqcSh2xXVVKxFM3j3N/4Zix8plUpdg+684L+j
      +J9EItG12BXvvuevT+59qmL9qwBBEHByOIMzkdZKtVUsYbtYxuWTY1AkCc+XF/qeAL10c/Ls
      035vtNUSgVQtRVFY+Lxt2xgdHW3buOSoGOit0AteWlzE86dPYFsWJtNDwO4WTDWAa//8xwCA
      8rNHOCkKCBsvqExJwA3Jwc+X1jB29TxEQcBOtY7PHi/gR++0okajqoKlUhWFhsYmwWExGg0j
      YemY/4//Ds2JM7j6/q+15Q7zCeh+4L+3LItJfvqOV5W8LA+dGwwGmeT7qnH+vXD31ieYlPf7
      ZadUwRtTJ9n/YaOOWq3WV561twJet+8p4tebCw7svy9yfg26p/FB6HsCPHv4ADYEnLtwAfXb
      H+GthUeQsD+I6o6L+cwIjGoFFQcwaiZOhduX/CtOA5+tbqFWqiG+sIGMAFSaBqJay/A5GQkh
      V9ePPAEAICDLuDQ8hIfVEqrV6oHH8xKbqlQYhoHJyUlUq1XfHFa/mBZZllliy68C2+PFUGYY
      ufU6yI1kePwYaU3Bzs42Zk6dPtb7krrYaDQY3UkqI4WDUyUHv7D0w6KnaOL129PnL+DSlSvI
      b28isPAMssf4EAGU93ahP76H2s1fYK3WycVnZBFTxSyqm7sYcwFVlFBttIzSbK2BzXoTZ46g
      +gBAwzTx/91+gJrx4v61CpMgQHepr6oqEokEizsPBoOIx+PQNA3xeByJRKJjVxq6nlft+VUd
      /AAwdeo0HGXfUI94jHbXdVHc7U5tHxa1Wq0tnoey5mhDDAp2q1QqKBQKR94jmdCxAtASRHX1
      iX4yTRNSs4n87FNMCJ03D4gC1MVZBAUHpzUB8rB/MnpMBK5nglivyxAsB88ePEP+1Els28D3
      znTXLfuZ9ZWmgfnZOfx2TML9x09a+QaZYWxtbbEITsA/UYWvTeQFfU55wrRBn9fDSdf+VR38
      DKYBKIBumNA8fWJYNizt+FU62ueBQPYAlcwhyU81lcrlclv23GHR8cYpYYVuVq1W2VIkiiLC
      U6fwpFrD1ONbCIvtN56pvKjydUB7hlQJQ+o+u2PsbUOwXHyu1yFoAbx5dqbteMOy8cXCMuRy
      AYhEcWpqCkOhdjVpu1LDs5U1vKO98DKHZDzSHbjNJiq5PbYvrbdy3GHgx/YQjnuJ/jJhGAaq
      1SpC9TIQj0JTZOgeFWi1UMKld79zrPflHYdUW0oQBOYvaTabjPsnNJtNFItFRCKRI1HLbRPA
      mzROUXa0EjiOg2g6g73xSUSedS+NvaxbKJgOzocVhMTOgeCN81AlEVMSAKOKXKOC2a0wzo8N
      o9jQ8fTZLFzHwdWwAikWBGBhdfYp5hwgkMogEAxA39tFwDRwWREB7E+sUdGBXc7BCIeOZfA7
      juO7qwz/Pa0QyWTypeXsviyoqoq9zXVYjQYelcuYTKdQ5MrD3FleRzmaxLUBS80cBGLneE8v
      vxp7o3LpHQqCgJWVFZw9e/bQAqdtAvCbwgFgG1zH43G2m7frunAqpY4L8ZgOyCiWa1har0BP
      B/Fmpr3DeCOS/qcHHRKB9fUV/M1OFmHXxvWgBFFoX6gmQyomXBfQi2jWXWiSAEj7UZp0zbQq
      Y8uwEU4P+5YWH7TTvE40v4lEEaKU2NFPWt5XBa7rwi3s4exoyxP/0ewCLp8Ywc25BcRCQWxb
      wI9+87eO9Z5USI0fA15HJBVVLpVKLBfYdVuZg7FYjCUeHQY9WSCqWEZx+0RTCaGDKbCzqRCe
      u0BSHVwKTkhAyKjiqW7hjhXE1YgCjdMP+YGnid3Lo9cdF/kzV3DuxZY6PF9Py+0g8FarA7pP
      IsMwWEbToMW5XhWePXqECRigYRENaEiEgnj/7AxM24Ypx459VePrHvEOMUEQWKqo67rY3t5G
      NBptq9pB7BCfODUoulozxIHTjWjQmKYJZ2n+wAuHJQHXRsI4Fe/Uz/yCx+ieazbwWLdRdlzM
      DA/hnfE05k1goWagYlrsuH6k+XpsGBe+90MmuflnKpVKA73Mg5LxqVIFeYppT4OvsvTnJ3St
      VoO1uYIvltbYZ+oLNSRbqeF5zYT5EirDUekSYD9eKhAIML0+FAqhXq9jfHwcmqaxfacptIXa
      fpgIYKALC8TvvOjdStSyLMSeP4IrH+7FdtO/HdfFbVfB1ZE4TqsymrYDTWrNz2uZOCzXxXyp
      Dr1pIKPtJz97WRgeUq2M3NYmYukMDMNg7A1tFj0Ilcbr/n6UaqlUYi+QpNjQ0BCrLvdVmwi5
      3V3MPn6E977zXQAvKnubBmRJQtO0oCkymyA78WFcvH4DG+vrx94OShqKRCKoVqsIh8MsApQ2
      wxseHm7bA8wLyh8/jN3VdrV4PM74b/LM8fEsgUAAtWoVQz6G7VEhCgJCIhBTW4ObBj9BFgQo
      otChUvGrgcPNA9d1cdptQvjJHyG/tQlVVVllaj6xuh9QiiZ1Ll+CkWKF+LqTAJjqSFUtvmo5
      AGtzzyA3Wg7CUrGIp//4C4yENAyFQ9AUGX/34CkSoSBKDR0nTp+Fpmk4dfp4nV8EQWhlyQ0N
      DbH3lEgkWBVAYqdIAPvlWJDPYNB+blsB6IXSC0skEmzHk3KxiOqf/xHcQBATrULxh35YvwAy
      13UxZjUxX6rhTCzU9h2hYdowRReS2P7dSlnH4nwBRcfBj26cAD9FMhKw+7M/wfL1b2Liwmts
      xTiokpu3zRTQRhIdAFuGBaG1BU+3UhyVSoXVQPqqQI3FcfLsOWS3t2E8uoPzIQ0NQ8RGvgjd
      NDEci0IUJXz6fAWvTZ5nW129LPiptcQ8rq+vs5DpQCDQtsMOgZJpKASlX7RNAH5vL0HYr7uo
      aRq2VpbxmmhDstpnGa+qENYtIO8IuKq6qDsuaraLjNK7HDYApBUJe819Xa6DJXIcFGwbY1q7
      5ra8WsLYdgNjAD5aKeLb0+3JMCOii9zeNiTpSttG04OqJZIktZVkV1WVFfntdT3HcVCpVNrK
      cn/ZaDQabarYa1evwXVdzH78IU6HWhNzdmsH3zx/GpbtQHpBLown41goFV5Jm6midiaTYc5Z
      QRBYNZFuuwoNEizX8TZoV3XSkcvlMhzHwfkrV7H0w3+JWycvgm6r2w5+aSpY0U2YL/SPjyom
      tKEMhodSuFdtYk0KYc/1jwb0+19yusfYX83EUXE7JYWpSNgZCWIhqaC6VMS2brZN0pJlI3zu
      UpvOfxweW3LW8Bt88Duc8CAb5MtGYW8Pcx//Ep/+yX/s8GGsLS5g+EXA4hdLa0hHWuyeLHm8
      qwNsUPGyQALGcZy2Wqm0MSFV26M6q/2iTZTu7OwwvZUMOdd12WbXE9MzEFwXtaVHqNgO6uEE
      fjQ+hIpl4f7KCm6EFXwQVTBbreLKcAaTZ87i6V4eI5KDfgtQ2LoB23UhdaE2/VSX759vJWq7
      ALZ1CyOaxDoNAMKSiLViEcNjJ5hhd2zBVC8GOx//zxvJfFtrtdqRspcOg60nD7CxMI9Lv/5b
      LMS4VCxge24W6WoO0UArq01TZJwcSqDeNJCr1jCR2l9FXenLD+V2XZexPYIgMFWcaizRakBR
      qbRF7yCqLeCZAI7jIJ/PY2ZmBhsbG8wzl81mWX31/OxTCNEUhgMapl8USQ1KEgLg9Ho+r1aW
      IQxQytN2HJbr69XxapaDaI+xIwAY1fYtABqAEoDgR38DfXoGgk8O72Hhuq0tnmjg8yqbnz1A
      m7p9mRUh5HAE2XIFo2Nj2Fxfw+bcLMLVAsaiYTxY28S7Z6Yxt7WL3VIZgIuArCAdDePZ5g5O
      DiUgCgKCmaMFKB4GFO8D7BvJVDqFSlTSYCdbgZydg7B7bRPAdV289lrLUDx16hRbCU6ePIl6
      rYb7f/xHeFeyIcbbC6DajoOGpGCzaaEgB5CJ75ckSagKnpclXBX72+RZUGTfUCLhBQtUc/0n
      Ry+4rougKMB1HYiCdCB92i90XUelUul4rm5ebsC/SsTLRK1SwdTICObu30Nodw3VzW24moql
      RgOXT47hJ3cf4frUCZxIxHAimUD0RSj6/dUNmLaFRmoM7587/6W2GQDbcL1er+P58+cYHx+H
      rusQBAGVSgXVahXT09PQdb3NGaaqKgqFAs6dO9dXElLbEUNDQ6zWCtF6lHxcr1SQcSyIUqcI
      VkUR6XgS0WAA055tNEdDQWwEgqiZVUSkLl5Tx8U9V0I6GsZUsLt01CQRw4kInpRqEGwbI6qE
      IaU778sP8JQqYSObRfrEeEcc/2GhaRrrfN4Iput6a9YAx6d69YNcNovG+jJenzgBtbYHhIPI
      h4K4dHIMAHB3eRW/eeUCRFHAdqmCvWqNTYChcAgnkjFIr1//0trLg+wrKoybzWZZhDJ5gwuF
      AqsYnslksLW1xTYcbzQavvuTedE2AagUhaIogOvi6cMHmDx1GuVyGbWFOWRcf11eEAScT3av
      xHUlPYTPN5p4U7I7pLvrulBFATFJwfn4wSED6YCKlNYyOlerDTyoNnBCEpDR5LZBSNem9uUc
      AanRsWPl44mlIMnEs1tetYhw2Angui5y2SzSfdKRhXwetfufIaYqeLy22UoNDWhQJJmpDqbl
      IFupIhUOIhJQYdSb0E0Lz3d2kYmGUbTcAys+v0yQryUYDCISicA0TRYeEYvFWEwQ/Z6ammKs
      Zb/hJx3BcBR49Nl/+Hd4TXZRenAbKVXGWVUF1MMZQ6oo4uroCB6vr+JSQOoYBBXLRiSsdagN
      fuAH+WQkiJPhAB7uFpHhvqdr8NGDhfEzSL0YrITjkMb83gf8Dw9+IhzWAH706BHsUqGvCdBs
      NjH/s7+GZBlwXAdTqQRiwQA2CyVEgkFYlgVJkpAKB+HYFu6ubiCsqljJFTGryPjBpXMAgEW9
      k2//MkGDn2wBMnwNw2C5wkSLUiYfndNvP7cdRd5eXdfhxpIYCWg4Fwkh1YfR5uLFy4e/hG06
      DsLYD2Ji57kuIpKIYrl9cwTvIPIWsWraDrbqTVRMG34mj/ceQ5uLqLwIV+AnxlFBGUw0Cfg6
      ovzgIWnWK5y6G+jZr73/a30dv/T4Id44kcGViRMwTIupNeWGzmK68tUaynoTd9e2MBGP4OJY
      Br955RwiioyNQgkN08TuxkZHjdYvG6IoMo8wSfZoNMqECq2+REYA6Nh2q+f1/T5UFAVnvvE+
      ntf751NZhJ7zwtPqtg+EXK2BzaU8frZZYVGlpmmi3jTwXLdQrtbx8eouCySjoDKK+DMMA47r
      Yi5Xwe3ZTTz6fBH1zxaw8sk83HLvBy6bFvRGAzsrS22xIscxAbz2hNe/4J3Ih0nlE0URV65c
      6WgvceKVchmzdz5j/LcpKXi4voX7qy0mD4IA03FhQUAy0trCdrNUwcXxMVybmsDD9W08WFjG
      7efLsJo6mrqO3UIRl0ZTuPXLnw/c3uMCvXteIFK4uaZpzBPvOA6rGs1PhH7QodMQtZdKpTB7
      5iKwudhna8EywVzXBQTAcBzcnVtFYiyF3NwqrogK5qT9ArG2qmFWt3EmomA6qEBUVMxWdJyL
      7IcMGIYBTdOg6zqebBWQmttBCvsDKw7g+W4V7si+DSIIAhzXxa25XSiOi4BuISIIaLi3UEym
      ER8dYRXijgrLsljpPro3/9uLw1CgqyvLMHa3kbUcpGIxuI4N0bax9ewxxlQZc9u7yMQi+On6
      FuLxGPbmnkJ1bbx2YgTjyZbnWnmh8tQMExFNxW6pgqsnxzCejKNUz8A1msiVq9iDBDWcxDsh
      AYuBJH77++8esmeODkp/1HWdqTd8/1JZFcuyUK/X2RazgwQftk0AKj3NbqQNUJ1B2B/4AJCr
      N7G+V4SznYeztotpFzBEEbqo4POdGhxFQCYm41psv9Se4NgQa3U81ZuwBAGXU7FWdOILZ4hj
      2qAoD/4BE7aDz+d2IUoiAukwJAHQK01M1AyE3H0pHZ9bwMJf/gSRP/y3Ry7zR+DzDLp2zYsV
      YtB4INd1sTA3h/jaLMZCQewtraEiS9BkGYlwEEHYmEoOIVsuY3oojhGzgZWlbZxPxXFubBgP
      VjdhWBby5SpS8Sh000LQNLFbqkAUBHyxsg5ZFFHXdcxkUoCiQoxncNqpYats48Sb33qlWW2m
      aaJYLLK9Fkjv926yQSUVTdNEs9kcqIJ12wTI5/Os9IRj24gtHxz3TxAFkQ1+w3Gw9HwdJwpV
      aBABZV/qhSsW4oaNRkRDajgA1RPdeTHealLZdpA1HUwGNMbnml0GWtoB0tUX6lpJb1kartsh
      jV3Xhbq+ySTEURkhfsntGpItSSxXYJA9fV3Xxdr8LIIrs3AFYHWvANN2cG4kA02RMb+zh3qt
      Fd79+sQJPN3aRUCR8dbkCayUWtvKbpXKCEoSbkyOAa6LjaaB+0urePvMDGbSSXy2to1oIoHq
      zg6C3/guxiwLpTu3oYZCyLsyTnyJW1J5QSoysWyqqrKQExLS1Oey3ArdDoVCB26L6kWHHyCf
      z6PZbCIaiaCezwE96M1uUEURZ89PYuvTJ0h7mJ2Z5gsduNLEF7M7uHp+GBmlkxlSBQHlpgkz
      HIDyIvxaCaqwvI32Qw/mogG3Y0Ptw8LP7c7vUBIMBmEYBgvD7gXa/KHVfBdPPv4HhEtZ7JSr
      SEfCmEwlUdWbzKCNBwMYj4Rguy4UScLVk2P4yf0nqDZ0WIKAQq2OC2MjWFJj+GhxDm+cHEUk
      oOLM2AiiwQCy1Rqm3/sWqjubmHJtBAKBVvLJ2XNwE0lcesnRn/2AVs1QKNRGglBQIU+DxuPx
      Q1Xf66BBR0dH8enNm6huLOP6IQY/ADzYycF4soJJj1BsGywCEJElJGX/JTYgCkgYBp5t7UEO
      aBiLhHAxE8fPC1XEKzrO+NQdYpfmJP9aQIPQbGLcaU0KZWoStVqNJfsfFrxRBqCtwhmVWJEk
      qW3gF/I5lHI5TJ8913E9CvEt7GWxcPtTDMOC47q4ND4KheppRltxL1W9Hu6KGQAAIABJREFU
      id2mieV4Bpn0KJprS3CNJoLRKEzLgu64eH16Atl6A2+/9x7uB4P46fN5TMQjGIlFsVA30QzE
      cHV6GvP5PRhjkzCNJnbLZcy8Aq+vF16jl+/jcDjcFqVMhjJJfYq85aN2eZimycplrq2udtoA
      uVwOMzMzWNxah+2YkA6QlK7rYrXewFR43/GgZ4uYPkC7uCsJGJ9MQBaFrlVUxlQZLZ+lg5V8
      EeuCiMuJAMJDITxa3MMF/WBGRc+kMfWH/wZ3//f/A1eaJnbHRpF+sedA5ghOHuKjNU1DvV5H
      KBRiPgE+OpRfaTYWFxEIda4Etm3j+ewsiqUSUsUdiJUyNiwLN6Yn2Ist1OpYzBXxoFgHbAtl
      QcEbExOYmJrCRyvLuPLOBwh+/HOYuo5roxncWd3Ce+dmsHXzF4gMn8Qf/OF/06YakBpx9voN
      AK1AyNETJw7dH8cJ6jOeWKBNsl3XZYVx6The8i/MPoO+s4kr3/6+77Upt3323l3k7t9unwCK
      oqBWq2F6ehp7M6ehzz9A+AAjKGeYKDku1uoNBBwXi/NrOFGotT2IH2IQMBFoeZxprvgdT7N/
      SpPhAnheNrCxW8GkbqFbASJBEFAFkEvGEfjutxEIBhH+7rfxYG4e59+8jvHxcWxvbw/EF/uB
      lmZZltmy3OuZHz9+hB/86McdnxcLBQRXZjEdi0BJxrBiW8jX6vjjx88hWCYcQcRKroDf/t1/
      gfryIk6LFkq1BrKbG1h/+hhDySRu/fVf4kw0iLJpQZEkDEVCmK00UFZCmEilO/Rivv6pYRgw
      BywQ8LJBA53YHb7Oaq8+Xlp4jpMz/plru7u7ePIPP0dAkTEtA2VBaJ8AxGjcv38fxc0NWI4D
      dJkANcvCcq0BQZLwRiaBu7sFVFZ3cLbgv7cXD0EQEByNdtQM6hZAxu5pO2isFHDKBfwGvyMI
      WNcUNGNRpP/gX+PC5CQL5379B9+H9MPfYJRZKpVCPp8/sK0Hgbbs7Aff/P6vY2hoqOPz7N4e
      cvUmIAioCDKy5RrePDmC5ngEu9kspoZTuOC4UGQZcqOGuuhiKBRASmhi+9QpnLlyDWIxh5Ox
      IDRJxGI2j4VCGT/+/T/oyyBUVRUTk5NYX1vDyYmJgfvgZYCyuqLRKHPe9WO3maUCTp854/ud
      ZZq4FlYQeRHFnDo52j4BRFHExMREiwa9cgX3f/a3uLS3gTC3xBiOg+VqHXnTwjdOpFno8sWh
      GD6b75403ZZFBheLhTqSUQ0ntE7DxS94LGdYKOkWbEUCjHbVRxAE5FUFa5kU3v+f/ycIQit3
      lOLJY7EY0xOpyJdpmojFYu27I75kjI23AvEe3LmNazfehmVZuPN3f4VAOQ83MYzE2+9iMh5H
      s9nE3/71X0GRLbz19tto3PsUyaCGlfuriLoumo6AMS2GgCIjv7EO88JrcMNRSIKDfEPHdqmC
      N3/4o4HDLiIvBturCn3ww6DP8J3f+f0OqpnUvbm5ObilBsbkBpqxIWSrtfYJwO+RJUkSxFgC
      ZnZ/UJdMEwt1HZdTcVz0GK8b2SICZmeyid9g1gBcqZt4slyENZnAVEjpkPZLVQMjQQVhWUDO
      tPFoPosTDjDN8fqCIKApAM8VGWP//X+L92dmmGeQniEUCqFcLjMuWZZltgtJv7uJ9wKFPwxS
      ozKWSmNlZRmzt2/houpidDSNxUoNS8+eQCwXkLl4FT/68e9A13Vs3L6JmVQCj9a38PrUOLKV
      KuLBID5bWEF86hTe/MEPoSgKXv/er+Ph3/4lrk6cgJy2MTEzc3BDPEgkvvy4/+NG6EWCzJ0X
      u94LgoCdnR2s/9H/jYyho3j2Ck791u8wW6BtAjQaDabXuq6L1968gfvVCt7Nb8CwXfxjtoAf
      To115AADwF6hjKmGCRcHF42aEwHHAi5kdewVdiC9MYJxTUbWsBFXRAgQsPIki52pOIajGspN
      C2FXYJRqXZKwFQog8MbrKG1t493/8X9gEp+PxATQli5Hu7VXKhUWansUWJaFYrEIx3FYJele
      cBwHf/6nf4pKsYBzIQVJ28Zm3YIiCmjqBs6ZFWzaBgAXKysreP7sKd4JCfhieQcTqSSeVXSk
      Lr+NzVIRsVwJl97/Zlvd1ovf+yHmnj3D6WtTXykpfhTwhvAgzzQ6OYVSqYTdpQXc/ewWfkuy
      gKCMrb0NPLr7BTTXgeudAOFwGPl8nmXWS5KEfLmMe+UaVFHAN8bSvoMfAC6cOYm59T2ctLpH
      QrquC1MQYDQcTDUduADSFrDzMIvc+SHUH2fhqBIwFoEMYGi+ABFACgJ2VQH3YxouWjYq//J3
      cf3991nn7O3tsZ3Cd3Z2MDIywjh1iiDk6Uhyn9dqB9srB4GcWwdVIlhYWIAkSbBNA1GjjpHM
      GHaaJuKuiTurWxhOxuHChSbLePTRh/jW7/0rxONxfPRn/wmT8QhCmgpz+iJOjI8D4+PIZoY7
      Jpyqqrh89eqRnmdlZRlTU9NHusZxwHVdtj+YJEmIxWJ9T4CbN28iFAzi07/4UyREF6eqRWy7
      NsIisOeKmNpdQyIUxNOG1ekHiMVizMN57x8/xHdRR2S495ajumXj9tNlTNq9s51WBaBiuphq
      tsfNpHUb87s1BBUJk3UbjcUSFBeQXswlQQBGTeDx2Al8Ggvht95/n1WwppS4RqPBavdUKhXo
      us4SekqlEnK5HKskIAitDev29vaOtGNjr5LqPFzXxcriIobSabz/rW/jz/79/4uH27s48foN
      bDy+jw/OnUauVsfz7SwuT5yAJgC3P/0U166/gUKjiRsTY1gRg3h95hS75lEo3F5IJA6/F/Bx
      gsYg8f39DP7n8/PIDA9j8dkzxJsVnI0EcS4zhMVtGdLeFlYNF2cuTiAeDOB5vgRhaKTTqUqx
      FoZhwF6cRSR1cFbN4+0cpjby4PdmpwbvCkDBBgwXyCsCrjc67QQRwPmtfUoyuM+LAthXqVKz
      Kzj5v/4vrIPoOoFAAKVSif0fjUaxsbHBVJNAIADXbRVTDYVCsCwLsiwjGAwea4KMHyzLwsd/
      /1PkShV85/stbvrilauwK0Ws3PkMZ2+8g1Ajj6CqYHulgrvL69iu1HD1B1cQi8Xx5ne+j1Ip
      h0hm7KW2k9DNgfRlQxRFZpP0M/hd10WlWoUWCOCD73wHf/2n/xkWmrBDJiqJYUh7u9A1BXfn
      n2Msk8H5sRG4bqOzMJamadjZ2cGpU6dQCEe63a/95jUdu6qM8okUpGwJo/X9LPisAEzWWqzN
      dL9P73kw+j1qOlj53/5P6H/4X2Hk/FlmtFerVcRiMTQaDWQyGWiahkuXLrENLVKpFAzDwMTE
      BDNYiVrL5XKHaFX/EAQBgWgcP3zvg/1EnnPn4ZoGKl/cwZ3PbmHm4gyebu3irZlJmLaNYHQY
      Uy+M2NcuXXqp7fOi2Wx+JQp4DaLvu66LbHYXH3/4S/zX/+bfIh6P49LUBLKFItZyeUy/+Q4C
      jSKmAi21+Em+gt1KBAFFbs8HIKdIOByGZVmIvvU+9poHG4rXz03gve+9iTdfm4Yz3R5DEvAx
      XnolkXvBH+s4DsZzZSz/hz9GqVRijE8wGIQkSYhGo9A0DcVike3xRd+Takf3A3As0aAHQZIk
      vPPee235qdPT09hamEe10orJ12QZivSiCnK9iXOXLr8yI/ZXZTdLHg/u38cv/uQ/4ce/9/sY
      GhqCJEm48MG3WyUWT07BLeWxrbX637BtSIIAo1rC2tZW+wSQJIlFN1arVYTjcSyfewOfmb29
      waIgkLaCyeEhbHFXnbDd/7+9K2tuI7vOX3ejG2jsG0ESXCVxKGkkjWRZY8f2rB6P7bEn5SR2
      qhy74uUlSVV+QarykgdXxW9+SfKaPCUVp+w4XpKapOLYHo89tkczHo8sWhIlkaBIEAIIYm0A
      veUBPJcXjQZEUtxm1F8VSxQBokHyntvnnvN930FOEVBSJNxNqliK7J4Pz9MKLNtG7MolJBIJ
      NkiBb5SYpsm0zSsrK2i1Wsjn87h37x4ajQbW1taYmVK5fPCOZ4McpTOn5hFRFKBexZtL96B1
      urMZOpH4ke7A77ahHgAwMzODD33yZUxObk+z9Pl8eOrlz6C+WUa+tAGz2S14vHO/gvlMChPR
      MJAZ7w0A2+4OId7c3GSL6NT8aSj2duPJfEDO3DZNqMK2G4Js2zAkAVW/hDMXpxE7l8WNqd48
      c1CJy6mxtW0boiCgsbk50GaQhqkRVlZWmIa0UChgbGwMd+7cgWmaO5oe+bBwE8BslsvIjI7i
      1EgSl2cmEVEDmBvtctiFWH+n2MNwxBMJTM/0ln6TySTKGyVgo4CmIGHW110T6paLiG5aiJ46
      058CVatVtFotNo37+m/eRlrXcK+h4fXfLeP1n7yFN67fRUFz39kSAT9+F/Dhv2MBWKIACAI2
      IwGcuDCJrKrgcjKK0YkESn4J2oAm37CUyLZtxF99A+v5vOvjvBVJOBzG6dOnIcsyE07ncjnM
      z8+jVCohkTj4iodbYN9eXEQkEoEYjSNfraFsC1hcL6Leau/QP88DYZjPUiKZQlEOIma0UWm0
      8HZhA5WOAVEQkGu0MD33WO8huFwuIxwOs13SMAyYtQauLaxgvl7HKcqh8yXkoyFkJvpLcUGf
      hPh0Bs9Gg/jxvSJEy8bHpkYQlSUQf+diPIxXz46htlbB7PrOZvjyARG3gKVvfR9X/uKrroos
      anBFIhHIsozR0VHG3KS7QTabhW3b2NzcfOD19xuXr1xBp9NGo9VC0xIR8PmQHs3gh4s5vPz0
      xw/9/bybMcxpT1EU/N7Tz2Jm6RqE+Biu5e/j/ckuxd9KjnSdJPhvoLJTIpFgUxWtEyeQm52B
      8Xd/z54nAKgWN9EeS7k2xlKqHxHZhyfHkkj5ZXT9sLZ3QkEQ8PR4Eq/VWsCQAKCF70aSS/7i
      bfxq/HuYvHwJI9lxNkCB0ji3JhGpiY4SnU5nS8LnhxIIoFwqIRSPI9/S8NKXvgr5EG0T3wsY
      tPhzy8to1GsI+HzQdAMmBAT9fixuVHF2JAHR16Ws96xeEmWQELnVaqHdbmPmxAkU33cJbUFA
      aytfly0Lssvi1wwT0tYiywSULT2Be0VD3qXPEH8mUE0Lk9/+HxS/9g3Ut+xObNvuGevqBJVA
      W63WnkfqPCz4P9iFjzyDD//RH8MKhvH48y9CVdX3DIXhqBHw+3Hm8XOYnnsM67KKqxs11CUZ
      6XAIC/fLsCLdzX5HKWer1cL0Sy/hzjNP485Ln8Q1WcZGJIY39f5vX6o1cCI4qIphb310MZmO
      oCj3voZztx+2ICzLQkrTsfgP/wit0YAsy6x17np122aek9RpPArYto3K5iZqtRra7TbOXX4/
      Vg5g/NCjjJHRUQDAO29eRbKjYWxuHpFQCPdtEcb0HLKPdZVvrrYoTj6+bdsIhkJ44lOf6upp
      X3iBjbf85euvIWDqMGsVPK4IaHd0yK4BYPd9PhoK4PpICMnVGotEtwU/TChj2zayN5eR++uv
      Y+prf8XmGvCkOF5SZ9vdQQuJRAKGYaBYLD74t7nPEAQBsXic0TIMw8DyjQWcOXv20N/LexF8
      M+/k6dPIwUYttwQLFqxQFBef/ej2uKudvijZT9OuSYvs9HMvAOjWj1/5zrfx9MC0RgAcrnGi
      ADz/xAx+0bmDTLFbpx1GTeADgV/YlmUh3Wzj+t9+A6HnPowLn3yRcYX4EqskSSiXyxAEAaVS
      6chr3iu5HNav/gLBuTM4c/7hSGwetsGf/8LhCM6+/0ncn5pBqVDAY2fP9vzdXVfrTkQRgiCw
      salA93A3Wy8j7BPRu9AFx+c2+GAQBAHyEIdnes6gr2870lmYzZfR/uZ/4pph4vFPf6LPB5Qm
      iJw8eZLN9lpeXh567YME1a4nt0RIHvYXm+Uy4okEcsvLmJqeRigcxq2bN3D6zPadtq8PQBi2
      E/N5uiiK3fr6d76Js9JOKiy9f+ilZgtth2jG+TH01RyP+00L9RuLWF1dhaqqjE3o9/uRz+eR
      Tqe7rnRbvjOHjVarhWazicL6OgBganraW/wHhPhWn2dqehpAV2Z5+62rPc/ZNfGDn8QBdFvO
      N/73FVy02y7Fngf/YZdWy0gXHq4jS4GyKQlQLRt+vx+xWAzLy8sIhUIoFousH0BTRo4KkiSh
      0WiwP46Hg8Xa6ioE00BtZRlWNI6puV5Lmr4JMcOqLyT/o8+BLT+cwhoEsT/HHwbTBu40NFib
      GlTL3lHa9SC0X/4o1NOPYXokhVAohEgkAsuy2JRBqrqQbclBU6HdYJnmnk2cPOwe49ks1nI5
      GLqOU4/1T40ZGAD815yP8xWYUqmEZLsJ9E12Gb6YF+5X4Luaw4z94BFHO0FbAKJn5zExdwqm
      afbJHclBjHcbPuwAaLfb8D+EAMfD7lCtVhGNRjE+NYXxAW4XfWeAYRwceg7l/qIoYiO3jLR/
      mBywt/ZPyMZD2JQfjvkiCAJqfhmFDz4B8y+/hNnT84wI5zxDEFuUn/B+2Ln3UXehHxXQyKqN
      HWg9+gQxbgHg9jVB6LryGr99C4o4aCE5a//bz0soMhrRAFDcmTmV8+4kCALWp0Yx9md/irmJ
      LBPF02P8c+luQAFAnx8m9suN2sODIUkS1vN5zO7AGaNvC+b5N4OCgRZYoVDAaLuJnRx23RBN
      hdk1B4lkhqUqvg+/H2osyoQvbn6S9Dl5dpIx7mGnQFSbNk3zUL2IHkX4fD5Edyjt7AsA6pQ2
      m0202202zcV5+AWAdDqNsumW4jgPxG58IBudar857U6UYfQ86Vv/hcb9EqrVKqrVKu7du9fT
      xaafRdqaMUDzZennOewy6I1r7+D7//ovKBaLWLp791Cv/aiAKnx7GpLHV3lCoRBbjPxwMnLk
      BYDc8hJOqP35v2HZ0EwTEVlC07BgoesE3Qcu/JyHbSecKZBt24jrFvKv/BBP/PlXcPPmTYTD
      YaysrECSJMiyjHK5zCpARIKzLIs5QRx2Tv6jH/0IL378Ezu6NXvYG7RmE5Hozl3N+9igRNfl
      FyHlzTSFgwY+NDdKUB2qLNMGro5M4QehEbxWrOKubuF7+TLWTf45NtqmjY7Ym9MPAqVIVVnC
      3YCEliRCF0VYAMqKBGNLxhmNRlmTS5IkNju21WqhUqmwIRX5fB7tdntffIGGgZdDLt+9i89+
      /k8wO8C30sPDQ9f1XS1+wHEHIJ8b3nLE2Rvgq0HRVBqLjRbCPgkjfhm3TQGCbePatWs48eQH
      gZlZRKam8GS7DTOo4u2bv4P+q59j/V4Z4UoLkXb3dqVvBYJi9+bmoihiVQIsNQDf3Azqqh9P
      fuWLWP7lGzAiIdT/7fs49dO3UPjos8hkMlhdXcX4+Dg2NjYQCoVQKpUwNjYG27YRi8W2aBcy
      +1o4HGZ2KgcByvtt20ZhJYfpp3Y25fG4g+YrHLcO9l7eT183hs+h+Y4vWabUajVUq1XMzs6i
      0miiMv8EMuNZ5JpNzJ8+jVq9jpf9fjYdxbIsqFv+nNnzF7ExNgGlqWHjp79A5LU3IQgC1i6f
      Rebjz+Pmj1/D9M9+Db9lQxMFFC6dwdkvfx7RWIwFRafTwcwHrkDTNFS/+Dks/NM/47nJCei6
      jomJCcb0lCQJmQFTTqLRKHu9gwwAAKhWKmg2m7jyHln8QDc9Po4gg4SNUgkLCwv4yFNPPfh7
      hj3ojChd11EoFHDy5EksLy/D7/fj1JmzCIfDXa/9rdKo3+9nUzyKxSKSySSCwSCKxWLXqvzS
      JQjnz+E/1/I4dXcN4xfOIXvqJE6dPYM3Rr8Ls6EhND2Byx+4Asuyenz8iYAnSRLGTp3AzNf/
      hqUa5Pz2IJvCw4SsKEgf0wWzE7j5BHU6HTb77LjhlW99E1Kzgcuf/gyWl5YwNj4+dDLn0ADg
      0x2SGtI5IJFIoFqtMvOpVqvFDp80ooY8hkzThKZpkGUZs7OzzMT23Fe/gPyrP8flZz6MdrsN
      Xddx4VOfYNc2DKMnHWo2m2wUEQUCX8mhO1a73WZucG4/037QLh6ExcVbOHVqDpqmvavr/24W
      LZ1OB6ZhIHbM3KRt28ZauYKPfuxFJJNJ11kMTriWQfmFQwtFVVUsLCwwF2Rd15l8UlVVZLNZ
      BINB9rVisQhd11lXLp1Ow+fzobIlXzQMA/FEAuf/8Pd76AmGYbCFzfv90IQQVVVZYPA7ED2P
      pt0PsjxxagQOAhsbG1AUP37yg+8eG6vB/YV9LBY/b4Xf0jSsrqzgC1/6MqZnZ3f8Gn2+QM7m
      kyB0nZXz+TwmJyfR6XSwvr4Ov9/ftfbYqgJR/ZXSEHJCIx9+URTZUOlyuQxVVVlJkm5RtIgD
      gQBCoRD8fj8zvyoWi7h16xZM00QwGESn02G9CnpdXdfZLyUUCrH/G4YBy7KgaRprhPFd4f0C
      Dd5WVRX/9x//jmR2at+vcRzQ0o5OU81DURT2+63X6yivLO96ELnrIZhf/IFAAEtLS8wxYnNz
      k40XosdSqRQCgQCq1SpCoRBbCJIksXxR13VEIhGMjY1B13Xk83lEIhHcvn0bqVQKsVgMhmFA
      lmUsLi6yoXO0U4+Pj6PRaLC5UYFAgFli8Mown8+HcrnM0jVKlSgoNE1jbsP71QnOr64iGovB
      3KKKv/Xaq5g48zjOXbq0L69/3JA+IGfqvaLVaiESjSL9oY/s+nsHCmIAsBSE8v9KpYJoNIpC
      oQBN0xAIBBCLxWCaJkqlEtMJl8tlGIbBOrShUAjRaJR1ZH0+HzKZDMrlMmZmZlCr1bC4uIh6
      vY5CoYDJyUlkMhmEw2Fm0NVsNjEzM4NcLscWPQUYaRToPZNtIlWyJEli5V1+RvB+7c5j2SyC
      W43Der0O2e/fUQXCw/7gxu8W9lz4GHoHUFUVKysrGB/vWnMbhoFIJMLuBrqus8f4YInH45Bl
      mY0lEgShR6huGAYkScLUFkXV7/djcnIS9XqdHXJ5OSO/U4dCIVQqFTYxkDrTfAC46RqID2Tb
      3XkC9F6deJgDcnSrCXPlqWf29P13797F7C7y10cZ5Y0yItEINE3DufMX9ryZubpCAEAgEMDK
      ygqrrZPpbDgcZpbk4XC4ZxHRwqVKER1kVVVl+T2Z7yqKgjt37kAQBITDYTYMwbbtvgHWFECN
      RgOiKEJRFFSr1Z4UiNKdaDTKKNE8h0lRFDSbTRSLRfa+3ZRhhq7Dx835PUx4i3/naDYbiMa6
      f+uHuZP3BADf+KLDJrA9D1fTNNTrdZimyeZtUX4PgC3uRqOB0dFRlpNLkoS1tTVIkoTR0VFG
      tkun0yyNoUXr3JUFQYCmaVAUpSetkWUZ8Xic1aNJ43vt2jXmaifLMsLhMJMhdjodJoinu5DT
      j8dzZnMHTdc8StDduVar4c7CDbzzyo+QOTGN9z2/9yZjT+jwA9c0TUOlUumZokI1bVEU0W63
      mXOcz+eDoiisWkQLlao/tLsLgsCsSer1Oqsm0Q4/KCUh8Q39AqjOr+s62u02q+5Uq1V2fkil
      UohEImi32yiVStB1HalUCo1Gg92ZjlIb/G7DUS9+AGhslbZ9koTVG4uIT2dx6bmHO2v1BEC9
      XmfCErINyeVybNGYpsnSjmAwiEAgwBa7LMu4ffs2Tp8+zRYkgQIhnU4jl8shlUr1zCIAttvY
      buB1nNR3cD6XLE8SiQQ6nQ6bESxJEuLxOCKRCKtO7VURRod/D4eL3/76Nz2l+Wuv/wq6JODK
      8888dKraEwB+v78rJohGUS6XIcsyRkZGWHpCi49q/cC2yoomsRiGgWw2y7j5qqqiUCggk8lA
      13VkMhl0Oh3E43GcOXOmR63lBkEQGHef+EgUUJReEYkvnU5jYWGBBQzlhqQDINAvcyeVA9M0
      USgUtn7+Nm5c/+2ufsHvFZRKh++gR3j84gUIgoB6o4FKpYLKWgGf+Owf7AsVw5UKoes65ubm
      YFkWoy2YpomxsTEUi8UekhmlJrdv38bc3ByjK6RSKSwvLyOZTGJiYoI5tRmGwdIYYLs640xH
      qFpkWRY76PKifOdgasuy0Gq1MDU11bPY6RqDfk6CpmlMRK3rOor372N9dRWxZBInTnanM05O
      TmFy0l1cvR/Qdf1Y8Zh4pFLpo34LrOL4whc+91Cvc/f2Hcye7GoyXI/PlAZRAwnoLqJoNIpa
      rdYdQFwoYH19Hfl8Hrdu3cLc3Bzz6icl1sTEBAqFguuCdJMk0o7t8/lQKpWgKEqP1JG/25Am
      gYLAsizE43GUSqWB8koesiz3LDaaIwZ05yTcfOc3CMeimDnEysxxXfwAGMVlrxg0KuooMDo2
      xj53vQM4a+S23bUUWVxcxNTUFGs20Q5Nh00+nRGE7rhSVVWhqmpfaZMHBU6z2UQikWDTHk3T
      ZIdkvtRFtGwKrNgWXZpYqHTYdk4Zp/9TU2xjY8P1/WQyGYQ+8tSxpf0eBah0vVcch8mTBDW4
      TU7suQNQtYXg3DWpvu/z+aBpGnRdZ/QFqtHTrkz8nOnpaZaz067tTF+I70O0an6Xpw/+0CpJ
      Eusuq6qKYDCIZDIJVVUxPz+P+/fvs92U+hA0G4D+vX79+lBJpLf4Hw24UiHccmYSnDSbTeas
      RhQEokXwi5TfhXkGJgUAHwiyLDMqdTAY7KEruB2OaSdSVRWZTIZ1hflJ8IIgIBgMIhKJYG1t
      jQUFEezi8TjLKT08uugTxdO/zoVnWVYPWS2bzUKSJJYeAb1DLVRVRb1eH6jOdwZLq9XqEeLz
      74d/L+FwGLIsIxQK9VUBDMPAysoKTNPE9evXEQqFIAgCUqkUVFXF2tpaDx3DM6o6HrBtG799
      5xrOXTh/6NceKIjhFx99mKaJVCrF/DWpV8CD6A60wHbCraHOLqUnztcjBAKBoQ0ZURQxOjoK
      27aRzWbZBHnqX1ApVhAEpNNprxF2hKDsoVarIR6PQytv4tb1BcydPXOo78PVG9SZflD9XRRF
      rK6uQlEUdth05vMAmCKMUqCdNCsURWEBRfm78/uI2zOI+0FBSgKjP5znAAAHCklEQVQb0htI
      koSNjQ1GgSCH6MM0xnpUce/ePUxMTAAA9E4HgihieWkJ9XodT1y8iHg8DkEQcOWZw2PPkvMJ
      MCAAqM5OJDhBELC+5Wc/OTkJy7LYYqXn83eMRCLB+ge8FSFNZ6HXTiaTPWmIoihM2OKWOum6
      Dk3TBjoS0LmDV7HRncjn8yEYDGJ1dZV1nY+C8PaoIZvNss/fvHoVd352FTMXz+H8k5cBHL5F
      JdBbbh46I4wWlN/vZ+JofrDEsJ2Y+ET0/a1WC6lUqqevQJUjcm2mA7AoikxML4oi29EVRUGj
      0WBDL9xASjDDMJjajIhvoigimUx25x8P4B552F/wC/z8hQs4d+HCkVfY+PfkegagXZ0Ovoqi
      IB6Po1AowLIsBINBdmdwghZVdxau0kM8c+bcJBY3DIMFCUVnJpNhvQV6Hjm7DYMkSQgGg2i1
      WgiHw2yxkxVKs9nsKYl6ODwEj2Fp2dUcl4Tpfr+fuTqYpolsNotms+k63MHtPECqLRLF0MGH
      7+5S+ZLELcTvplyd3B2o0UVEumEgpRqfEhGfyNlZ9vBoo2clU7pBohOewkCH2Wq1yrj+fIWI
      V2XRawFAs9nsWXB8CnTz5k0kk0l0Oh3EYjFYloVisYipqSnWHSayW7VaRTab3dEwaf4gzwea
      z+eDLMsshfMCwENPAFAFxZmj0UK8f/8+ZmZmXB0BaJdut9tML9DpdJBIJFi+3Wg0WDrDH7ZJ
      SXbz5k2Mj4/DMAxsbm6iUChAkiQEAgEkk0msrq7i5MmTu2rJ052Fhxv5zsOjib47ACm9nNpa
      qtVTvs4ruOiD5+qHQiG20Mhm3TCMnlIk0FWb5fN51Gq1nuoOdYpHRkbQbrcRCoWYXmE3AUBp
      ECEajTLmp3cG8NATAFQ94UuQfBDEYjHkcjkmZqfHqLlEh+ZwOMx8gQCwA3CtVmMHUEVRMD8/
      D13XMT093WN0Zds2xsfHWQmNrk/nkb2AgpRSqlgsdqwYih6OBn13AP6Q6ISu6xgdHWX6XtrV
      0+k0Op0OO7Q6UygSrMiyjEqlAsMwmD8PKcOI+QmApUxEvCNGKOkIqFy6G/AUCFEUD9wU18O7
      A3326E6nB2D7IEm5fyaTYRWffD4Pn88HXddZuXTQ4VKSJCQSCZbO0OsRG5SaVjxBjgKF3gNp
      f6nKs5uDLF/6pPfg4dFGTxmUFodbg4snypEYvl6vs8VJBLWdVGionEnuDfTatNvzVAhSg/Hm
      V2+88QZqtRrK5fKu83gi8DkFMR4eTQz0BRpEjaZdV5ZlVKtVjI+Ps0W927SEUiaiTfAlS0rF
      qCcAbFepLl68iGKxiGg0ytzqdnpteu/U0PPwaKNPEAMMliwC3QVEO3U0GkUgENhTTk7gpzY6
      g46CjWgMQJdoZ9s2IpEIk15WKpVdHY6dnCEPjy5c9QDDIMsyYrEYRFHclx2U5x05tQBOZipV
      kHifIUqPyuUyFEVx1Ql48DAIfYqwQSxLKl2SG9t+7Z78HC3nnYeCgNcoJ5NJ2LYNTdN6RPhA
      l+bq+fZ42A1cB2S4IRAIIB6P77vfvc/n65mgwp8D+N2fKk0A2IHbmbIB2wJ7Dx52gj5rRN6T
      n/+XH0aw36BDKb/z03XpPXQ6HdZcc2oQeDysfYeHRws9Z4BQKARZlpkzA83bJcH7YYAvazrJ
      dsFgsMdQyy0IqFl2nGw4PBxf9JVBeT7QfoK6xm4Lk8qoNE3GWRGioNA0rcckl2SUzsHepEHw
      qjweHoRDG2BFGgMe1NySJAmxWIzZrTgP46QncFKuATDKBG/RQua4Hjw8CIcSADTIzgnSFtNu
      HYlEmDiGQI0rGsPKfy/JJMnDlGYaEGvVg4cH4UADQNd1VCoVbG5uuvJuaKQpHbxlWUY0GmUB
      QLoCKr/yJU6egk2NLSLoEV3Dozt7eBAOLAA6nQ7K5XJPrZ4coodBkiRW7eEtVQRBYFpf0zTZ
      AidtAH9Qp+sR/dqDh0E4kABwLnZeVLMTEGtUURSmCSZPIJoYSbMM6Hp0Hf7sQHcgLwg8DMKB
      3QGG1eofBPIJTSQSPQo1+jcSifQI8+nOQI/TBwl0eCdpDx54HFgAuHVp98LRIXq0W38AABu4
      55wWyF9X13Vsbm4ei+nmHo4XDiQAqEbvrMPvRC/g9lqxWAyRSIRRIiiQiCfEzwt2vj5/JyiV
      SswXyIMHYIg57sOCyHN8PX6vAxZEUWTcH5oMSVwhCgBqkvGsUjo7kEep3+9Hs9lEpVLZUzB6
      eO/hwFIg6uiyC7mY6O4WgUCALWiyXaTXpVnGZMdCUyMpCPk0itwpPOaohwM9BPN6gf2gUAuC
      gHg8zvoFvFSSF+qoqgrTNBGPx/uUX3Sn8OABOOBGGDW6RFHcN0KdIAgIh8Os4cUP0eZTH7JC
      5D1MKYXyiHIeCP8P2uLo/MdfeOUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Germany' width='192'>
      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
      Bs66FEb7f7eRag16xCW7AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Incidence Germany' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Incidence Japan' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Incidence Japan (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Measures' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Others' width='192'>
      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
      Ff5/BsVcfeO2MY0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Predictions' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 15' width='192'>
      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
      44QP/TQMAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 16' width='192'>
      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
      uwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 17' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='World Map' width='192'>
      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
      QmCC
    </thumbnail>
  </thumbnails>
</workbook>
