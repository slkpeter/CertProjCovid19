<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.20.0415.1518                               -->
<workbook original-version='18.1' source-build='2019.2.11 (20192.20.0415.1518)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='Top 10 Total' caption='Country Selection' datatype='string' name='[Measure to Show (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Top10_total&quot;'>
        <calculation class='tableau' formula='&quot;Top10_total&quot;' />
        <aliases>
          <alias key='&quot;Top10_total&quot;' value='Top 10 Total' />
        </aliases>
        <members>
          <member alias='Top 10 Total' value='&quot;Top10_total&quot;' />
          <member value='&quot;Bottom10_total&quot;' />
        </members>
      </column>
      <column alias='New Deaths' caption='Measure' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;new_deaths&quot;'>
        <calculation class='tableau' formula='&quot;new_deaths&quot;' />
        <aliases>
          <alias key='&quot;new_cases&quot;' value='New Cases' />
          <alias key='&quot;new_cases_per_million&quot;' value='New Cases (p.M)' />
          <alias key='&quot;new_deaths&quot;' value='New Deaths' />
          <alias key='&quot;new_deaths_per_million&quot;' value='New Deaths (p.M)' />
          <alias key='&quot;total_cases&quot;' value='Total Cases' />
          <alias key='&quot;total_cases_per_million&quot;' value='Total Cases (p.M)' />
          <alias key='&quot;total_deaths&quot;' value='Total Deaths' />
          <alias key='&quot;total_deaths_per_million&quot;' value='Totals Deaths (p.M)' />
        </aliases>
        <members>
          <member alias='New Cases' value='&quot;new_cases&quot;' />
          <member alias='Total Cases' value='&quot;total_cases&quot;' />
          <member alias='New Deaths' value='&quot;new_deaths&quot;' />
          <member alias='Total Deaths' value='&quot;total_deaths&quot;' />
          <member alias='New Cases (p.M)' value='&quot;new_cases_per_million&quot;' />
          <member alias='Total Cases (p.M)' value='&quot;total_cases_per_million&quot;' />
          <member alias='New Deaths (p.M)' value='&quot;new_deaths_per_million&quot;' />
          <member alias='Totals Deaths (p.M)' value='&quot;total_deaths_per_million&quot;' />
        </members>
      </column>
      <column alias='predict' caption='Prediction' datatype='date' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='#2020-11-16#'>
        <calculation class='tableau' formula='#2020-11-16#' />
        <aliases>
          <alias key='#2020-11-16#' value='predict' />
        </aliases>
        <members>
          <member alias='predict' value='#2020-11-16#' />
        </members>
      </column>
    </datasource>
    <datasource caption='[01a] - owid-covid-data - original' inline='true' name='federated.0bdudug06c89yc164m65t1pbh640' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='owid-covid-data' name='textscan.07iqnjf0qak6cw10xf4830jedvvo'>
            <connection class='textscan' directory='C:/AIDA/CertProjCovid19/Tableau/Input' filename='owid-covid-data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.07iqnjf0qak6cw10xf4830jedvvo' name='owid-covid-data.csv' table='[owid-covid-data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='real' name='total_deaths' ordinal='7' />
            <column datatype='real' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='integer' name='icu_patients' ordinal='17' />
            <column datatype='real' name='icu_patients_per_million' ordinal='18' />
            <column datatype='integer' name='hosp_patients' ordinal='19' />
            <column datatype='real' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='integer' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='real' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='integer' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='real' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='integer' name='total_tests' ordinal='25' />
            <column datatype='integer' name='new_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='real' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='tests_per_case' ordinal='31' />
            <column datatype='real' name='positive_rate' ordinal='32' />
            <column datatype='integer' name='tests_units' ordinal='33' />
            <column datatype='real' name='stringency_index' ordinal='34' />
            <column datatype='real' name='population' ordinal='35' />
            <column datatype='real' name='population_density' ordinal='36' />
            <column datatype='real' name='median_age' ordinal='37' />
            <column datatype='real' name='aged_65_older' ordinal='38' />
            <column datatype='real' name='aged_70_older' ordinal='39' />
            <column datatype='real' name='gdp_per_capita' ordinal='40' />
            <column datatype='string' name='extreme_poverty' ordinal='41' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='42' />
            <column datatype='real' name='diabetes_prevalence' ordinal='43' />
            <column datatype='string' name='female_smokers' ordinal='44' />
            <column datatype='string' name='male_smokers' ordinal='45' />
            <column datatype='real' name='handwashing_facilities' ordinal='46' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='47' />
            <column datatype='real' name='life_expectancy' ordinal='48' />
            <column datatype='real' name='human_development_index' ordinal='49' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekly_icu_admissions]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_icu_admissions</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_icu_admissions_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_icu_admissions_per_million</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekly_hosp_admissions]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_hosp_admissions_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>129</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='string' name='[iso_code]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='string' name='[location]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.475969' measure-ordering='alphabetic' measure-percentage='0.489922' parameter-percentage='0.0341085' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='[98] - Locations' inline='true' name='federated.1oj1ff50ycwa1h1gzrf681w40tvc' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='locations' name='textscan.0yiu33h1s64y8j1bo9s290botwzc'>
            <connection class='textscan' directory='C:/AIDA/CertProjCovid19/Tableau/Input' filename='locations.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0yiu33h1s64y8j1bo9s290botwzc' name='locations.csv' table='[locations#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='countriesAndTerritories' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='string' name='continent' ordinal='2' />
            <column datatype='date' date-parse-format='yyyy' name='population_year' ordinal='3' />
            <column datatype='integer' name='population' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[locations.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countriesAndTerritories</remote-name>
            <remote-type>129</remote-type>
            <local-name>[countriesAndTerritories]</local-name>
            <parent-name>[locations.csv]</parent-name>
            <remote-alias>countriesAndTerritories</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[locations.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[locations.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[population_year]</local-name>
            <parent-name>[locations.csv]</parent-name>
            <remote-alias>population_year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[locations.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='string' name='[countriesAndTerritories]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.5' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='[01b] - owid_clean' inline='true' name='federated.1778kex0kgg0m118q1p271qx5l7r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='owid_clean' name='textscan.0cb2auj0hmj29f114n4zt03kz22z'>
            <connection class='textscan' directory='C:/AIDA/CertProjCovid19/Tableau/Input' filename='owid_clean.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0cb2auj0hmj29f114n4zt03kz22z' name='owid_clean.csv' table='[owid_clean#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='real' name='total_deaths' ordinal='7' />
            <column datatype='real' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='integer' name='icu_patients' ordinal='17' />
            <column datatype='real' name='icu_patients_per_million' ordinal='18' />
            <column datatype='integer' name='hosp_patients' ordinal='19' />
            <column datatype='real' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='integer' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='real' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='integer' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='real' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='integer' name='total_tests' ordinal='25' />
            <column datatype='integer' name='new_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='real' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='tests_per_case' ordinal='31' />
            <column datatype='real' name='positive_rate' ordinal='32' />
            <column datatype='integer' name='tests_units' ordinal='33' />
            <column datatype='real' name='stringency_index' ordinal='34' />
            <column datatype='real' name='population' ordinal='35' />
            <column datatype='real' name='population_density' ordinal='36' />
            <column datatype='real' name='median_age' ordinal='37' />
            <column datatype='real' name='aged_65_older' ordinal='38' />
            <column datatype='real' name='aged_70_older' ordinal='39' />
            <column datatype='real' name='gdp_per_capita' ordinal='40' />
            <column datatype='string' name='extreme_poverty' ordinal='41' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='42' />
            <column datatype='real' name='diabetes_prevalence' ordinal='43' />
            <column datatype='string' name='female_smokers' ordinal='44' />
            <column datatype='string' name='male_smokers' ordinal='45' />
            <column datatype='real' name='handwashing_facilities' ordinal='46' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='47' />
            <column datatype='real' name='life_expectancy' ordinal='48' />
            <column datatype='real' name='human_development_index' ordinal='49' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekly_icu_admissions]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>weekly_icu_admissions</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_icu_admissions_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>weekly_icu_admissions_per_million</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekly_hosp_admissions]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_hosp_admissions_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>129</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country' datatype='string' name='[Calculation_1118581610973171713]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[location]' />
      </column>
      <column caption='Period' datatype='string' name='[Calculation_1118581610988412931]' role='measure' type='nominal'>
        <calculation class='tableau' formula='str(DATEPART(&apos;day&apos;,min([date]))) + &apos;.&apos; +&#13;&#10;str(DATEPART(&apos;month&apos;,min([date]))) + &apos;.-&apos; +&#13;&#10;str(DATEPART(&apos;day&apos;,max([date]))) + &apos;.&apos; +&#13;&#10;str(DATEPART(&apos;month&apos;,max([date])))+ &apos;.&apos; +&#13;&#10;str(DATEPART(&apos;year&apos;,max([date]))) + &apos; (CW &apos; +&#13;&#10;str(DATEPART(&apos;week&apos;,max([date]))) + &apos;)&apos;' />
      </column>
      <column caption='Filter_by_Paramter' datatype='boolean' name='[Calculation_1118581610995380228]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Measure to Show (copy)] = &quot;Top10_total&quot; THEN [Set 1]&#13;&#10;ELSEIF [Parameters].[Measure to Show (copy)] = &quot;Bottom10_total&quot; THEN [Top Countries by New Cases (copy)]&#13;&#10;END' />
      </column>
      <column caption='ShowValue' datatype='real' name='[Calculation_1118581610997878789]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='IF [Calculation_1118581611035512838] &lt; 11 THEN SUM([new_cases]) END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Country_Rank_by_new_cases' datatype='integer' name='[Calculation_1118581611035512838]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM([new_cases]))'>
          <table-calc ordering-field='[federated.1778kex0kgg0m118q1p271qx5l7r].[Calculation_1118581610973171713]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Top 10 Countries' datatype='real' name='[Calculation_1118581611048226829]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF RANK(SUM([new_cases]))&lt;=10 &#13;&#10;THEN SUM([new_cases])&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Global Contamination [p.M.]' datatype='real' name='[Calculation_1118581611050946576]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([new_cases])/SUM([Calculation_1118581611051085841])*1000000' />
      </column>
      <column caption='c_pop' datatype='real' name='[Calculation_1118581611051085841]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Calculation_1118581610973171713]: AVG([population])}' />
      </column>
      <column caption='Global Cases' datatype='real' name='[Calculation_1118581611054268434]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([new_cases])' />
      </column>
      <column caption='Log_per_M' datatype='real' name='[Calculation_895371954159882240]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ISNULL(SUM([new_cases_per_million])) THEN 0&#13;&#10;ELSE LOG(SUM([new_cases_per_million]))&#13;&#10;END' />
      </column>
      <column caption='Measure_by_Selction' datatype='real' name='[Calculation_895371954178236418]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == &apos;new_cases&apos; THEN [new_cases]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_cases&apos; THEN [total_cases]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_deaths&apos; THEN [total_deaths]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;new_deaths&apos; THEN [new_deaths]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;new_cases_per_million&apos; THEN [new_cases_per_million]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_cases_per_million&apos; THEN [total_cases_per_million]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_deaths_per_million&apos; THEN [total_deaths_per_million]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;new_deaths_per_million&apos; THEN [new_deaths_per_million]&#13;&#10;ELSE Null&#13;&#10;END' />
      </column>
      <column caption='Event' datatype='string' name='[Calculation_895371954181685251]' role='measure' type='nominal'>
        <calculation class='tableau' formula='ATTR([federated.1tqx0su0ika3du183um0b12cwg8m].[measure])' />
      </column>
      <column caption='Global Deaths' datatype='real' name='[Global Cases (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([new_deaths])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='string' name='[iso_code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;OWID_KOS&quot;' value='&quot;Kosovo&quot;' />
        </semantic-values>
      </column>
      <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <group caption='Top Countries by New Cases' name='[Set 1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[location]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Cottom Countries by New Cases' name='[Top Countries by New Cases (copy)]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[location]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.313846' group-percentage='0.104615' measure-ordering='alphabetic' measure-percentage='0.441538' parameter-percentage='0.14' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='%null%' />
        <semantic-value key='[County].[Name]' value='%null%' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column alias='Top 10 Total' caption='Country Selection' datatype='string' name='[Measure to Show (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Top10_total&quot;'>
          <calculation class='tableau' formula='&quot;Top10_total&quot;' />
          <aliases>
            <alias key='&quot;Top10_total&quot;' value='Top 10 Total' />
          </aliases>
        </column>
        <column alias='New Deaths' caption='Measure' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;new_deaths&quot;'>
          <calculation class='tableau' formula='&quot;new_deaths&quot;' />
          <aliases>
            <alias key='&quot;new_cases&quot;' value='New Cases' />
            <alias key='&quot;new_cases_per_million&quot;' value='New Cases (p.M)' />
            <alias key='&quot;new_deaths&quot;' value='New Deaths' />
            <alias key='&quot;new_deaths_per_million&quot;' value='New Deaths (p.M)' />
            <alias key='&quot;total_cases&quot;' value='Total Cases' />
            <alias key='&quot;total_cases_per_million&quot;' value='Total Cases (p.M)' />
            <alias key='&quot;total_deaths&quot;' value='Total Deaths' />
            <alias key='&quot;total_deaths_per_million&quot;' value='Totals Deaths (p.M)' />
          </aliases>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1tqx0su0ika3du183um0b12cwg8m'>
        <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='[02] - Country Details' inline='true' name='federated.05u4i471ywr5a811qiskp1vheq6p' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='country_details' name='textscan.0fyx4i60ummtbt1gslc391146wdz'>
            <connection class='textscan' directory='C:/AIDA/CertProjCovid19/Tableau/Input' filename='country_details.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0fyx4i60ummtbt1gslc391146wdz' name='country_details.csv' table='[country_details#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='string' name='nuts_1' ordinal='1' />
            <column datatype='integer' name='cases' ordinal='2' />
            <column datatype='real' name='cases/100k pop.' ordinal='3' />
            <column datatype='integer' name='deaths' ordinal='4' />
            <column datatype='datetime' name='datetime' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nuts_1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[nuts_1]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>nuts_1</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases/100k pop.</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases/100k pop.]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>cases/100k pop.</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>datetime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[datetime]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>datetime</remote-alias>
            <ordinal>5</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[nuts_1]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.3125' measure-ordering='alphabetic' measure-percentage='0.40625' parameter-percentage='0.28125' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <filter class='categorical' column='[nuts_1]' filter-group='2'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[nuts_1]' />
          <groupfilter function='member' level='[nuts_1]' member='&quot;Repatriierte&quot;' />
        </groupfilter>
      </filter>
    </datasource>
    <datasource caption='[99] - Measures' inline='true' name='federated.1tqx0su0ika3du183um0b12cwg8m' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='measures' name='excel-direct.1ieujvi18vc1d117z40pn0ei6epy'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/AIDA/CertProjCovid19/Tableau/Input/measures.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1ieujvi18vc1d117z40pn0ei6epy' name='Tabelle1' table='[Tabelle1$]' type='table'>
          <columns gridOrigin='A1:C367:no:A1:C367:0' header='yes' outcome='2'>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='measure' ordinal='1' />
            <column datatype='string' name='type' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>measure</remote-name>
            <remote-type>130</remote-type>
            <local-name>[measure]</local-name>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias>measure</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDE_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDE_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C367:no:A1:C367:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Event' datatype='real' datatype-customized='true' name='[Calculation_895371954195169286]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='FLOAT(IF NOT(ISNULL([measure])) THEN 1&#13;&#10;END)' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.366071' measure-ordering='alphabetic' measure-percentage='0.331845' parameter-percentage='0.302083' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='[10] - predictions_for_tableau' inline='true' name='federated.0m3vwg5077pvbz1bksxis1j7semv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='predictions_for_tableau' name='textscan.107q0kn047pqls19avodn1io96y1'>
            <connection class='textscan' directory='C:/AIDA/CertProjCovid19/Tableau/Input' filename='predictions_for_tableau.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.107q0kn047pqls19avodn1io96y1' name='predictions_for_tableau.csv' table='[predictions_for_tableau#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='new_cases' ordinal='4' />
            <column datatype='real' name='predicted' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[predictions_for_tableau.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[predictions_for_tableau.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[predictions_for_tableau.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[predictions_for_tableau.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[predictions_for_tableau.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[predictions_for_tableau.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>predicted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[predicted]</local-name>
            <parent-name>[predictions_for_tableau.csv]</parent-name>
            <remote-alias>predicted</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='max_date' datatype='datetime' name='[Calculation_1118581611083980819]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{ FIXED [location]: max(if [new_cases]&gt;0 then DATEADD(&apos;day&apos;, 0, [date]) END)}' />
      </column>
      <column caption='new_cases_cut' datatype='real' name='[Calculation_1118581611088285718]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [date]&lt; [Calculation_1118581611130515480] THEN ([new_cases]) END' />
      </column>
      <column caption='last_full_week' datatype='datetime' name='[Calculation_1118581611130515480]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='If DATETRUNC(&apos;week&apos;,[Calculation_1118581611083980819])&lt;&gt; [Calculation_1118581611083980819] &#13;&#10;THEN DATEADD(&apos;day&apos;,-0,DATETRUNC(&apos;week&apos;,[Calculation_1118581611083980819])) &#13;&#10;ELSE [Calculation_1118581611083980819]&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
      <column datatype='real' name='[predicted]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_1118581611088285718]' derivation='Sum' name='[sum:Calculation_1118581611088285718:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[predicted]' derivation='Sum' name='[sum:predicted:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1118581611088285718]' derivation='User' name='[usr:Calculation_1118581611088285718:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.375' measure-ordering='alphabetic' measure-percentage='0.34375' parameter-percentage='0.28125' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:new_cases:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m3vwg5077pvbz1bksxis1j7semv].[usr:Calculation_1118581611088285718:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:predicted:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
      <column datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[date]' derivation='Day' name='[dy:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Week' name='[wk:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1tqx0su0ika3du183um0b12cwg8m'>
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[date]' derivation='Day' name='[dy:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Week' name='[wk:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-relationship source='federated.1778kex0kgg0m118q1p271qx5l7r' target='federated.1tqx0su0ika3du183um0b12cwg8m'>
      <column-mapping>
        <map key='[federated.1778kex0kgg0m118q1p271qx5l7r].[dy:date:ok]' value='[federated.1tqx0su0ika3du183um0b12cwg8m].[dy:date:ok]' />
        <map key='[federated.1778kex0kgg0m118q1p271qx5l7r].[mn:date:ok]' value='[federated.1tqx0su0ika3du183um0b12cwg8m].[mn:date:ok]' />
        <map key='[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:date:ok]' value='[federated.1tqx0su0ika3du183um0b12cwg8m].[tdy:date:ok]' />
        <map key='[federated.1778kex0kgg0m118q1p271qx5l7r].[tmn:date:ok]' value='[federated.1tqx0su0ika3du183um0b12cwg8m].[tmn:date:ok]' />
        <map key='[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:ok]' value='[federated.1tqx0su0ika3du183um0b12cwg8m].[twk:date:ok]' />
        <map key='[federated.1778kex0kgg0m118q1p271qx5l7r].[tyr:date:ok]' value='[federated.1tqx0su0ika3du183um0b12cwg8m].[tyr:date:ok]' />
        <map key='[federated.1778kex0kgg0m118q1p271qx5l7r].[wk:date:ok]' value='[federated.1tqx0su0ika3du183um0b12cwg8m].[wk:date:ok]' />
        <map key='[federated.1778kex0kgg0m118q1p271qx5l7r].[yr:date:ok]' value='[federated.1tqx0su0ika3du183um0b12cwg8m].[yr:date:ok]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Country Trend Lines' />
      <command command='tsc:brush'>
        <param name='field-captions' value='location' />
        <param name='target' value='Country Trend Lines' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='location' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Contamination'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>Global Contamination (p.M.)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
          </datasources>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Country' datatype='string' name='[Calculation_1118581610973171713]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[location]' />
            </column>
            <column caption='Global Contamination [p.M.]' datatype='real' name='[Calculation_1118581611050946576]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([new_cases])/SUM([Calculation_1118581611051085841])*1000000' />
            </column>
            <column caption='c_pop' datatype='real' name='[Calculation_1118581611051085841]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1118581610973171713]: AVG([population])}' />
            </column>
            <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581611050946576]' derivation='User' name='[usr:Calculation_1118581611050946576:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581611050946576:qk]' value='' />
            <format attr='text-align' value='center' />
            <format attr='font-size' value='18' />
            <format attr='text-align' data-class='total' scope='cols' value='right' />
            <format attr='text-align' data-class='subtotal' scope='cols' value='right' />
            <format attr='text-align' data-class='subtotal' scope='rows' value='right' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-align' data-class='total' scope='cols' value='right' />
            <format attr='text-align' data-class='subtotal' scope='cols' value='right' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' scope='cols' value='right' />
            <format attr='text-align' scope='rows' value='right' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581611050946576:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C4B2F49C-4CF9-4A34-9D4E-D2F6CA68DBCD}' />
    </worksheet>
    <worksheet name='Country Trend Lines'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
            <datasource name='Parameters' />
            <datasource caption='[99] - Measures' name='federated.1tqx0su0ika3du183um0b12cwg8m' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Top 10 Total' caption='Country Selection' datatype='string' name='[Measure to Show (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Top10_total&quot;'>
              <calculation class='tableau' formula='&quot;Top10_total&quot;' />
              <aliases>
                <alias key='&quot;Top10_total&quot;' value='Top 10 Total' />
              </aliases>
            </column>
            <column alias='New Deaths' caption='Measure' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;new_deaths&quot;'>
              <calculation class='tableau' formula='&quot;new_deaths&quot;' />
              <aliases>
                <alias key='&quot;new_cases&quot;' value='New Cases' />
                <alias key='&quot;new_cases_per_million&quot;' value='New Cases (p.M)' />
                <alias key='&quot;new_deaths&quot;' value='New Deaths' />
                <alias key='&quot;new_deaths_per_million&quot;' value='New Deaths (p.M)' />
                <alias key='&quot;total_cases&quot;' value='Total Cases' />
                <alias key='&quot;total_cases_per_million&quot;' value='Total Cases (p.M)' />
                <alias key='&quot;total_deaths&quot;' value='Total Deaths' />
                <alias key='&quot;total_deaths_per_million&quot;' value='Totals Deaths (p.M)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Filter_by_Paramter' datatype='boolean' name='[Calculation_1118581610995380228]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Measure to Show (copy)] = &quot;Top10_total&quot; THEN [Set 1]&#13;&#10;ELSEIF [Parameters].[Measure to Show (copy)] = &quot;Bottom10_total&quot; THEN [Top Countries by New Cases (copy)]&#13;&#10;END' />
            </column>
            <column caption='Measure_by_Selction' datatype='real' name='[Calculation_895371954178236418]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == &apos;new_cases&apos; THEN [new_cases]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_cases&apos; THEN [total_cases]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_deaths&apos; THEN [total_deaths]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;new_deaths&apos; THEN [new_deaths]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;new_cases_per_million&apos; THEN [new_cases_per_million]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_cases_per_million&apos; THEN [total_cases_per_million]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_deaths_per_million&apos; THEN [total_deaths_per_million]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;new_deaths_per_million&apos; THEN [new_deaths_per_million]&#13;&#10;ELSE Null&#13;&#10;END' />
            </column>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
            <column datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
            <column datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581610995380228]' derivation='None' name='[none:Calculation_1118581610995380228:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_895371954178236418]' derivation='Sum' name='[sum:Calculation_895371954178236418:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1tqx0su0ika3du183um0b12cwg8m'>
            <column caption='Event' datatype='real' datatype-customized='true' name='[Calculation_895371954195169286]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT(IF NOT(ISNULL([measure])) THEN 1&#13;&#10;END)' />
            </column>
            <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal' />
            <column-instance column='[measure]' derivation='None' name='[none:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_895371954195169286]' derivation='Sum' name='[sum:Calculation_895371954195169286:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610995380228:nk]'>
            <groupfilter function='member' level='[none:Calculation_1118581610995380228:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]'>
            <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:qk]' included-values='in-range'>
            <max>#2020-11-22 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]</column>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]</column>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:qk]</column>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610995380228:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1tqx0su0ika3du183um0b12cwg8m].[sum:Calculation_895371954195169286:qk]' field-type='quantitative' fold='true' max='1.05' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1tqx0su0ika3du183um0b12cwg8m].[sum:Calculation_895371954195169286:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f2f2f2' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
            <format attr='background-color' value='#faf4e7' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='8' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]' value='Country' />
          </style-rule>
        </style>
        <panes>
          <pane id='52' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='53' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1778kex0kgg0m118q1p271qx5l7r].[sum:Calculation_895371954178236418:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.33983424305915833' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='54' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1tqx0su0ika3du183um0b12cwg8m].[sum:Calculation_895371954195169286:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1tqx0su0ika3du183um0b12cwg8m].[none:measure:nk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0' />
                <format attr='mark-labels-show' value='true' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-color' value='#ffbe7d' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ffaaff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1778kex0kgg0m118q1p271qx5l7r].[sum:Calculation_895371954178236418:qk] + [federated.1tqx0su0ika3du183um0b12cwg8m].[sum:Calculation_895371954195169286:qk])</rows>
        <cols>[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:date:qk]</cols>
        <table-calculations>
          <partitionable-measures>
            <column>[federated.1tqx0su0ika3du183um0b12cwg8m].[max:measure:nk]</column>
          </partitionable-measures>
        </table-calculations>
      </table>
      <simple-id uuid='{14C8554F-5725-4836-B01D-C60AE6E84B0A}' />
    </worksheet>
    <worksheet name='Global Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
          </datasources>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Global Cases' datatype='real' name='[Calculation_1118581611054268434]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([new_cases])' />
            </column>
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581611054268434]' derivation='User' name='[usr:Calculation_1118581611054268434:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='font-size' value='18' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' scope='rows' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#faf4e7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581611054268434:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3E2D8D12-0512-4811-9C4A-CD5439AD48D0}' />
    </worksheet>
    <worksheet name='Global Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
          </datasources>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Global Deaths' datatype='real' name='[Global Cases (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([new_deaths])' />
            </column>
            <column datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Global Cases (copy)]' derivation='User' name='[usr:Global Cases (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='font-size' value='18' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Global Cases (copy):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{71DA9CCE-0D82-4787-95B0-854142610CE6}' />
    </worksheet>
    <worksheet name='Incidence Germany'>
      <table>
        <view>
          <datasources>
            <datasource caption='[02] - Country Details' name='federated.05u4i471ywr5a811qiskp1vheq6p' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.05u4i471ywr5a811qiskp1vheq6p'>
            <column datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[nuts_1]' derivation='None' name='[none:nuts_1:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[nuts_1]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:cases:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:cases:qk]' />
              <text column='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:cases:qk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[none:nuts_1:nk]' />
              <geometry column='[federated.05u4i471ywr5a811qiskp1vheq6p].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='589' />
                <format attr='maxwidth' value='589' />
                <format attr='minheight' value='790' />
                <format attr='maxheight' value='790' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05u4i471ywr5a811qiskp1vheq6p].[Latitude (generated)]</rows>
        <cols>[federated.05u4i471ywr5a811qiskp1vheq6p].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DDE45985-81FA-4913-B132-3FE7C74168B1}' />
    </worksheet>
    <worksheet name='Pred Germany'>
      <table>
        <view>
          <datasources>
            <datasource caption='[10] - predictions_for_tableau' name='federated.0m3vwg5077pvbz1bksxis1j7semv' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='predict' caption='Prediction' datatype='date' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='#2020-11-16#'>
              <calculation class='tableau' formula='#2020-11-16#' />
              <aliases>
                <alias key='#2020-11-16#' value='predict' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0m3vwg5077pvbz1bksxis1j7semv'>
            <column caption='max_date' datatype='datetime' name='[Calculation_1118581611083980819]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ FIXED [location]: max(if [new_cases]&gt;0 then DATEADD(&apos;day&apos;, 0, [date]) END)}' />
            </column>
            <column caption='new_cases_cut' datatype='real' name='[Calculation_1118581611088285718]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [date]&lt; [Calculation_1118581611130515480] THEN ([new_cases]) END' />
            </column>
            <column caption='last_full_week' datatype='datetime' name='[Calculation_1118581611130515480]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='If DATETRUNC(&apos;week&apos;,[Calculation_1118581611083980819])&lt;&gt; [Calculation_1118581611083980819] &#13;&#10;THEN DATEADD(&apos;day&apos;,-0,DATETRUNC(&apos;week&apos;,[Calculation_1118581611083980819])) &#13;&#10;ELSE [Calculation_1118581611083980819]&#13;&#10;END' />
            </column>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' type='nominal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[predicted]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581611088285718]' derivation='Sum' name='[sum:Calculation_1118581611088285718:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[predicted]' derivation='Sum' name='[sum:predicted:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1118581611088285718]' derivation='User' name='[usr:Calculation_1118581611088285718:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:predicted:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:new_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:predicted:qk]&quot;</bucket>
              <bucket>&quot;[federated.0m3vwg5077pvbz1bksxis1j7semv].[usr:Calculation_1118581611088285718:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;Germany&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0m3vwg5077pvbz1bksxis1j7semv].[:Measure Names]</column>
            <column>[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#ffaaff' />
            <format attr='fill-below' id='refline0' value='#f5f5f5' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[tdy:date:qk]' enable-instant-analytics='true' formula='max' id='refline0' label-type='automatic' scope='per-table' value-column='[Parameters].[Parameter 2]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0m3vwg5077pvbz1bksxis1j7semv].[Multiple Values]</rows>
        <cols>([federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk] * [federated.0m3vwg5077pvbz1bksxis1j7semv].[tdy:date:qk])</cols>
      </table>
      <simple-id uuid='{176BD3CC-3B83-4194-ABBD-6CBF19E2AE99}' />
    </worksheet>
    <worksheet name='World Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>World Map </run>
            <run bold='true' fontsize='10'>(Incidence per M.)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Country' datatype='string' name='[Calculation_1118581610973171713]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[location]' />
            </column>
            <column caption='Period' datatype='string' name='[Calculation_1118581610988412931]' role='measure' type='nominal'>
              <calculation class='tableau' formula='str(DATEPART(&apos;day&apos;,min([date]))) + &apos;.&apos; +&#13;&#10;str(DATEPART(&apos;month&apos;,min([date]))) + &apos;.-&apos; +&#13;&#10;str(DATEPART(&apos;day&apos;,max([date]))) + &apos;.&apos; +&#13;&#10;str(DATEPART(&apos;month&apos;,max([date])))+ &apos;.&apos; +&#13;&#10;str(DATEPART(&apos;year&apos;,max([date]))) + &apos; (CW &apos; +&#13;&#10;str(DATEPART(&apos;week&apos;,max([date]))) + &apos;)&apos;' />
            </column>
            <column caption='Top 10 Countries' datatype='real' name='[Calculation_1118581611048226829]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF RANK(SUM([new_cases]))&lt;=10 &#13;&#10;THEN SUM([new_cases])&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Log_per_M' datatype='real' name='[Calculation_895371954159882240]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ISNULL(SUM([new_cases_per_million])) THEN 0&#13;&#10;ELSE LOG(SUM([new_cases_per_million]))&#13;&#10;END' />
            </column>
            <column datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[iso_code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;OWID_KOS&quot;' value='&quot;Kosovo&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581610973171713]' derivation='None' name='[none:Calculation_1118581610973171713:nk]' pivot='key' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[iso_code]' derivation='None' name='[none:iso_code:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1118581610988412931]' derivation='User' name='[usr:Calculation_1118581610988412931:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1118581611048226829]' derivation='User' name='[usr:Calculation_1118581611048226829:qk:7]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[federated.1778kex0kgg0m118q1p271qx5l7r].[Calculation_1118581610973171713]' />
                <order field='[federated.1778kex0kgg0m118q1p271qx5l7r].[iso_code]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_895371954159882240]' derivation='User' name='[usr:Calculation_895371954159882240:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]'>
            <groupfilter function='level-members' level='[none:continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[Longitude (generated)]' field-type='quantitative' max='22570106.346958015' min='-17866398.957584959' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[Latitude (generated)]' field-type='quantitative' max='14483889.991988029' min='-6754929.6041753646' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:ok]' value='*yyyy\ \Www' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_895371954159882240:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#faf4e7' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_895371954159882240:qk]' value='false' />
            <format attr='in-tooltip' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:ok]' value='false' />
            <format attr='in-tooltip' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:iso_code:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]' value='Focus' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='Calender Week' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_895371954159882240:qk]' />
              <text column='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581611048226829:qk:7]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:iso_code:nk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[sum:new_cases:qk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[max:total_cases:qk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581610988412931:nk]' />
              <geometry column='[federated.1778kex0kgg0m118q1p271qx5l7r].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run>&lt;[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>New Cases:&#9;</run>
                <run>&lt;[federated.1778kex0kgg0m118q1p271qx5l7r].[sum:new_cases:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Total Cases:&#9;</run>
                <run>&lt;[federated.1778kex0kgg0m118q1p271qx5l7r].[max:total_cases:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Period:&#9;</run>
                <run>&lt;[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581610988412931:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1778kex0kgg0m118q1p271qx5l7r].[Latitude (generated)]</rows>
        <cols>[federated.1778kex0kgg0m118q1p271qx5l7r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:ok]</column>
        </pages>
        <page-trail-options size='5' />
      </table>
      <simple-id uuid='{293BE3CA-DC7F-4449-B709-AA166CA4AB7A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#00000000' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Top 10 Total' caption='Country Selection' datatype='string' name='[Measure to Show (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Top10_total&quot;'>
          <calculation class='tableau' formula='&quot;Top10_total&quot;' />
          <aliases>
            <alias key='&quot;Top10_total&quot;' value='Top 10 Total' />
          </aliases>
          <members>
            <member alias='Top 10 Total' value='&quot;Top10_total&quot;' />
            <member value='&quot;Bottom10_total&quot;' />
          </members>
        </column>
        <column alias='New Deaths' caption='Measure' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;new_deaths&quot;'>
          <calculation class='tableau' formula='&quot;new_deaths&quot;' />
          <aliases>
            <alias key='&quot;new_cases&quot;' value='New Cases' />
            <alias key='&quot;new_cases_per_million&quot;' value='New Cases (p.M)' />
            <alias key='&quot;new_deaths&quot;' value='New Deaths' />
            <alias key='&quot;new_deaths_per_million&quot;' value='New Deaths (p.M)' />
            <alias key='&quot;total_cases&quot;' value='Total Cases' />
            <alias key='&quot;total_cases_per_million&quot;' value='Total Cases (p.M)' />
            <alias key='&quot;total_deaths&quot;' value='Total Deaths' />
            <alias key='&quot;total_deaths_per_million&quot;' value='Totals Deaths (p.M)' />
          </aliases>
          <members>
            <member alias='New Cases' value='&quot;new_cases&quot;' />
            <member alias='Total Cases' value='&quot;total_cases&quot;' />
            <member alias='New Deaths' value='&quot;new_deaths&quot;' />
            <member alias='Total Deaths' value='&quot;total_deaths&quot;' />
            <member alias='New Cases (p.M)' value='&quot;new_cases_per_million&quot;' />
            <member alias='Total Cases (p.M)' value='&quot;total_cases_per_million&quot;' />
            <member alias='New Deaths (p.M)' value='&quot;new_deaths_per_million&quot;' />
            <member alias='Totals Deaths (p.M)' value='&quot;total_deaths_per_million&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='54625' id='5' param='horz' type='layout-flow' w='24200' x='800' y='1000'>
            <zone fixed-size='160' h='54625' id='4' is-fixed='true' param='vert' type='layout-flow' w='24200' x='800' y='1000'>
              <zone h='11000' id='7' name='World Map' synchronized='1' trailctrls='0' type='currpage' w='24200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='77' h='10625' id='12' is-fixed='true' name='Global Cases' w='24200' x='800' y='12000'>
                <layout-cache type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='83' h='11375' id='13' is-fixed='true' name='Contamination' w='24200' x='800' y='22625'>
                <layout-cache type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='91' h='12375' id='14' is-fixed='true' name='Global Deaths' w='24200' x='800' y='34000'>
                <layout-cache type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='54625' id='1' name='World Map' w='74200' x='25000' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='43375' id='8' name='Country Trend Lines' w='81000' x='800' y='55625'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='7875' id='11' mode='compact' param='[Parameters].[Measure to Show (copy)]' type='paramctrl' w='17400' x='81800' y='55625'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='28125' id='9' name='Country Trend Lines' pane-specification-id='53' param='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]' type='color' w='17400' x='81800' y='70875'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='7375' id='10' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='17400' x='81800' y='63500'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#efebe8' />
          </zone-style>
        </zone>
        <zone h='43500' id='16' type='empty' w='98100' x='1300' y='55125'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='43000' id='17' type='empty' w='24000' x='1300' y='11875'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{0E103314-0984-450D-9216-0F2645B4D9EA}' />
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='3' name='Incidence Germany' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8125' id='8' name='Incidence Germany' pane-specification-id='0' param='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:cases:qk]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='16' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='17' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Incidence Germany' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='8' name='Incidence Germany' pane-specification-id='0' param='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:cases:qk]' type='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{BB08DFD7-0D06-483C-A217-A8D46F41E42C}' />
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones />
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='5' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='6' param='vert' type='layout-flow' w='98400' x='800' y='1000' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{21D71AB9-2291-4A51-B9D6-0FB3CA552D40}' />
    </dashboard>
  </dashboards>
  <windows source-height='130'>
    <window class='worksheet' name='World Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]' type='filter' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-11-23 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:iso_code:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581610988412931:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581610997878789:nk:1]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_895371954159882240:qk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <geo-search-visibility value='1' />
        <map-scale-visibility value='0' />
        <default-map-tool-selection tool='2' />
        <default-map-unit-selection mapunit='1' />
      </viewpoint>
      <simple-id uuid='{C82F291A-36DF-42AB-9E8A-73EAAF6D5B80}' />
    </window>
    <window class='worksheet' name='Country Trend Lines'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Measure to Show (copy)]' type='parameter' />
            <card pane-specification-id='53' param='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[sum:Calculation_895371954178236418:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]</field>
                  <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[sum:Calculation_895371954178236418:qk]</field>
                  <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:date:qk]</field>
                  <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Spain&quot;</value>
                <value>-1918.0</value>
                <value>#2020-05-25 00:00:00#</value>
                <value>&quot;[federated.1778kex0kgg0m118q1p271qx5l7r].[sum:Calculation_895371954178236418:qk]&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Measure Parameter]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[Set 1]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610995380228:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_895371954196762632:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[sum:Calculation_895371954183909380:ok]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_895371954183909380:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[yr:date:ok]</field>
            <field>[federated.1tqx0su0ika3du183um0b12cwg8m].[none:measure:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{C115E562-9AA1-49B5-A3D9-3825217E3F29}' />
    </window>
    <window class='worksheet' name='Global Cases' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E460A1DF-F399-4B33-9D8A-C9480C666619}' />
    </window>
    <window class='worksheet' name='Contamination' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581611050946576:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>8025.3656870252471</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{2E3508AF-546B-428B-86F2-8168CD7BACDB}' />
    </window>
    <window class='worksheet' name='Global Deaths' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{78D9CEA4-F7B1-4D7C-9051-A710DAC29089}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Contamination'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Country Trend Lines'>
          <zoom type='entire-view' />
          <highlight field='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Global Cases'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Global Deaths'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='World Map'>
          <current-page>
            <multibucket>
              <bucket>#2020-11-23 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{8E9C89E4-3012-4A5F-A6FE-6FF7DF161484}' />
    </window>
    <window class='worksheet' name='Incidence Germany'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='0' param='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:cases:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:nuts_1:nk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:cases:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BFCFF678-AAB7-4E8B-AD22-9539D66FE4A1}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Incidence Germany'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:cases:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{6E065582-64DD-4549-84CA-FBAF7C4B6FCA}' />
    </window>
    <window class='worksheet' name='Pred Germany'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[:Measure Names]</field>
            <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]</field>
            <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[yr:Calculation_1118581611130515480:ok]</field>
            <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DAE77FF8-4501-4D6A-9100-E871A0BE9E9C}' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{1FDD80D1-DFFC-4A72-93EE-390090653271}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='38' name='Contamination' width='84'>
      iVBORw0KGgoAAAANSUhEUgAAAFQAAAAmCAYAAABagbwLAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAG8ElEQVRoge2Ze1DU1xXHP2EZZRGDuLCgAvLQ8KoVEU2LSgeKhCRqMDg4JlUbEdMwWiCa
      ADUJYy0RNL6CqcXUYLVKUOmgVkiFIlMjVcpDwYIx4VEEWRaBZdjw6i72D2rrPlnkN+1MZj//
      7d7zO/ec7957f+fcfebRo0ePMCMYFv/vAL5rmAUVGLOgAmMWVGDMggqMWVCBMQsqMJZjGRS3
      9f0v4vjOYF6hAmMWVGDMggqMWVCBMQsqMGZBBcYsqMCYBRWYMQt7k1H30FT4GcVXrnP/Hz0M
      A6IpDswKXE3Iuih8Zkx6Sr8yvsr9hIIvKujoHQRLG+z9XmT5W5uZb9TnMA//lsdfLhVTd7cR
      5RCAFTaz/fB/5S1Cf+yJtZ6nhkrfI/XgdeMxhaSRnhCkd+iZsW7sTeqU+so4n5BKtVU4q+M3
      MM/TkckiUCkb+frib8jLrUXyxlHejHQb35boq+RCcjLlhBOdspV5zmIY6KCpYD85JxuYu/ME
      axdP1XlM1X6Vi+l7uTUYyNL1r7Fo4XPYiUUw3Ifs9nkuHzlJu3sise+vwlGk+WzrqXUcqVzF
      9kPrcBhPrP9GgC0v50ZGKhVTN/Lzj98h8LlRMQEsbTzweW0vbycFIc/ezqU76nH47afu+C7+
      qgzl9fR3mO8sxgKwEDviGbWH2A1SajJSufFQ+7mb5G89Qk/wRyRn7SZ8qc+omACTpuK06A1i
      9icirc3kQpFcZ055iwzcZj+VmCCEoLJSKmpV+ES+qvNrP8Y6KJrnpd2UX60w3W9TLpevDuAX
      E4+vziIU4RiZwDJpNX86X8mIxth0/D84QUyUn94tDYB9GIEBKhq/vIHm/pOjkIHjzJmmx6nF
      xAXt/5YBwMraYPiANVZTQK1UMmyi286qMrosQ1m4xIBfkRffC3Ji4FoZzRoDc5kzX/cY0Ivy
      Wwaf/KxuoaMFpkulJkapy8QFtZNgC/R2dxsx6qK3E8QSCaa9mrppqP4GAgLxNLDqAZx9AxAp
      q2luGVfE0Hed2ioQ+/pobu22FmQ44TjL2OIwjgCChhEcNp3GnCzq9L6/1HTkZVE+6E3Iy/4m
      Ou1E0QFiBwcmGzNzckZKE52yccQ73EDJrr3UoxvPSGsTHcxgmv04/GkhQNlkjXfcJ0QfjOfz
      hBSW/iyWZfM9EE9SM9R5j9pzH3Gx1JofpX1I8CxTfXbRK4dpEskYU09BDAz294PhE/M/qNoL
      OfveAWoUM/nhB3t14unpliPiDvk/DSH/ie8n2c7AyXs5i9dGEuBpZ3QVClOHipwI2HGK2aUZ
      HPtVDCVPDNku2krsZ1G42AgykyZ29tgCsq4ujAs6TPsfUzmRfQPltFDWHEkiUE8NK1mRSdoK
      rS/VAyjlzdwtzKLo3TMU+W9j0y90y63HCCLoiKKcgtRUblmtJGLf51p16Kf8fksBXlvTiAxy
      ErY163lIL8ZX8oiihuL0JErqVTiE7WJHXDB2Rs5lHURibGb4ELjpEAFhOfw68SAnz3ixfb2X
      3lwmnl9fGefik7jl/j5vZ8TpqUP3kJQexoP96/ntF9p1nyEk2EpB0dVl3GyMCqP/bjZZW+Ip
      aZxD6J6zJG4bp5haWLhGs3KFE135F7lnyObp3Y/y4NJRqhVLeOnNIIObzsI1mojlYhpP5dJo
      klcXpG4w0NnJkDEzWSty3HFw0h3qv53J0Z0naXV4lc3HMwn3NX72mYYIFy9fUN1D1qbfYsJz
      KOSt4O6Hi9h4ILYOjqCsocVAIJpY4+I9B6oqaDDSXLXWVaG2WYCbq9ZAXxHnfvkHOm3CeT19
      G3NMLEtN4Z/DQ4AlFgZW+oQFfVbiBPeb6RyjqxzqV4KlB1I9q0kfDgFBSFQlVF7v12+g/oo7
      ZTLEy4Jw0xzgm9OZ1ONNxO539XRZhlAzMmZnrOb+3RqQLsTDQB4TFtQ5dDXOXKEor1mrBfwv
      Iy055OfLsHnhRbxNPcPc17Iy7Fn+fvywnvpWTUf+Ia7JF/DCmoWaSahvUlnUh3j5ZoJdx3Ng
      3iR/ZzZNCsOqqppOcblwAI+oVTgbsJn4sTIrmk1JL9GfG0vG7mzqm/tQPQ5A+YD7fz7AxzuO
      oZiXSGyMv+aEbTkcfiWE5IQcOnUcW+Mdt58IhxJOJ+/jdusAI8DIQAcNeSl8eqabBUm7+IF2
      Ed5YR5MK3Lx9xpncXLxdvyR74woOHcihvlnBkPpxHo3Un0lh347TqF5O5ycRhltTYa7vgBHF
      11QV/I7y4tu0dSlRA0y2w9F7Cc+v2cji79vr1mhtORyOO0a7+xbD12XqHpoKj1J49hotptyH
      lu8hOe2KSTFDOBsupOCrL4/SOmQdo/e6o3mEsWzjujELe8EENTOK+S8QgTELKjBmQQXmXy/U
      bRg5u9kEAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Country Trend Lines' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2955Nk2XXg97vPpq3K8ra9m+7pGYwDOPAkQJAAd2nWMHZD2pA2QoqQVl/0
      RaE/RRGK0AcqFCGSG9QS9ACB5YCEI2YwBuO6Z9pXd5msqvSZz9979eFlZVV1dc9Um+qaqn6/
      iJ7pfpl582bmPe+Ye865Qimlych4SrEA4t7Kfs8jI2NfsDb+0vOjRx6s50tst/jI42RkPCks
      ACEEpYL7yINJneDmC488TkbGk8LY7wlkZOwnmQBkPNVkApBxKNFao/WnBzitT31GH5WEXL+1
      wuz0BG0/omRDJBxU0KUwPErB3fVQGRmPxOLiIqVSCa01N2/epF6vc+7cOQCSJGF+fp4f/vCH
      nDhxAiEEU1NTCCEol8s7xtr1qvWaNTxts15vorUmFEDSAKdAb3WNI0fmyBRKxpOg3W6zsLCA
      7/u0222mp6eZmJjgrbfe4tatW7zyyiuMjo6yuLjInTt3OHXqFJOTk48mAFZ+CGP5Jl1VIpGK
      kqOJtYlsNSlWRjFQgHqMHzMjYydKKcIwZGZmhmKxyPr6OjMzMzSbTU6cOMHRo0eZmpoiCAKO
      HTvGyZMnWV9f5/jx4/ccTyildOJVH8vkWr0ENz/8WMbKeDBWb15h8viZ/Z7G/pKAEYAq7f4l
      mc1ySGhW7+z3FPYdIzCwl5cf7DV7NJeMJ4xMkv2ewoEkE4BDgpKZADwMmQAcEpSU+z2FA0km
      AIeETAM8HJkAHAK01pkAPCSZABwGtEapbA/mYcgE4JCQaYCH4wESeDTrtQZ522S15TNWdomw
      01ygyhilnL13s8z4RFITKHOCH4Zda4A48Lh6a4W1Wh3Lsmh1fXrNdQJlUF9fR2E8yHAZj5td
      ZD5m7GTXK7bb9VBxiJMrsL5eJ4kCQinotRoI085ygfYVjUzi/Z7EgWTXJtDI+ARfGp8AYHZm
      as8mlPHgaK3RmRP8UGQ2yyEh8wEejkwADgFaa6TMTKCHIROAw0LmBD8UmQAcBrRGxpkGeBgy
      ATgEaK3J7v8PRyYAGU81mQAcAtIwaBYFehgyATgkmLaz31M4kDxQLlB1tcZQwaXWjSg5EGMj
      gx7Fyijlx9BbNONh0aisJPKh2LUGCL0et5bWqTW76Dik7Uf47TqxsGjW61ku0H6iNYZp7vcs
      DiS7XrG+HyDjgCiOaHkROgoItZnmAllOlgu0j2hAGCZaZ9//g7JrE6gyNs4Xx8b3ci4ZD0s/
      F0grjcgUwQOR2SyHBMvJfLCHIROAQ0CaCKdRWSj0gckE4BCgtcKy3Swf6CHIBOAwoEEYgmZ1
      kU5tdb9nc6DImvofAqRMQEPQ62CY2U/6IGQa4JBguTmUlJkf8IBkAnAI0H0nWMZR/+8ZuyUT
      gEOA1grTdlAyyTbDHpBdG4wyiak1e1RKLs1uyFDRQWKh4gC3UMKxMlnaL7TWGIaJkklWG/yA
      PIAAJKwu3aHq5BmpVFhZXUcmEgwLq+Vx9MgsIPZwqhn3Y2PRJ1G0q5MRMzbZ9W1b9r/kUrHI
      yspq6nBpiOMIhCDLA9pfLDeHUhKV9Qd6IHatAdxcnpNnTuPaFjOTY1gmaAy0kpiW3b/3Z3ef
      /UDJJG2Qq1X2CzwguxYAwzQp5NNMq+2h5iz7ar/RWmNYFpHXy+oCHpDMcz0EaK0wTasfBcp0
      wIOQCcAhYKMtokwSlMo0wIOQCcBhQAhM20FrhWFkJumDkAnAIWBjJzg7JOPByQTgEKDRGKaF
      EMYOH2Dt1tV9mtXBIBOAQ4BWqQAgxI6agPrSwj7N6mCQCcAhYOAExzF3N0lMonA/pnRg2PU+
      QBKHVNfbTI6VaXsxBQtiYaNCj1x5mJydOV/7iWU7CCF27EVmbdM/mV0LgFaa1voqbS/ENTQd
      U6CTGCwXoxdy9MgcmULZH5RMEIaBEGLHSTEyjvZpVgeD3R+SF0ckSqGSmF4Qo+KQSILf64Jh
      kuYCZZsw+4EQxmAjLM3L2iTJBOAT2bUGyBdLXHj2AqZpoJTuf8+iH3s2slygfURriWHlEIax
      o0lulhrxyexaAIQwsPrPNs2td5nM9t9vtNIIIVBSIcR2pS776RFCZKnq9yIz2g8DAkzLRqPS
      AvktyDjOTpD8BDIBOASoJAFhIISBYWz/SdPd4cw0vR+ZABwGhMC0LAzD2FESKZMYrTIBuB+Z
      ABwClJQYpolh2Yi7NICWcsfmWMYmmQAcCjRCbOwDbGoApRSa7BT5TyITgEOCadlpKvTWKJBW
      mKa97Xla66xoZguZABwClJQIw+hnhG6GO7XWcNfucBz43P7w7f2Y5meSXe8DKJlwZ2mN8ZES
      1UaPyeE8kbBRQY/C8Ah5J+tJuV8IIfoCYA7u7rp/aIZpbf9dkijEazf2Y5qfSXatAZIkwTYS
      ri5UcV2XWqtLa71KN5KsVteyM8L2ESVlmg5h2wMN0G2ssX7nRvr4Fr8gjgIiv7cv8/wssvsz
      wtpN7tQ8psaGWV6uEocBYSLotppgWNkZYfvIRuTHtOyBBgi9HkG3veP41DgMiAP/ic/xs8qu
      7ZbhiWk+PzENwNTUxJ5NKOPhEEL0HeFUGJIoJIkCgLt8AA/Lye3LHB+GpSvvM3Pqwo7w7uMi
      s1kOAamzm54UubERJuOIOAx3+gBxdM8jVT+rkaFuY31PG/5mAnAY6C9e07IGd8o48EnicEcU
      SMYxpmXvGOLmu7/4TO4XqCRB7eG8MgE4DAiBYVjkhyqDzhBSJuliN+1tO8FKJpj2TgG4/cFb
      +J3WE5vybpFJsqeCmQnAIUAIgeU4zJ65OLi7a6XSnWG9fSc4TZuwtpk8SRwxfuTkIGr0WeLu
      +obHTSYAh4Cti3mQDNff8bXd7Q6vVnKzeqxP0GlRmT5C6HWfyHwfhCSOMg2Q8SlsEYCBg9u3
      /U3LIg58eq16/xkCwzS3ZY32mjXKoxOfyaKZvU7mu6cAXP/4I15/832yYroDwpaFu+EwKiX7
      9r5D0OuweuPj/nPBsOztGqDXwS2WPpORICn3wQfwel2arWy38LPMtvOAtyzcjbu4EGltgGlZ
      JHFEFHgbz+jXDWwKgFIK8RntKaqk3FPBvKcABGGCDDy2uh8yibi5sITv9Vhea9BpNqi1eqxV
      q/SCrPfMk+byz37Qz+xU2zeJBosl7RVqOS4yjoj8VACEENhujg/+6XvIjdNktMIQ4jNpAqkn
      rQG0ThgfGyU3XGFrsEwpjWsqbi43iHyPetenW1/Fl1BbW89ygfYIpTWNu1IXlFJ06+vEgTco
      iN9giy5IIz6GRRKF6XO1Bq2ZOH6W0bljAz8g1QDGjraKT4q6V0PeJ9qjkmRP53XPFdto9Sig
      2NpRxms1WKr75AxJywtRYUCoDHqtJph2lgu0RyituVKvbbsm45BCZZSg20k7PmwxXwYmEGBY
      FqbjIOMoPTtASoRhYhgGtuMOQoy6LwCa/dkRvrz2AUES3PMxKeM93QnemQukNdXqGiPTs2xN
      oxqemOblfi5QxpMl6t+ptda0qov0Wg3G50/gtRsUKqN398JKHeF+bpBp2SRRmKZKK7llE0wM
      NEDaNiUtqqdfQ/AkiVWMut8i13tb0bZDAwjDZmZ6lE69QWbZ7z9aa8K+w6qVZOXaJZavvM/Y
      /AmCbjtdHFuqwNIQZ9K39d2BAJi2g+xfh1Q7bAjA4Jph7Gnawf2QSt73Li8Mc08rmndogG5z
      nU4QY7q5zKL/DJBohex3dVBK4RbLnPnC10EY1O7c6B+SvflLmZZNt76GnctjOTkM00LKJE2V
      lnKwU2zZzqBt4sYdVhjGvpw0n6gEqe/tAximuadHv+5Y46XKOGNlk6CTZBb9ZwCtId6w1ful
      j6btYPbv4BspDxtMnzrPhz/+HhNHT2E5LoZpIpM41QBJjDA3Tvq0B63TB36DYexLQlz8CXa+
      sccaYIcAKJlQHh6lFfXYmTKV8aRRWpH0F2USR1hbC1xE2vdna3anWyhx8qUvky9XsDYEJUkw
      LYvI9zD7Z9zabi7NFmWzoOZuAQh6HX71w+/ueYNdpSXyfiaQae5pf9MdAlC9+hGXblYZKuTI
      +grvP4nSAwGIwwDbzQ8eE8JAJjHGXenN0yefAWBoYgbLcVFS4uQKRIE3qBAzLXuwsDbsfsMw
      BxtkWilu/uoXzJ9/gdoeJ8klKr5vGNQwzG0lnY+bHQIwdfos58+c5oufP0Vj+bOXHvu0Ibdo
      gDj0sXPbk9tkFG7XCluYOHoK282jlMS0HcJeF8txAVLfYGBbp0ZG6hek1wKvS7EyxsjMUTq1
      tT34ZJt8kgkEPNkokGHazM9OUio6NJrevV6T8QTRWmP0bfQkCrFsd/CY7eYIep17FrgMEGm4
      szBUodtcHwjL9oS4dHzTtkmiAK01Mgqx3Vzfwd7bvYFYJfcMg2qtMSxrT1Oi7xnoWblzmyu3
      Ghw7PrZnb5yxO6TWWIM632hwBwdw8kW8dgPTubcGAAbd4vLlCr1mbbAPkIZBt9vWtpvn8s9+
      SNjrEvdDp5Degbe2W3ncaK3uGQXSWqem2pNOhkuSiFqtyXJ1fXBNJjHr9RbddpMbt1doNeqs
      NTpUl5fp+Jm3sFdIpQb7UkkcblvsbrGE12rcs8Z3A4FAJnHqA3i9wUHaG/b+1gVtWjbrt68j
      k4ikrwGAQWENwAf/+LdE9+gq8SiCkdxHA9A/fGUvzz/eIQBx6HPl6g0Wblc5fnx222NBmB6L
      NFYp0eoF+K06oTZp1up3D5PxmFBozP5GVxIG2Fs6OhSGRlBKUhz+BE1tpIvXzuUJve4gDJqm
      REuUlFh9reDkCxx99qU0e9TvYedSh9swrYEdblo2tz98a8fbXH/7Zw8tBJZhkqidsX6tNabt
      POlkOM3pZy7wlVfPU13adIKTKKRWqxOFEcurDWyhwc4j/S5uobhnE3zakWrTBNJabbvb54pl
      nv/G76Wx/vssko2D8wzTxHbzgzCo0Q95KpmkZwwDudIQ8+dfIIk2NEAqAMLc3CCz3Nw9bfLW
      6tIWp3oLH/0VhJ1P/IyWYZPcY8w0z2nn4d+Pkx07wU6uwJH5AnFY58p1n7nZYSCNL3/uYhpe
      254RNLlnk8tIk+EGf1ea5W6HmVJ5x/Peri7zyszcjusCMTB7CpXRbYlzup8yLe7aSY4CLxWM
      /vWNiFF6FGu6OXf3sUsyjgh7HazKFm2kNSy+DjMvgbtzzpvz4D4mkO6bX0/YB7h17TJvvr3E
      8dNZA6z9Rmk10AAKuN7caW5qrWkG986mRIiB31CZnN2mQQSiv9A3r6U7x0maE9d/XydXGNQT
      pKfSmzvMEq01Qe+uO72MwLA/VQPYhkVy93nGSYRu3MQwrMcbhOoswxaBuqcAhGHAnaU1nOzw
      631Hao1QikZ1Ea01fpyw0G4Sbtkd1Wi8++TLCCGwrFQATr705W13baXUoEvEBhvlklsLbdx8
      cdBOURhGmkYRbz+B3i2UCLrt7W9e+wjmPg/Rp5tAOzRA3EVf/R4IuPvUmwciaMJW8+qD/wzN
      W4Nr9xQAvxcyM5/d/T8LKK2xhKC2fJtESQKZsNbz6G5JT1Ba07tfuoIQg9Dn3RVfo7PHuP72
      z7aZQIaRph6kOUbpdcvNEYepAGitKI2M8+bf/um2LhK5Ynl7VwmtYf1yKgBbNUDsQbB9g9UJ
      WzjRXR0pZAT165iWjTC2zDtopv9ffR/iT+hxqjV8/Dfw1v8F7Tub1wsT8N4fU//R/0GnVr23
      AMzMzZEEfnawzmcArUEHHp12E2mYxFISKYkXb97xlWabRtiKEGJHg9wNxo+cYPzISfLl4cE1
      07L6R6tuJtnZbo44DAZCMTQ+zdSJc9vqkg3LvssJ1mBY4A6li36Dy3+ZLszGZnrF6PpHWLd/
      BstboktxgO7Pf5sGeO9PwFuHy38BrYX0Wv0aVN/b/uFkBFe/D+7wtvfCcuEr/zthp063sX5v
      AdAa5KOonYzHhtSKoFmj01zHHhpBo5FKbbvjK72zcYjo9jDW64MD9O7HzOlnqUxtOs+irwG2
      Dmg5LkkYDBLvnFye+XPP0WtuVqoJoFNbY+GD/iLWGjDSWgW1RThNGy78G6i+u/larWgd//V0
      YdevphfjHubwLI64S7O1FmDtEpz+7dSeB2jdgsb1dMFvkARw+rfg+f8AwRa/SSswLEpjU8jr
      P7rPTnB1lcWFO2QisP9IpYhaDbAc7KEKjmlhCDGoEoNNR3lrKFSEEUbP/0QNcC/M/g7xVnPJ
      clziMEAmCfbij6F5E2fl9YFjDKm8TIwWCXt9P0DL/lXBtlLZ/gLcKhSWYZHIhNXgFKxdTi8m
      AWLuC1SihW01wVFnPb2jj5yCID3oQ8Yh8ewXU6Hw6oPX4w6DnQelBmMEXg8lJW1PMrL8w3sL
      wNhIifG5+d33Ts/YM5RS5Bybk698FSNfwhYCS0p0c9PhjJUib1lp0txGcUuSIIIQgbhvsty9
      2GibuFWniH7HCJlEOI1L0F2BxvVtvoMImsxH7+I0+/2HkgCcYqoBtsbxhQFbQ7Fa41ouaPC7
      EmTfuZYRUX6K+u0r6Kibjge0ekmqJXLDAyGSgYfX6X8f9Svp9SQAK7fxoQbPbaws8osPfoA3
      fJ5l89S9BaDV9agvr2YFMfuM1ppYJuTdPFaxjJSSQq2JIRWi3RksLNn1KNgOiVbYV29BkoBU
      iChKj076pGS5e7Bx4szdc5FxjBWsQW8NTGfbgXvu8s8Qr/6vlM2+Vog9sAtpffHWCM+GMGzk
      FqGxDAelFSqWmxEbGaOxsCbP4rY+hg//C8iETgAy8vtloKmWkpGH1+070UkAvVVI/E0BsPMD
      AXJch7dvv46UEmUX7y0AxZzD0RPH2RozkHFIdb2J12lze3mdRm2d1Vqb5cVF2r3wXsNkPCKX
      fvL3JEnMyPg0iZTESUKu0cZstklME+L+HXBxmYJloXoeZqOZLn4pB8XtU8fPPtD7ynh70h0A
      op9TlC9BrwpWPh1ea6hfY/jki2DlcN3+62IPzwtpr68gNxx0vb1+eQPXctNu1lGSLtY4ABmi
      MDDGzzHcfDtd0ComMoskE8+nL+zf2VUc4Hf7kaahuVRAIw+cUnqtOJUKRX+6YcFg4tgZDLd0
      n7JfAWu1xrYHhWGRJBH1dg+SiE4QE3TqJIZLq1HP+gI9ZrTWtNeXaVcXGZ+cIZSSSCZYQ2Xk
      1DjCsRFheuOJ45i8MNALi6nZs2EK9Xv9TMgH0wBxFGLfJQBCiDQ9YvQYdJYgV0F0ltJd3NX3
      We9nBOSGRlBxiI59rrzzS6798ies3b628aFori2nO7uGCSrt+uaaDgJBEiWQH01tey1RwgS3
      jDU0nUaTZAR2AXXmd9PxTBtkjBAGcRSlUSi7mO47RJ3UBAMoTg4EQGlNV3lUZo6grcLOFbt+
      +zo/+Om72I6xzQSKQ5/l5VWSJKHtR+g4JNIWXruOsN2sL9Bj4N3lt6l2V4A0+7YyPU97tUa5
      UCaSCSQSbBsMA+04GH5fAKSkVGshoxjtOCAVSIU2DZAS6/bS4D2shaV7vvdW0sKb/LZrhmGi
      4gBr5Ehq3pz8JsPdS2glUUEXYfXzhkZPYnQXIepy4pVf53Pf+ld0Ixtat0Erlq58SH3xVuqg
      hm00Gsd0kEoiY5mmTIQdSEK0MDAth8WRb6STUDHCyiE3skNNNzWVVJrV+u5//ctUg0QeJAGx
      hLWFa+jCOHg1UJJQ+uSdIkorzFxpp59brIzy7NkTtLvb48puocQrL17c5U+Z8TCse6vU/HWm
      StO0VpcZmTyGsXab2qVFwtk8Ko4xN46jdR20H4BKw6KV5VW8MydRiUZImWoBw0id4TAaaARr
      uUpyZOYTe//EYbBDAIQh0FEPKsdA+mCYlGZPE/s9RBxjFVONIQrjaK8OSYAzdCRNm5i8CEtv
      wpnvUBwZZ+X6ZYaOVrAb12HqeRwzzflXcQK5KWgvpqaNTo9+VcIEBCQhVm5zVxrDTk0lmRCG
      XfxOM/U7ZADCYunaZZzyGFff/gWn8x5CxXhSMuyOE6sYq1jZqQFkInFzBaanxnmy7ZEyDGEO
      ij+69TW8tYjpZ46i4tRUMJMEYdtIpci7LkEYgpLElol14ijh+AjJ1Dj07X9tWQg/RA0VUyHQ
      GqPnp5rkE5BRmKbBLG8eqG1aDjpoIfIVOPsvAXBLIyRBjySJMPp7DSI3hPIbkPjYpZHBNa0V
      qATTcTnzhV/n2p02eu0SQiusvrOahEmqAeLUod3IYh0Q+xi5oc00DKcIsYeSisj3OHrxZTAd
      SELQktD3mT51gfLoJI2VRUhCfDRjxXG6YRsjV75HW5SRMV5+8TleeP5cFgbdB5yuzQevv8X7
      9avoMZtcOY/tWCRRgkgkhm0jtcZ1HMIovbMnaNwTRwmlBMtExP1+mraN0e4ix0YRPQ+UQuXc
      ge9wP0zHwdYBXP9humt77e9xbUHQWkM4RZhIs4JFYQwzaiCjaJBvhDuE9pskvSZmPwPULRQJ
      u01IArRVwMnlmT5zkWpbI9C0q1WCXnfjzSEJUElMt7GeZq+mmXkQdzELlUE7F5xSakZpRWV6
      nql+MwCEgUpCDNtFCMHUyXMEXhfiHr6MGS9M0ot6mO49BCDjySCV5NLqB4N/a60Jez5T8QRv
      8TZRd51VdxUNVI6M47c9dBhhODZKawq2jReFiCgmMgwc00x3hC0r1QAIVLmIWWughkqpv6AU
      ariM0f3kWm83X8KQQbozG3sw8xKVzvtEjWXE1rTmwgRG/WOkW9msVDMsZOgTeR3oJ9nlyxX8
      Vh2iLkb/9cMTM7R6CUJG1BdvE/Z6CFP0BSAi8D3ee+0v05RsAaDRkYdwS8iNNBC3DFEPJRWn
      X/kKttOvVdAyLR7KpU6wEIIoVhA08VBMlabpRV3MfCYA+0bNW+eNOz8HYLVbJQ4iateqnHzh
      PGemz3Fx8jnWeqt8WP0V71z/e4wkwYgTuqtpQ9yS49CTCYYf0A0SiBSLnTargZ+GQAFVyGN0
      umjXSX0ApVHFAoZ3VxLZRmw+aMGN18iXhzFkCJMXYeo5KIzjFgqcffEVcLYIQH4Ec+l15NCJ
      LYX5AqUkYXcz4S0/VMHv9dBxD9w0NCkMA3dsHuE3wHYIvV5q7hgWoIm8DkeefRk7V0ArDYaN
      8hsYbnGzRtjKpeFR9GDfYu3WNZQWqQBsOR4qccegcYNeEjNRnOTNxV9wx1vOBGC/WGzfZjhX
      QWvNdz/4z/z0ez8kXy5i2Ra/Nv8lDMPklblf43zuODqJ0H6XyItQiaZzax3bMAlsG3OtToxJ
      3PT4jWMnuNPtpItdALaFzrlo1x04xtq2IJEIPxgsfOvmHUS7m+bndBY5efo4Iu7Cyd+EsXPp
      hLWGqAdOeXMDLD+K2V4gcUcGZZUAMgrotZuDf+eKZbxOi8aty5h9AQCwnDx0q2jTpDA8jtep
      p76ClkS+z9GLr1AYqqSCYToov4XpFFAyIeh10IYDUbcfgk8RhkF7bZk49NOzEfqhVirH0Gsf
      Ig2Lslvm33/uv2cpXssEYL9o+g3mhuZZ6S5xpniOO84ic0eOAenxRsIwmO9amLHk+Pkv8k7z
      Gi1PMXlyCsey8Gsd4nIBmSTkJit49Q62aRKjN0q2AIjOnQKzn46QyHRvwDTIvfGr1C8AhFJY
      K6upyTP3Kk7cRMS91MbeGi1KAjAt/EaX+vVq6mjPvkLQ65LbklHqdzvbagyEYSKxqF36Gcre
      1CBOvpAmt+WKGBg4+QKLl98FlRB7bZz+HVxJCZZL1FhEuGWqNz7i/R/9DX4QQtRNBaFPYaiC
      v3aT2B3HcnP8+OZrfO/jv6JlGXxw++co00YIA9dy+c1zv5MJwH6h0ZyfvMhfXfovTKhx/uAL
      /45XTv8aAGGvS644lJoqYyNMlWdpFRTv8S4BPsW5Eo2FVdaJWJ2ZJm+ZRF6aNelYNnEcDwRA
      VYb6b6ip31xFWRbJ5DjhhTOYjb6ZohJU90p6hy9OgLcGSQzJln2d/sYVhoWMJHH/VKCF3EvE
      YbDZr0gIVBIzMrXZUMEwDM587ffJxWsod2hw3SmUkYuv4xeGieOIfKlMr1lHT1wkmfsiVr8B
      QGoa2cSddQzb5YVv/SuOXHiRRq8BnSW02IwU2bkC0fAZouEzGG66wTaSH2Ut53Nz/Dx6dBqz
      /3w3V8wCPfuFIQyKTonfOff7iJuSwkhpUJrod5rkSmXwNFoIbMNmZmiaZ8jzztIvaAQBYr1K
      rzNEL3qWtZHrHJWjxG/HWHND9MIIu1jY/oYa1hablGZHsctFdLmI+XGaJ69qb4Azgpj/DVAO
      OuohYo19Y4noYv/ObjoQNUAYyDghCVMBiJXYcYLLyPQ8dqG07ZpRHMM2FMLZ3F+wihU6L/8n
      1i7/DB1pTMeiNDaJl5shcTuDdAytNcrMId1RTNvGLZRwCyX+9PX/k//08u/TvtMeVKbbuTzx
      2EViFO8s/4yvnP5NvKjH//3uX/OtZ3+PvHa2nKMmHlwA2o06tW7EcM4kEjbS71IcGadSyn36
      izMACGIfx0zV9vzwUW7H1zDMTWUceF0qEzPg91D9wvCjw3OcO/45ppRPL044dqrCX/zkz+jO
      1vjdE9/idnybHy/8E8Mr8wzFc1wyJNbKEkeGKowXCmAIVBTjBQkDY6X/nlpEiLkXsFda6IIi
      FgIR+Rhb0p0xN1MjkqiftwO4hTK9xvq29GnHiNNsza3kKjR6mun8pmDaboGe55PLF/EDD8My
      cXJFgl63X6qZ3hDK41N0Yg8583ncjfbuuRy+LelUjqPvvD8Y80b9KreSJVa7dX7/1f+Oglui
      7JQ5ak0zxxh3Fxg/sAnU7nTRgBclxL0m2s7TbTWyXKAHYKW7zFRpBkiLzLXafmp72OvSNUz+
      qdfC71dZvTxznNHKBKdGj/L81EmGx0aZm5nHdTxGKxO8MPMy//r5f4+/WmO50+H94CNq3Q+4
      2qilnSW0Jo/CX7ur36vSaAFqaBiz3uyHUDWEYZpWsRFxKYxB5ThGvUkSxqj+Zh7YVUkAABT6
      SURBVNr4kZOUx6fu+oQGTDy7/VJhgvJX/udtzX1NyyIIPdxCCaVVKgD5EpHX3SZQlak5mr0E
      mZ/i9eVfoLQituGZuedZ7SwT65jbzVsstm5zfOQUNdHhpDWLa2029vrWs79H0GntyIx94BVb
      KhXwej4qiYiw8Vp1hJ3LcoF2yYer7/ODK3/HdDm1kVc+vM3EudlB/55//vM/IolCbqyt86XR
      CY4OVQAYzRcGJzkKIRCG4NTZc2CD5ViYhslwscKsmuIdOkwUcgRRl1uN92mFARgGjo6p3Pyj
      tJ5Wa35UeyNd8KaFdh2SqX4deHES0byDKhXTTTWAyedg/lWcKzdRUYJpp8ZDYajC3Lnnt3/I
      s/8SSncdp2WYzD33JYojm21TlJKEfhfXzmOZFqZlYtkO7W4dL+zyxp1/BtKuFHHg4ROx7Fe5
      1bjBSneF8SDPOytvcUku4Cc+NX8dwzB40TnLWG5sm1a1nBxep7Wjj+oDm0CV0XEqo+MP+rKM
      PtXOEl869lXydh6VSBI/IjeU3hVrizfTDaLmOqXyJGKswInK8H3Hmhs+imNuz9o8PXqG20GV
      Z2rDhLkIxw754bWf8g0qvJ9rc7R3BNaWObN2CfP2PyAu/gu0KcAwiM+ewL56E6ZfRPz8/0NO
      T2Cu10lmJhF+hC4V0/Cpyg02uaBfd7xURU5PpFGm0r17RYlBgy896ALhex1yE6NgguGYCGHy
      vTt/z3ExBSNT/Hwh4bnpz7Ea1/GTLt85//u8ufIGlrCY12VUocC8KHNi/BmMnAHLixiGSRwG
      22oa3GKJbn2NubPPbZtTZrM8IW43bxHJCBA8O/U8hjCoXa8ydno6rbZSisWFa5x86ct8dOcW
      xxKNGr5/MykAx3SYGz6y7drs547znQvPcupLF7jw4ueYvvIXjK5Web92nWJwk9crw6yVTtM5
      9a20y5vXhFyJ6kZ9rSYNfz77H1DFAsILsBar2LfTx9VwGbPVHkRHzZW0dbq5Xh/8/dP41fKb
      fP/KX3OtdoXV9duU88MIy8B3fBb9RXLDFRatJt8++7s8M3GBn936MXXVIVquMmSVuDD5HFPl
      GSzD4gtzrw663W0wOneciWNntl3Ll4YoVsZ2ZrnuasYZj8wHq+/y81v/xMnR00B6F+zVOuQr
      6Xb9zVaT66aLyhXIjc4wPD+X3k0fENM2mRgdHphKpXMv8ZLpkEuWsVyPk/PjLHVusdZbIzd9
      DtG8xmKk+NP3/phu2EkdY6VoOBUuNWr8s6VIBIMNNDVUgiBM9weSBPt62plB53MY3d4nzm21
      W6XmrdMKW3z77O9yvXmN2/4SR4aPYbs279be4R+v/JDSkkfsGrhWjpH8KL915ne4WDrL6dJJ
      TMvmaOU4z02/kJ6aubZMsbLdIhmZnmds7tiO9z//ld8iV0rDsLqfTpEJwBMiZ+X5+snf5NjI
      CQC61RaVI+MDZ68R+FRqq9x461ccnTyeLrRHJfERTh7r7Dfx1qrMDg3zwtgrdG9UeW/lI9yJ
      C/jX/xbfKjI59AIfrV9KawiU4ppj0oxCbkUB7YlREAIRhuici6wMYzRamOsNtBCEnTS1Qg2V
      MRrbnewwCfmvV7/HtdoV3lt5hz977//lYl8Dvjj/BX7j1LcQQvCCeZ6v2Kt8/eg3mben+NfP
      /rtt4zj5AkG3vaNSrblyh5HpnS0h78WgtnltDe+P/4TgH17LBGCvafoNPl6/PAh7btBaqjM8
      OwrAaq/L6p0bPKttXjxxkq86RfiEVia7JuyAO0SuUmI6MhkZGidfKfI7F75GZ83Esmf4gXWO
      Wr5IxalQ89tUcwJzrU6SJJhC4EUtPly7mvbpjGKU66KLeYRt4Xx4hbBUYvXyIghBc8Tl+ws/
      SO17rbnx4U/5xeW/5+viDNfqV9Ba8R9f/p8YK6TO9uzwPCeeeRmAfL5GsRIzW5rj9MUvMj9x
      cttHGZ09zsmXvrztWuT3GJqY2bbrfDdaa/y/+x6qnnaLUJ0OyUcfU/jDf4v7lS9nG2F7yWp3
      hV8tv8Vi+w5fPvb1wfUkjBFGGsnpRCGv/fj7fPPVbzJTaRBPjX+qKbGDlTSHBwT4dXj2D9Ny
      wV4VStNYjs2QdjHsGQzTZPrUDM/aMV6ty61iHqNTZbp5goXxaf584Zf8x+GL5MKQ22GXsVyZ
      t5be49WRz2MEIbpURAkDMVQinJtBdgPCO6t0R8q8v/ImSfw23/1QYmuDKcp8M/cc1tIqF09N
      cyvxcKVENr+LMfZ7AydVS49CaRGz8FVwOsyd2+6oaq1xi0WEMNDSR3dex6h8nQtf+e00HUP2
      AAPVlqj1GnLMxRwdTTNsX3sN53PPE3/0MarRQPt+2iI+l3u4jbCM3fHR2ofUvHWenXqeueGj
      TOamiHohq5cXMSyDibNpGPRXS3f4vLaYqdaQ05MgBPHp47t/I63SHpwnvwn9QhSq78LQPNz6
      CTz/3yAMQTj9DTxjng0X8Pm5Of6hdYl6s8aZkSM8/+oFhjstLt/0+IvwA+JGTNu0eaZ0mtmh
      Y/yy9g4ddQYnCGl6tznhHKEzPMZae4n36m+yUFtADJ/nN+f+W6S1hBOFYPokjR+RTOWZaV5n
      5pn/DX3nr3GicSL+HJE7hSg+h2p8j9rSPCOnjuFEN6A4i9YKHdxALSlU7SeIosAY+S1E/hLJ
      7VX0pT8FYeC88rvIO39H/N4ylnsEe2Sc+I0fENsvoNuXsJ4dA+MWzuf/LToyQTQhvALRHbSR
      zwTgcRMkAT+5+RoCwTdO/TZCCGaH5rn0N28ycXYWr95h0YgYPjPOwso66x+/x6+NzhGfPfmJ
      ZYpAutivfr9v2pThzHfS8sH8SFpMnh8FGcM7f5QKwcv/Y5rCAMQUMPq5NVrF2KbNr505zVJ8
      ibxdwFcep8fG+WjxOnLZ5mtf+CKvLbxJZ71KaSLPh95lltsr4Aqm4i5t+T6vvfGX/Pr4NOcn
      Vxg/+T8wNn6cxO/hXP8Yx5ojPPMShlojKazhLJ8mqH0XwyxjcAQ7Potc/S5q4hrKfBHte8ik
      gN9ZpuB4oC5B4hO98xrWqYsk1xaBHyPKayCewRgqgFHE/7P/B/PEWdxvfAdLlzGWF3HOJCQL
      7xO89Ac0kzzTIzlU8zWW1NcYil7nn24c57nZBW4t3UEopXTiVR/Lj9/qJbj5+8etnwbeWXoT
      jWZ+6AgTpXSHVEnF5b97C2EaTL16mg+b61y59gEnczm+duxZzKHyJ4c8u9W0p+Xy21CaSSuy
      lt6COz+H8iyc/nZaDL5B0EqT1/ptQbSKuPGjXzB09hR1/QZmtIgX92jYF/GDFX59cpR/WF7A
      FILAPEW1vcb8cI4zQzNUe0vEcoY4aNBoVPmcmuSGNYft2rjlFk4x4K1rVzBH5hjPQdFxiXpt
      Pq9P89O8w4jroVWbZ7pFJudPcPnmIiPjeWZ/8CarTo+xr32bX96+Q/naOrOGjwpvkM+bIEOM
      oRexZ1q4018lPjKJqr2G0TuHGwqiZzajadWGh20ZTBhF7OVFgtPTvHfpDdaiKS4vr/O/fPsl
      mvVrfP8XHzAzewFh5BgbyjM2nH9UAdDcuXWbwsg4o0OFp1IAEpVQ7Syz0l2iFbRo+HX+4MIf
      YmCglGL18iJCwEoS4F1bIzpd5IsJJO0mI+Mz6JxLfOrY5t0/CdI/K++kC19JKE5Sa92kNHaO
      xfI0lmFzs3EdK+zglKbw4y6u6WAREMdtkriJtGeJ/ZsoDLRwiGoLuENTnJ77EsIqkxcOI+oS
      2ijilD/fL0QBlMLvd5oDiBOFbUC3F+DXOozNjNJebhA31nhjeZmPjFt8pX2MYy+fYFkneB9d
      obJW5arZoaC7zJTPc+Nmh9kpGy/oMFKe5c7qxySujeMWUE4X5Uxzs95Czg7jeCu8evYIYfgM
      zWKOpGfiV1c4NzPOT1c6zEYhhi0I3BznZ0apY7Jw+WNkzuGUHOJIyeBXxTyLq006gc/0rEtO
      lomV5vj0MP98aZl/89WzHC3ZaWTrUQRAJyGLtbRP0OzcLM12iOUUUGqzs/DWk0S01unRPP2C
      CsMwsG//I+Lu1tj7gCbtw2kYxo7QWCgjBIJO1MYxcyQqJpYhQRKy1F7kUngeu3yBkesrqGNz
      HGm8xesLLi9bC7x78vOsBjnmgRoRZ2yb5eoCMydOYYoYQwZo30PEbaQXIJWftiCZOMmaLuD2
      c2fWwxolpeioCNMpM+/FaF8RjfRwIgvpuESyCLaD0w0ozB5NHcQgRMcxXrNHYWIEEYcgFWp9
      DT07B76PbLawTQEjo6mjWG+gJyYwxsdIlEYvLeM4Fnp4GB1FGEqS5PIE1SYOMYlTJGj75GSA
      NTmBbzn41Qal8QpGwWXKgKsrTco5m7Jr06y3GQuadKdmWe0FTOfzjJQcwpkhVm+v0QpiyrHk
      KsscnSsxJSf4SPSoGAkjscYpjqGE4uq6z3glwUwUrtKUGOFFy+JPei3G8yYxIUNhm3Y0jjMf
      MWvP8MvrdZ6fcjAVWCp+RA2gFVeuXKc0Ms7MROXhNMAenv/0pNj4BKrewBgeQkcRrW5IXse4
      E+Ofbts/IBunNm49vXHjOuy86dzrtVufv+Pz3PX4vd4DYPGdGwzNjpL4EZWjj54ec/fnudm4
      TtEpMlGc2vacu+e0gdkzsZcWCc5M73jsfjyaEywMzpw9/UhDPO7FsR9sfAJzLI3rC8tipFC4
      /wsex3tuyWm/32O7efyTxv6056skjfcL0/jUMXfL1nFOjJ7a9Rw3H/j0z7eVbCMs46ExLGNb
      KvdBJBOAjIdmo5bBsA7uMjq4M8/YdzbOGj7IZAKQ8dAopQbRvIPKwZ15xr5jmAZaqgMdyMgE
      IOOhUVKhNdtKDw8aB3fmGfuOMNI65oPcRjwTgIyHR6eRIHGAfYAH3ghr1NZpeglFGyJsVJD2
      BRobLu7F/DI+wwhDoKTefpL7AeOBRLe+vk6j3UsPbFNA2MUolPG7nawv0FOIEAIVJ0+PAIyO
      jzM6XETGCVrGJIZL2G5gufmsL9BTiDCNbYmPB5GsL1DGQyMMgYzlgRaAzGbJeGiEIdBSZWHQ
      jKcTYRjp0aYHmEwAMh4aIdLW6FkyXMZTiTD6p7sfYDIByHhohCH6DnDmBGc8hRimMTgn4KCS
      CUDGwyMEmqwiLOMpJU2HPtgCsOuNMJXENDoeRdek3o0o2RAJBxV0KQyPUso7nz5IxqHjoFeE
      7UoAkjgmTiR+EOL1ErSCRgQkbYRTIKjVKMzPkSmUp4s0HVofZB94dytWygTf91lerhLHMS0v
      REcBoTTotRoI085ygZ5CNnaCDzK70gBuLo+byzM6OrLX88k4QBimccBd4MxmyXgkRBYGzXh6
      MUxj20mMB5GDPfuM/UWAjLNUiIynFMM0D3Q1GGQCkPGIZMlwGU8twjQOdDEMZAKQ8QgI0W+R
      foDJBCDjoTEOgQbYdS6QjCNqbY+CBWvtgJGiPegLVKiMMVRwP32QjMOFEA98IMVnjV2JbxwG
      BLEkjiLqjSaGYdDxI4J2nVjYtOr1rC/QU8hh0AC7m70QJFHI8soqTq5Aq9lGRgGhNtNcIMvJ
      coGeVg7w3R92aQLZjsuw4/LKixUApqcn93RSGQcH0znYZ60fbP2Vse9kG2EZTzWmZe73FB6J
      TAAyHomD3BMIMgHIeESMTANkPM1kGiDjqeYgnxAJmQBkPCKGnYVBM55inAOeArNr8Y1Dn1uL
      a0yMDtHyYkoOxDjIoEOxMs5wKbeX88z4jDJ98ch+T+GR2JUGCH0PP9YUXZPVpodQCb0wIeo1
      kFaOdrOR5QI9pRzkRDjY5Yq1bIe422S1HeIairYfoeOQSFv4rQaG7Wa5QBkHkl2ZQKZlMTY9
      y9j0Xk8nI+PJktksGU81mQBkPNVkApDxVJMJQMZTjVBK6bi3Qs+LHnmw9LSQBw2LGYDu/9kL
      TGAv+lce1Hnv9dh7Pf79xxYASqMfoEZBKKV04lUfy9QeBo0Y/Hevxhd7sEgP6rz3euy9Hv9x
      j73viRx7+UPs5fgHdd57PfZej/+4x35yAqAklz++yZlnTmEChB0WOxpDxgwVHfxYM1ywuXrl
      OuRKRGHEs+dPY+1SnQVel8XVFqeOz6Gk5N33PuDkqVMEUUK3sc7E7DyWjrh67RZWoYRS8OzZ
      4586rtftUG10OXFkBul3effmKjnpMTQ6SZAo5sbLSGHTrq/R7vmEUcLYxBRzU7s7SyH0etxe
      bXL6+BygufLhh0ycOIffWGdkdJQginAMxZWrdygMFwkjxcVzJ3Y3tt9jodrkzPE5kAG/fH+B
      iZxGjIxja8jnbIaKea5du06CTRDFnH/mNDl7dzn+UeBxa7nGmRNpOkS1uk6lMgSA3+sinDyW
      jvj46hLlkTxRBBd28Z0DyDjkys0VnjlzDIBep06g8pRzJtW1dWamxrj68XUSy0UlCefPn8He
      remjEi59vMC5Z04+QQEwTMZGhgb/jKOYbrvHarXK1PQ0ecdiuDBMeXwKkgids9APIOy5Qoli
      3t927dbNW4RYTI8UWa2uMjc5wvjMHHHgo3Y5eKFUJt8LANAaHFMRSwvP81ldqyOTgJPHjmKa
      JvPTY6z3FDLevT/lFoqU8l5/fEmjExDfWaBoO1z54CMmzp3CQTM1P0vke9jm7r8UN1+k3B8b
      oOCY9JIEq91iYa3G+MwsQ8UcuVIFW0ikzhNLtWsBcHIFyoUeG19OGMesVNeQSYJlmZhWTKWc
      Z+7oDIHnYed2P3fTdqkMFfpDa6IwZrnRo2NqtGWChtLIGFolmEKTKLB3G9IxLMZGysAT1ABa
      JrR7XfS6TaVSptaNOD47Tt51GB+rYAqBVjF+t8PU9CQ9L9z13R/A67Zpd7rki2WGii7nLzyD
      oRKWah0cUzE0Mo5UAd12m6mJEUK5u7G7rSadnk+x51PK5TgxP4vUAmRMvlhkfHQIyzTSo6MC
      h5xIGJme2PW8/W6Hdrs/75zB8y+9iIp73LixwukLZ3HyLn67RafVYnpyjCDe/SLyux3aHY9c
      waNScjlxfJZEagSSfL7IyMgwWmtC36M8OUGv51Nyd78kAq9Lu93FzRepFG0My6FSMGn7irFK
      CUi1RKvZZnpy9985QBL6tNtdHDfHULmAFxucmq2w3goYHymjtcL3ekxMTuAHETnrAbwxGdPq
      dDFta/+d4IyM/STbB8h4qskEIOOp5v8HiocR3bN7WFAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      qPD/A950JF8W6+XMAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='38' name='Global Cases' width='144'>
      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
      hUb9Or2eg5kncXJyIib64UVTnU7Hzl0Z3LxdzgtTJ7RYK/o1yMm7woWsXEaOiDFb6HyQlu6j
      RqNh2+ff4OLizMjhMUZjrRKQi7OYpEWzUatrmT1vKRcv5aLRatHpdBRcKWJu4goAXo2fYrCI
      eQXXcHN1NhCVpWzZnsagkVPYsj3NoL2yspo7ZXfp0jm4VdnG85PHMmzwABYteZdd3x5oOrNJ
      ZVUkp2xkz75MXp/5YtMhX6WuZeFbq9myPY2y8gp0Oh06vZ6S0lssXvIue/cfJWnhaybDaF7+
      VUaNf4m/JSSZDRutRattZO+Bo3h5Shg+JNqiMS7OYt5YMAtZZRXLVq7j5q07wC/Xvi6V/17I
      ZvHfZxq9B4M2+JzDz9eHf61/mz17M0lel8qdO+UAeHt7MmHsUzw3/mmjcrxUWkllVQ3TXp77
      UP9DB/VnedK8h9rdr2ek7d5P2u79Ldq6OItZu+rNpmwK7r3zmTv7ZWIGRrLt891s2LQDjVaL
      i7OYAf37kPrRaoMMUSx2YsYrz7NzVwaz5i4xqH8NjulH4rwZJssGD2PpO+/z3ckzZvuWPvB3
      eGiIUXmk+EYJ5/57iWlTx+HtZXzDzdE+wJfUj1bzybavmDknCblC2fQ5x8YPV/56n3MI/H8j
      fJEoYBWCgASsQhCQgFUIAhKwiv8BEKiaGBr75g0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='38' name='Global Deaths' width='144'>
      iVBORw0KGgoAAAANSUhEUgAAAJAAAAAmCAYAAAAr1RLQAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAIdElEQVR4nO2ca0hUXRfH/42hlTcEE4tQu8ADjpcJpSKZwtJM0RRlAvGCmZKQMmWiU1qQ
      qUWkeMPU7GaTlJlYSn7Q0sJKaqbGC3n5JIbDeFdmjpdx5uz3QxRWznjG0ed9hPP7NJy91tpr
      b/7nrL33OcwGQggBC8sK4fy/E2BZ37ACYjEKVkAsRsEKiMUoWAGxGAUrIBajYAXEYhSsgFiM
      ghUQi1GwAmIxClZALEbBCojFKFgBsRgFKyAWo2AFxGIUrIBYjGLjv9XR5OQkioqK0Nraivz8
      fLi5ua1abLlcjsTERAwODsLV1RXFxcUwNzf/y66urg5ZWVl6Y/n4+ODGjRu/XZuZmUFLSwte
      vnyJ3t5eUBQFa2tr7N+/H6dPn8bu3buNHoNGo0FWVhYaGhpgbm6OoqIinXOkVCpRXV2NV69e
      4fv376BpGmZmZnB3d8eZM2fg7u6+pB9N05DJZHj8+DEkEgkoigKHw8HWrVsREhKCiIgIbNmy
      xbDEyRozOztLysrKiJeXF/Hw8CCHDh0iHR0dqxZfq9WSvLw8cvHiRXL+/HkSExNDVCrVkra5
      ubl625eip6eHHDt2jISHh5OGhgYyPj5OCCFEoVCQgoIC4uXlRSoqKohWqzVqHO3t7UQgEJC7
      d+/qnCOtVktevHhBjhw5QpKSkohUKiVqtZoQQsjIyAgpKCggfD6fPHz48K98hoaGSFJSEvH1
      9SWVlZVkZGSEEEKIWq0mnz59IgKBgISHhxO5XG5Q3msmoJ+D9fHxIR4eHiQ8PJykpqauuoC+
      fPlCgoODSV9fH0lLS9MpkIWFBSIUCklaWppB8YeHh8nAwIDOdrFYTPh8PpFIJAbn/pPp6Wly
      6tQpIhaLSVNTk845ev36NQkICCAfP37Um4+vry/p6+v7dY2iKBIXF0euXr1KKIpa0m90dJSE
      hYWR7Oxsg26GNVsDdXd3Izc3FxqNBleuXIFYLF6VR/1iKIpCSUkJ/Pz8sGfPHr22s7OzmJyc
      hIODg0F92NnZwdHRUWe7t7c3LCws0NHRYVDcxVRXVwMAgoKC9No5OTmhoqICBw4c0GnD5/MB
      ABKJ5Nc1ExMTJCQkICMjQ2eJsrW1xcGDByGRSDA1NcU49zVbA5mYmCA4OBjx8fGwtLRckz7q
      6uowPT0NgUAADkf/vaBUKjE6Oort27evSS4rpb+/H7W1tRCJRLCystJru2vXLsZxVSrVr99m
      Zmbw8PBg5Dc3NweNRsO4nzUTEJfLBZfLXavwGBwcxPPnzxEbGwtbW9tl7UdGRqDRaFZdQO3t
      7VCpVDoXrvpQq9V48OABeDye3qeKIUgkEqhUKjg7OxvkNzk5CYlEAicnJ1hbWzP2W5fbeI1G
      g3v37mHbtm04evQoIx+FQgGtVgsbG5tVyYGmaTQ1NaGwsBCRkZHYu3evwTFaW1shk8kQExMD
      U1NTo3OSSqUoLi4Gl8s1KJ+5uTnk5uZiYGAAISEhMDMzY+z7r23jV5MPHz7g/fv3uHnzJjZv
      3szIR6FQQKlUIjw8/Lfr1tbW4PF4iIiIAI/HW7YU0jSN8fFxCIVCKBQKJCcnIzAwcFm/Pxkb
      G0N5eTmCgoKWXb8tB03TqKmpQWFhIRwcHJCZmbnkMcZSyOVyXL58GT09PUhISICPj49Bfa87
      AZWXl6O2thZ37tyBk5MTY7+YmBjExMTobJfJZPDx8UFQUBCEQqFOQXA4HJiamoLL5UIul+PZ
      s2dwcXExaH3S2dkJoVCIpKQkhIaGMvZbDE3TaGtrQ2ZmJtRqNVJSUvDu3TtGQlYqlcjOzsab
      N2+wb98+XL9+HXZ2divKY12VsP7+ftTU1CAqKsog8TDBzc0N/v7+aGlpwdjYmF5ba2trpKen
      o76+Hvb29oiLi4NMJmPUz+zsLMrKyuDs7Ax/f/8V5apWq1FSUoKUlBQ4OjriyZMnOHHiBCPx
      9Pf3Izo6Gm1tbUhJSUFhYeGKxQOsIwGp1WqUlpbC1tYWAQEBqx6fw+HA1dUV09PTUCgUjHws
      LS1x6dIl2Nvb49GjR4x2L42Njejq6kJ0dDTj8rsYtVqNvLw8VFZWIjQ0FLdv32a8Meju7sa5
      c+cwPz+P0tJSnDx50uDS+yfrpoT19vZCKpWCoij4+vrqtT18+DCApV9L6GNubg4cDgcmJiaM
      fWxsbODg4IDh4WHMz89j40bdU0pRFOrr6zEzM4OzZ8/qjRsbGwvgxznUgwcPfj0lGhoaUFtb
      i+PHjyM5OZnx4ntychI5OTmYm5tDXl4eXFxcGI5QP+tGQG5ubnj79q1eG5FIhOHh4b/ehdE0
      DQB67zaaptHZ2Ql7e3vs2LGDcV40TYOmaZiYmGDDhg16bc3NzXH//n29Ns3Nzbh27dqS78JG
      R0chFovh5uaGlJQUg3Zu9fX1GBgYQEZGBng8HmO/5Vg3JcwYxsbGkJGRAblcrtNGKpWipaUF
      gYGBv52DfP78GUqlUqdfZ2cnpFIpvL29DX8RaSBfv36FQqFAVFTUsoeOi6EoCi0tLXB1dYW3
      t/eq5vSfFJBIJIKnpyeam5tXJZ6VlRXMzc0RFhaG1NRUfPv2DQsLCwB+3NVFRUW4cOEC/Pz8
      IBAIfvNtbGxEUFAQsrOzIZPJQFEUAGBiYgJPnz5FcnIy+Hz+X37Nzc3w9PSESCRalTEAP9Yw
      FhYW2Llzp0F+4+PjGBoawj///LOidZc+1qSEURSFxMREdHV1Ldn+s77/xNC1iqFs2rQJ6enp
      iI+Ph1gshkgkgkKh+O0ziPz8/CXPgTIyMhAZGYm6ujrk5ORgaGgI8/Pzv86Pbt26xej8aDUY
      GRnBxMQEo63/4jmdmprC/Pw8qqqqUFVVpddvuU9J/mQDIewfTLGsnP9kCWNZP7ACYjEKVkAs
      RsEKiMUo/gfR9K4PGvSPAAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Incidence Germany' width='192'>
      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
      YmWNzb98l3Kp1FH6vNd6RTiNGFsYUey4YS+oexbw+XxW1PLKyooVCSpA4LJzrywyceP8zg0R
      Dgl74kK3I1l4j1NzF8nki62yFbpOvlpjK1dAcsSUtOaCtf1Drg6nOcl3+0dDO8FsHOVImiYD
      Afdulv1y9/MSQdMwKe53L2Xejcv1A2dVfnuNc9r49nWJ36OPd3j3f/qXSJLUoYjao0Xt9x0f
      HzM2NmalUzq7uog5ewXY9Xomv99PKBRifHyc4+Njnjx5wpMnT2g2mxwfH7viqnzaJgmZX8j9
      IkZILNDtIcR39Xqd66++ytJRi/IPCiXuEiA7Ps+H+znq7YZqL08EiYZhopsmJasU9heLq9k+
      LjARDrp+J9l+94MqzpWctjKTlic6OpVEk88fmuCEfpXjsyrDZwGjnW8dffcRH/3Vj/B6vR3h
      Cm4EEI1GO+ryCGW22yllF8f68X+I7wKBAJcuXWJ+fp4rV65wcHBAPp/vqDsqQBahod1AJEB7
      vV58Ph8+n6+jUrDQxu2cXPwWEYW+iRl+mS2xXKhw9dp1Ll2+zKVv/Baf7x2xXyh2PPD1iTH+
      r8frfOpP8b21DOVG07IA9QPCYtQCExoNFBd5sNdoZxGL+iHRdy5NkL+eJhdRzkzOXxR53ZDm
      PKZUNzAMA58pUfrf/oqN9XWCwWBLfrcZQ4TMrmkaGxsbTE9P971mpz4ifjuLbLk9j72M++jo
      KH6/30ryt4/9/wN0aTi2OOBCBAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Pred Germany' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='World Map' width='192'>
      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
      QmCC
    </thumbnail>
  </thumbnails>
</workbook>
