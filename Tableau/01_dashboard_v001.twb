<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.20.0415.1518                               -->
<workbook original-version='18.1' source-build='2019.2.11 (20192.20.0415.1518)' source-platform='win' version='18.1' xml:base='https://dub01.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='01_dashboard_v001' path='/t/aidacovid/workbooks' revision='1.5' site='aidacovid' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='Top10 Europe' caption='Country Selection' datatype='string' name='[Measure to Show (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Top10_Europe_total&quot;'>
        <calculation class='tableau' formula='&quot;Top10_Europe_total&quot;' />
        <aliases>
          <alias key='&quot;Bottom10_Europe&quot;' value='Bottom 10 Europe' />
          <alias key='&quot;Bottom10_Europe_Germany&quot;' value='Bottom 10 Europe + Germany' />
          <alias key='&quot;specific&quot;' value='GER + USA + SWE + JPN' />
          <alias key='&quot;Top10_Europe_Germany&quot;' value='Top 10 Europe + Germany' />
          <alias key='&quot;Top10_Europe_total&quot;' value='Top10 Europe' />
          <alias key='&quot;Top10_total&quot;' value='Top 10 World' />
          <alias key='&quot;Top10_total_Germany&quot;' value='Top 10 World + Germany' />
        </aliases>
        <members>
          <member value='&quot;Germany&quot;' />
          <member alias='Top10 Europe' value='&quot;Top10_Europe_total&quot;' />
          <member alias='Top 10 Europe + Germany' value='&quot;Top10_Europe_Germany&quot;' />
          <member alias='Bottom 10 Europe' value='&quot;Bottom10_Europe&quot;' />
          <member alias='Bottom 10 Europe + Germany' value='&quot;Bottom10_Europe_Germany&quot;' />
          <member alias='Top 10 World' value='&quot;Top10_total&quot;' />
          <member alias='Top 10 World + Germany' value='&quot;Top10_total_Germany&quot;' />
          <member alias='GER + USA + SWE + JPN' value='&quot;specific&quot;' />
        </members>
      </column>
      <column alias='New Deaths' caption='Measure' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;new_deaths&quot;'>
        <calculation class='tableau' formula='&quot;new_deaths&quot;' />
        <aliases>
          <alias key='&quot;new_cases&quot;' value='New Cases' />
          <alias key='&quot;new_cases_per_million&quot;' value='New Cases (p.M)' />
          <alias key='&quot;new_deaths&quot;' value='New Deaths' />
          <alias key='&quot;new_deaths_per_million&quot;' value='New Deaths (p.M)' />
          <alias key='&quot;total_cases&quot;' value='Total Cases' />
          <alias key='&quot;total_cases_per_million&quot;' value='Total Cases (p.M)' />
          <alias key='&quot;total_deaths&quot;' value='Total Deaths' />
          <alias key='&quot;total_deaths_per_million&quot;' value='Totals Deaths (p.M)' />
        </aliases>
        <members>
          <member alias='New Cases' value='&quot;new_cases&quot;' />
          <member alias='Total Cases' value='&quot;total_cases&quot;' />
          <member alias='New Deaths' value='&quot;new_deaths&quot;' />
          <member alias='Total Deaths' value='&quot;total_deaths&quot;' />
          <member alias='New Cases (p.M)' value='&quot;new_cases_per_million&quot;' />
          <member alias='Total Cases (p.M)' value='&quot;total_cases_per_million&quot;' />
          <member alias='New Deaths (p.M)' value='&quot;new_deaths_per_million&quot;' />
          <member alias='Totals Deaths (p.M)' value='&quot;total_deaths_per_million&quot;' />
        </members>
      </column>
      <column alias='predict' caption='Prediction' datatype='date' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='#2020-11-16#'>
        <calculation class='tableau' formula='#2020-11-16#' />
        <aliases>
          <alias key='#2020-11-16#' value='predict' />
        </aliases>
        <members>
          <member alias='predict' value='#2020-11-16#' />
        </members>
      </column>
    </datasource>
    <datasource caption='[01b] - owid_clean' inline='true' name='federated.1778kex0kgg0m118q1p271qx5l7r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='owid_clean' name='textscan.0cb2auj0hmj29f114n4zt03kz22z'>
            <connection class='textscan' directory='C:/AIDA/CertProjCovid19/Tableau/Input' filename='owid_clean.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0cb2auj0hmj29f114n4zt03kz22z' name='owid_clean.csv' table='[owid_clean#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='real' name='total_deaths' ordinal='7' />
            <column datatype='real' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='integer' name='icu_patients' ordinal='17' />
            <column datatype='real' name='icu_patients_per_million' ordinal='18' />
            <column datatype='integer' name='hosp_patients' ordinal='19' />
            <column datatype='real' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='integer' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='real' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='integer' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='real' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='integer' name='total_tests' ordinal='25' />
            <column datatype='integer' name='new_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='real' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='tests_per_case' ordinal='31' />
            <column datatype='real' name='positive_rate' ordinal='32' />
            <column datatype='integer' name='tests_units' ordinal='33' />
            <column datatype='real' name='stringency_index' ordinal='34' />
            <column datatype='real' name='population' ordinal='35' />
            <column datatype='real' name='population_density' ordinal='36' />
            <column datatype='real' name='median_age' ordinal='37' />
            <column datatype='real' name='aged_65_older' ordinal='38' />
            <column datatype='real' name='aged_70_older' ordinal='39' />
            <column datatype='real' name='gdp_per_capita' ordinal='40' />
            <column datatype='string' name='extreme_poverty' ordinal='41' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='42' />
            <column datatype='real' name='diabetes_prevalence' ordinal='43' />
            <column datatype='string' name='female_smokers' ordinal='44' />
            <column datatype='string' name='male_smokers' ordinal='45' />
            <column datatype='real' name='handwashing_facilities' ordinal='46' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='47' />
            <column datatype='real' name='life_expectancy' ordinal='48' />
            <column datatype='real' name='human_development_index' ordinal='49' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekly_icu_admissions]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>weekly_icu_admissions</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_icu_admissions_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>weekly_icu_admissions_per_million</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekly_hosp_admissions]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_hosp_admissions_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>129</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country' datatype='string' name='[Calculation_1118581610973171713]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[location]' />
      </column>
      <column caption='Period' datatype='string' name='[Calculation_1118581610988412931]' role='measure' type='nominal'>
        <calculation class='tableau' formula='str(DATEPART(&apos;day&apos;,min([date]))) + &apos;.&apos; +&#13;&#10;str(DATEPART(&apos;month&apos;,min([date]))) + &apos;.-&apos; +&#13;&#10;str(DATEPART(&apos;day&apos;,max([date]))) + &apos;.&apos; +&#13;&#10;str(DATEPART(&apos;month&apos;,max([date])))+ &apos;.&apos; +&#13;&#10;str(DATEPART(&apos;year&apos;,max([date]))) + &apos; (CW &apos; +&#13;&#10;str(DATEPART(&apos;week&apos;,max([date]))) + &apos;)&apos;' />
      </column>
      <column caption='Filter_by_Paramter' datatype='boolean' name='[Calculation_1118581610995380228]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Measure to Show (copy)] = &quot;Germany&quot; THEN [Top Countries Total Cases (copy)]&#13;&#10;ELSEIF [Parameters].[Measure to Show (copy)] = &quot;Top10_Europe_total&quot; THEN [Top Countries by New Cases (copy 2)]&#13;&#10;ELSEIF [Parameters].[Measure to Show (copy)] = &quot;Top10_Europe_Germany&quot; THEN [Set 3]&#13;&#10;ELSEIF [Parameters].[Measure to Show (copy)] = &quot;Bottom10_Europe&quot; THEN [Top Countries by New Cases (copy)]&#13;&#10;ELSEIF [Parameters].[Measure to Show (copy)] = &quot;Bottom10_Europe_Germany&quot; THEN [Set 2]&#13;&#10;ELSEIF [Parameters].[Measure to Show (copy)] = &quot;Top10_total&quot; THEN [Set 1]&#13;&#10;ELSEIF [Parameters].[Measure to Show (copy)] = &quot;Top10_total_Germany&quot; THEN [Set 4]&#13;&#10;ELSEIF [Parameters].[Measure to Show (copy)] = &quot;specific&quot; THEN [Germany (copy)]&#13;&#10;END' />
      </column>
      <column caption='ShowValue' datatype='real' name='[Calculation_1118581610997878789]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='IF [Calculation_1118581611035512838] &lt; 11 THEN SUM([new_cases]) END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Country_Rank_by_new_cases' datatype='integer' name='[Calculation_1118581611035512838]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM([new_cases]))'>
          <table-calc ordering-field='[federated.1778kex0kgg0m118q1p271qx5l7r].[Calculation_1118581610973171713]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Top 10 Countries' datatype='real' name='[Calculation_1118581611048226829]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF RANK(SUM([new_cases]))&lt;=10 &#13;&#10;THEN SUM([new_cases])&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Global Contamination [p.M.]' datatype='real' name='[Calculation_1118581611050946576]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([new_cases])/SUM([Calculation_1118581611051085841])*1000000' />
      </column>
      <column caption='c_pop' datatype='real' name='[Calculation_1118581611051085841]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Calculation_1118581610973171713]: AVG([population])}' />
      </column>
      <column caption='Global Cases' datatype='real' name='[Calculation_1118581611054268434]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([new_cases])' />
      </column>
      <column caption='first case' datatype='date' name='[Calculation_734086793138049024]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{ FIXED [location]: min(if ([new_cases])&gt;0 THEN ([date]) END)}' />
      </column>
      <column caption='has first case' datatype='boolean' name='[Calculation_734086793146056705]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[total_cases]&gt;0' />
      </column>
      <column caption='Log_per_M' datatype='real' name='[Calculation_895371954159882240]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ISNULL(SUM([new_cases_per_million])) THEN 0&#13;&#10;ELSE LOG(SUM([new_cases_per_million]))&#13;&#10;END' />
      </column>
      <column caption='Measure_by_Selction' datatype='real' name='[Calculation_895371954178236418]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == &apos;new_cases&apos; THEN [new_cases]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_cases&apos; THEN [total_cases]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_deaths&apos; THEN [total_deaths]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;new_deaths&apos; THEN [new_deaths]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;new_cases_per_million&apos; THEN [new_cases_per_million]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_cases_per_million&apos; THEN [total_cases_per_million]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_deaths_per_million&apos; THEN [total_deaths_per_million]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;new_deaths_per_million&apos; THEN [new_deaths_per_million]&#13;&#10;ELSE Null&#13;&#10;END' />
      </column>
      <column caption='Event' datatype='string' name='[Calculation_895371954181685251]' role='measure' type='nominal'>
        <calculation class='tableau' formula='ATTR([federated.1tqx0su0ika3du183um0b12cwg8m].[measure])' />
      </column>
      <column caption='Global Deaths' datatype='real' name='[Global Cases (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([new_deaths])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='string' name='[iso_code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;OWID_KOS&quot;' value='&quot;Kosovo&quot;' />
        </semantic-values>
      </column>
      <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_734086793146056705]' derivation='None' name='[none:Calculation_734086793146056705:nk]' pivot='key' type='nominal' />
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <group caption='G + US + SWE + JPN' name='[Germany (copy)]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[location]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;United States&quot;' />
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Top Countries Total Cases' name='[Set 1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[location]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Bottom + Germany' delimiter=',' name='[Set 2]' name-style='unqualified'>
        <groupfilter function='union'>
          <groupfilter field='[Top Countries Total Cases (copy)]' function='reference' />
          <groupfilter field='[Top Countries by New Cases (copy)]' function='reference' />
        </groupfilter>
      </group>
      <group caption='Top Europe + Germany' delimiter=',' name='[Set 3]' name-style='unqualified'>
        <groupfilter function='union'>
          <groupfilter field='[Top Countries Total Cases (copy)]' function='reference' />
          <groupfilter field='[Top Countries by New Cases (copy 2)]' function='reference' />
        </groupfilter>
      </group>
      <group caption='Top + Germany' delimiter=',' name='[Set 4]' name-style='unqualified'>
        <groupfilter function='union'>
          <groupfilter field='[Set 1]' function='reference' />
          <groupfilter field='[Top Countries Total Cases (copy)]' function='reference' />
        </groupfilter>
      </group>
      <group caption='Germany' name='[Top Countries Total Cases (copy)]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
            <groupfilter function='member' level='[location]' member='&quot;Germany&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Top 10 Europe Total Cases' name='[Top Countries by New Cases (copy 2)]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
            <groupfilter expression='MIN([continent]) == &quot;Europe&quot;' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[location]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Bottom Countries Total Cases' name='[Top Countries by New Cases (copy)]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
            <groupfilter expression='MIN([continent]) == &quot;Europe&quot;' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[location]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.387692' group-percentage='0.298462' measure-ordering='alphabetic' measure-percentage='0.101538' parameter-percentage='0.212308' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_734086793146056705:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>false</bucket>
            </map>
            <map to='#e15759'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:continent:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='%null%' />
        <semantic-value key='[County].[Name]' value='%null%' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column alias='Top10 Europe' caption='Country Selection' datatype='string' name='[Measure to Show (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Top10_Europe_total&quot;'>
          <calculation class='tableau' formula='&quot;Top10_Europe_total&quot;' />
          <aliases>
            <alias key='&quot;Bottom10_Europe&quot;' value='Bottom 10 Europe' />
            <alias key='&quot;Bottom10_Europe_Germany&quot;' value='Bottom 10 Europe + Germany' />
            <alias key='&quot;specific&quot;' value='GER + USA + SWE + JPN' />
            <alias key='&quot;Top10_Europe_Germany&quot;' value='Top 10 Europe + Germany' />
            <alias key='&quot;Top10_Europe_total&quot;' value='Top10 Europe' />
            <alias key='&quot;Top10_total&quot;' value='Top 10 World' />
            <alias key='&quot;Top10_total_Germany&quot;' value='Top 10 World + Germany' />
          </aliases>
        </column>
        <column alias='New Deaths' caption='Measure' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;new_deaths&quot;'>
          <calculation class='tableau' formula='&quot;new_deaths&quot;' />
          <aliases>
            <alias key='&quot;new_cases&quot;' value='New Cases' />
            <alias key='&quot;new_cases_per_million&quot;' value='New Cases (p.M)' />
            <alias key='&quot;new_deaths&quot;' value='New Deaths' />
            <alias key='&quot;new_deaths_per_million&quot;' value='New Deaths (p.M)' />
            <alias key='&quot;total_cases&quot;' value='Total Cases' />
            <alias key='&quot;total_cases_per_million&quot;' value='Total Cases (p.M)' />
            <alias key='&quot;total_deaths&quot;' value='Total Deaths' />
            <alias key='&quot;total_deaths_per_million&quot;' value='Totals Deaths (p.M)' />
          </aliases>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1tqx0su0ika3du183um0b12cwg8m'>
        <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='[02] - Country Details' inline='true' name='federated.05u4i471ywr5a811qiskp1vheq6p' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='country_details' name='textscan.0fyx4i60ummtbt1gslc391146wdz'>
            <connection class='textscan' directory='C:/AIDA/CertProjCovid19/Tableau/Input' filename='country_details.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0fyx4i60ummtbt1gslc391146wdz' name='country_details.csv' table='[country_details#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='string' name='nuts_1' ordinal='2' />
            <column datatype='string' name='nuts_2' ordinal='3' />
            <column datatype='integer' name='Pop Total' ordinal='4' />
            <column datatype='real' name='cases/100k pop.' ordinal='5' />
            <column datatype='real' name='cases' ordinal='6' />
            <column datatype='real' name='deaths' ordinal='7' />
            <column datatype='datetime' name='datetime' ordinal='8' />
            <column datatype='real' name='new_cases' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nuts_1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[nuts_1]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>nuts_1</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nuts_2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[nuts_2]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>nuts_2</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pop Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pop Total]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>Pop Total</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases/100k pop.</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases/100k pop.]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>cases/100k pop.</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>datetime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[datetime]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>datetime</remote-alias>
            <ordinal>8</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='JP-Departements' datatype='string' name='[Calculation_734086793217118210]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='tableau' formula='[nuts_2]' />
      </column>
      <column caption='max_cases_Bundesland' datatype='real' name='[Calculation_734086793298964485]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [nuts_1]: max([cases])}' />
      </column>
      <column caption='pop_Bundesländer' datatype='real' name='[Calculation_734086793304289287]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [nuts_1]: max([Calculation_734086793298964485])/max([cases/100k pop.])/10}' />
      </column>
      <column caption='max_JPN' datatype='real' name='[Calculation_734086793305341960]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Calculation_734086793217118210]: max([new_cases])}' />
      </column>
      <column caption='inc_per_1000_JPN' datatype='real' name='[Calculation_734086793306525705]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Calculation_734086793217118210]: max([Calculation_734086793305341960])/max([Pop Total])/1000}' />
      </column>
      <column caption='inc_per_GER' datatype='real' name='[Calculation_734086793306796042]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [nuts_1]: max([Calculation_734086793298964485])/max([Calculation_734086793304289287])/1000000}' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='datetime' name='[datetime]' role='dimension' type='ordinal' />
      <column datatype='string' name='[nuts_1]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[nuts_2]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal' />
      <column-instance column='[datetime]' derivation='Month' name='[mn:datetime:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_734086793217118210]' derivation='None' name='[none:Calculation_734086793217118210:nk]' pivot='key' type='nominal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[nuts_1]' derivation='None' name='[none:nuts_1:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (country,JP-Departements,MONTH(datetime))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:country:nk]' />
          <groupfilter function='level-members' level='[none:Calculation_734086793217118210:nk]' />
          <groupfilter function='level-members' level='[mn:datetime:ok]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='country, nuts_1'>
          <field>[country]</field>
          <field>[nuts_1]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.323486' measure-ordering='alphabetic' measure-percentage='0.509601' parameter-percentage='0.166913' rowDisplayCount='100000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:nuts_1:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Hamburg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thüringen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Baden-Württem­berg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rhein­land-Pfalz&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brandenburg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sachsen-Anhalt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kinki&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hessen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tohoku&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bremen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Schles­wig-Holstein&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nordrhein-Westfalen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Baden-Württemberg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rheinland-Pfalz&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niedersachsen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chubu&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Schleswig-Holstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kyushu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mecklenburg-Vor­pommern&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nordrhein-West­falen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Okinawa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hokkaido&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chugoku&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shikoku&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bayern&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saarland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mecklenburg-Vorpommern&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kanto&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Berlin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sachsen&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <filter class='categorical' column='[nuts_1]' filter-group='2'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[nuts_1]' />
          <groupfilter function='member' level='[nuts_1]' member='&quot;Repatriierte&quot;' />
        </groupfilter>
      </filter>
    </datasource>
    <datasource caption='[99] - Measures' inline='true' name='federated.1tqx0su0ika3du183um0b12cwg8m' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='measures' name='excel-direct.1ieujvi18vc1d117z40pn0ei6epy'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/AIDA/CertProjCovid19/Tableau/Input/measures.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1ieujvi18vc1d117z40pn0ei6epy' name='Tabelle1' table='[Tabelle1$]' type='table'>
          <columns gridOrigin='A1:C367:no:A1:C367:0' header='yes' outcome='2'>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='measure' ordinal='1' />
            <column datatype='string' name='type' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>measure</remote-name>
            <remote-type>130</remote-type>
            <local-name>[measure]</local-name>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias>measure</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDE_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDE_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C367:no:A1:C367:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Event' datatype='real' datatype-customized='true' name='[Calculation_895371954195169286]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF NOT(ISNULL(MIN([measure])))&#13;&#10;THEN MIN([federated.0bdudug06c89yc164m65t1pbh640].[new_cases])+100&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.355982' measure-ordering='alphabetic' measure-percentage='0.322009' parameter-percentage='0.322009' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='federated.0bdudug06c89yc164m65t1pbh640'>
        <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[type]' filter-group='2'>
        <groupfilter function='member' level='[type]' member='&quot;Germany&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
    </datasource>
    <datasource caption='[01a] - owid-covid-data - original' inline='true' name='federated.0bdudug06c89yc164m65t1pbh640' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='owid-covid-data' name='textscan.07iqnjf0qak6cw10xf4830jedvvo'>
            <connection class='textscan' directory='C:/AIDA/CertProjCovid19/Tableau/Input' filename='owid-covid-data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.07iqnjf0qak6cw10xf4830jedvvo' name='owid-covid-data.csv' table='[owid-covid-data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='real' name='total_deaths' ordinal='7' />
            <column datatype='real' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='integer' name='icu_patients' ordinal='17' />
            <column datatype='real' name='icu_patients_per_million' ordinal='18' />
            <column datatype='integer' name='hosp_patients' ordinal='19' />
            <column datatype='real' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='integer' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='real' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='integer' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='real' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='integer' name='total_tests' ordinal='25' />
            <column datatype='integer' name='new_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='real' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='tests_per_case' ordinal='31' />
            <column datatype='real' name='positive_rate' ordinal='32' />
            <column datatype='integer' name='tests_units' ordinal='33' />
            <column datatype='real' name='stringency_index' ordinal='34' />
            <column datatype='real' name='population' ordinal='35' />
            <column datatype='real' name='population_density' ordinal='36' />
            <column datatype='real' name='median_age' ordinal='37' />
            <column datatype='real' name='aged_65_older' ordinal='38' />
            <column datatype='real' name='aged_70_older' ordinal='39' />
            <column datatype='real' name='gdp_per_capita' ordinal='40' />
            <column datatype='string' name='extreme_poverty' ordinal='41' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='42' />
            <column datatype='real' name='diabetes_prevalence' ordinal='43' />
            <column datatype='string' name='female_smokers' ordinal='44' />
            <column datatype='string' name='male_smokers' ordinal='45' />
            <column datatype='real' name='handwashing_facilities' ordinal='46' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='47' />
            <column datatype='real' name='life_expectancy' ordinal='48' />
            <column datatype='real' name='human_development_index' ordinal='49' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekly_icu_admissions]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_icu_admissions</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_icu_admissions_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_icu_admissions_per_million</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekly_hosp_admissions]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_hosp_admissions_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>129</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='string' name='[iso_code]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='string' name='[location]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.475628' measure-ordering='alphabetic' measure-percentage='0.490399' parameter-percentage='0.0339734' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='[10] - predictions_for_tableau' inline='true' name='federated.0m3vwg5077pvbz1bksxis1j7semv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='predictions_for_tableau' name='textscan.107q0kn047pqls19avodn1io96y1'>
            <connection class='textscan' directory='C:/AIDA/CertProjCovid19/Tableau/Input' filename='predictions_for_tableau.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.107q0kn047pqls19avodn1io96y1' name='predictions_for_tableau.csv' table='[predictions_for_tableau#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='new_cases' ordinal='4' />
            <column datatype='real' name='predicted' ordinal='5' />
            <column datatype='string' name='arima_model' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[predictions_for_tableau.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[predictions_for_tableau.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[predictions_for_tableau.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[predictions_for_tableau.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[predictions_for_tableau.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[predictions_for_tableau.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>predicted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[predicted]</local-name>
            <parent-name>[predictions_for_tableau.csv]</parent-name>
            <remote-alias>predicted</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arima_model</remote-name>
            <remote-type>129</remote-type>
            <local-name>[arima_model]</local-name>
            <parent-name>[predictions_for_tableau.csv]</parent-name>
            <remote-alias>arima_model</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk]&quot;' value='Real Cases (thin)' />
          <alias key='&quot;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:predicted:qk]&quot;' value='Prediction (bold)' />
        </aliases>
      </column>
      <column caption='max_date' datatype='datetime' name='[Calculation_1118581611083980819]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{ FIXED [location]: max(if [new_cases]&gt;0 then DATEADD(&apos;day&apos;, 0, [date]) END)}' />
      </column>
      <column caption='new_cases_cut' datatype='real' name='[Calculation_1118581611088285718]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [date]&lt;= DATEADD(&apos;day&apos;, 6 ,[Parameters].[Parameter 2]) THEN ([new_cases]) END' />
      </column>
      <column caption='last_full_week' datatype='datetime' name='[Calculation_1118581611130515480]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='If DATETRUNC(&apos;week&apos;,[Calculation_1118581611083980819])&lt;&gt; [Calculation_1118581611083980819] &#13;&#10;THEN DATEADD(&apos;day&apos;,-0,DATETRUNC(&apos;week&apos;,[Calculation_1118581611083980819])) &#13;&#10;ELSE [Calculation_1118581611083980819]&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[location]' role='dimension' type='nominal' />
      <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
      <column datatype='real' name='[predicted]' role='measure' type='quantitative' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1118581611088285718]' derivation='Sum' name='[sum:Calculation_1118581611088285718:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[predicted]' derivation='Sum' name='[sum:predicted:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1118581611088285718]' derivation='User' name='[usr:Calculation_1118581611088285718:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.416923' measure-ordering='alphabetic' measure-percentage='0.323077' parameter-percentage='0.26' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:new_cases:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m3vwg5077pvbz1bksxis1j7semv].[usr:Calculation_1118581611088285718:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:predicted:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column alias='predict' caption='Prediction' datatype='date' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='#2020-11-16#'>
          <calculation class='tableau' formula='#2020-11-16#' />
          <aliases>
            <alias key='#2020-11-16#' value='predict' />
          </aliases>
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='[98] - Locations' inline='true' name='federated.1oj1ff50ycwa1h1gzrf681w40tvc' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='locations' name='textscan.0yiu33h1s64y8j1bo9s290botwzc'>
            <connection class='textscan' directory='C:/AIDA/CertProjCovid19/Tableau/Input' filename='locations.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0yiu33h1s64y8j1bo9s290botwzc' name='locations.csv' table='[locations#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='countriesAndTerritories' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='string' name='continent' ordinal='2' />
            <column datatype='date' date-parse-format='yyyy' name='population_year' ordinal='3' />
            <column datatype='integer' name='population' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[locations.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countriesAndTerritories</remote-name>
            <remote-type>129</remote-type>
            <local-name>[countriesAndTerritories]</local-name>
            <parent-name>[locations.csv]</parent-name>
            <remote-alias>countriesAndTerritories</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[locations.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[locations.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[population_year]</local-name>
            <parent-name>[locations.csv]</parent-name>
            <remote-alias>population_year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[locations.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='string' name='[countriesAndTerritories]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.354505' measure-ordering='alphabetic' measure-percentage='0.354505' parameter-percentage='0.29099' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
      <column datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[date]' derivation='Day' name='[dy:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Week' name='[wk:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1tqx0su0ika3du183um0b12cwg8m'>
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[date]' derivation='Day' name='[dy:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Week' name='[wk:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-relationship source='federated.1778kex0kgg0m118q1p271qx5l7r' target='federated.1tqx0su0ika3du183um0b12cwg8m'>
      <column-mapping>
        <map key='[federated.1778kex0kgg0m118q1p271qx5l7r].[dy:date:ok]' value='[federated.1tqx0su0ika3du183um0b12cwg8m].[dy:date:ok]' />
        <map key='[federated.1778kex0kgg0m118q1p271qx5l7r].[mn:date:ok]' value='[federated.1tqx0su0ika3du183um0b12cwg8m].[mn:date:ok]' />
        <map key='[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:date:ok]' value='[federated.1tqx0su0ika3du183um0b12cwg8m].[tdy:date:ok]' />
        <map key='[federated.1778kex0kgg0m118q1p271qx5l7r].[tmn:date:ok]' value='[federated.1tqx0su0ika3du183um0b12cwg8m].[tmn:date:ok]' />
        <map key='[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:ok]' value='[federated.1tqx0su0ika3du183um0b12cwg8m].[twk:date:ok]' />
        <map key='[federated.1778kex0kgg0m118q1p271qx5l7r].[tyr:date:ok]' value='[federated.1tqx0su0ika3du183um0b12cwg8m].[tyr:date:ok]' />
        <map key='[federated.1778kex0kgg0m118q1p271qx5l7r].[wk:date:ok]' value='[federated.1tqx0su0ika3du183um0b12cwg8m].[wk:date:ok]' />
        <map key='[federated.1778kex0kgg0m118q1p271qx5l7r].[yr:date:ok]' value='[federated.1tqx0su0ika3du183um0b12cwg8m].[yr:date:ok]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Country Trend Lines' />
      <command command='tsc:brush'>
        <param name='field-captions' value='location' />
        <param name='target' value='Country Trend Lines' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Entire World' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='location' />
        <param name='target' value='Entire World' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 1' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Measures' />
      <command command='tsc:brush'>
        <param name='field-captions' value='location' />
        <param name='target' value='Measures' />
      </command>
    </action>
    <action caption='Highlight 3 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Further Ideas' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='location' />
        <param name='target' value='Further Ideas' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
          </datasources>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Global Cases' datatype='real' name='[Calculation_1118581611054268434]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([new_cases])' />
            </column>
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581611054268434]' derivation='User' name='[usr:Calculation_1118581611054268434:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='font-size' value='18' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' scope='rows' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581611054268434:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3E2D8D12-0512-4811-9C4A-CD5439AD48D0}' />
    </worksheet>
    <worksheet name='Contamination'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>Contamination (p.M.)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
          </datasources>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Country' datatype='string' name='[Calculation_1118581610973171713]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[location]' />
            </column>
            <column caption='Global Contamination [p.M.]' datatype='real' name='[Calculation_1118581611050946576]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([new_cases])/SUM([Calculation_1118581611051085841])*1000000' />
            </column>
            <column caption='c_pop' datatype='real' name='[Calculation_1118581611051085841]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1118581610973171713]: AVG([population])}' />
            </column>
            <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581611050946576]' derivation='User' name='[usr:Calculation_1118581611050946576:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581611050946576:qk]' value='' />
            <format attr='text-align' value='center' />
            <format attr='font-size' value='18' />
            <format attr='text-align' data-class='total' scope='cols' value='right' />
            <format attr='text-align' data-class='subtotal' scope='cols' value='right' />
            <format attr='text-align' data-class='subtotal' scope='rows' value='right' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-align' data-class='total' scope='cols' value='right' />
            <format attr='text-align' data-class='subtotal' scope='cols' value='right' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' scope='cols' value='right' />
            <format attr='text-align' scope='rows' value='right' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581611050946576:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C4B2F49C-4CF9-4A34-9D4E-D2F6CA68DBCD}' />
    </worksheet>
    <worksheet name='Contamination Germany'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>&lt;Sheet Name&gt;</run>
            <run bold='true' fontalignment='1'>Æ </run>
            <run bold='true' fontalignment='1' fontsize='10'>(normalized)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[02] - Country Details' name='federated.05u4i471ywr5a811qiskp1vheq6p' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.05u4i471ywr5a811qiskp1vheq6p'>
            <column caption='max_cases_Bundesland' datatype='real' name='[Calculation_734086793298964485]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [nuts_1]: max([cases])}' />
            </column>
            <column caption='pop_Bundesländer' datatype='real' name='[Calculation_734086793304289287]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [nuts_1]: max([Calculation_734086793298964485])/max([cases/100k pop.])/10}' />
            </column>
            <column caption='inc_per_GER' datatype='real' name='[Calculation_734086793306796042]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [nuts_1]: max([Calculation_734086793298964485])/max([Calculation_734086793304289287])/1000000}' />
            </column>
            <column-instance column='[Calculation_734086793298964485]' derivation='Attribute' name='[attr:Calculation_734086793298964485:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[cases/100k pop.]' role='measure' type='quantitative' />
            <column datatype='real' name='[cases]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[nuts_1]' derivation='None' name='[none:nuts_1:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[nuts_1]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_734086793306796042]' derivation='Sum' name='[sum:Calculation_734086793306796042:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;DE&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='text-format' field='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306796042:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306796042:qk]' max='0.017501064861584301' min='0.0' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306796042:qk]' value='Contamination [%]'>
              <formatted-text>
                <run bold='true' fontalignment='1' underline='true'>Contamination [%]</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306796042:qk]' />
              <text column='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306796042:qk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[none:nuts_1:nk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[attr:Calculation_734086793298964485:qk]' />
              <geometry column='[federated.05u4i471ywr5a811qiskp1vheq6p].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05u4i471ywr5a811qiskp1vheq6p].[Latitude (generated)]</rows>
        <cols>[federated.05u4i471ywr5a811qiskp1vheq6p].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DDE45985-81FA-4913-B132-3FE7C74168B1}' />
    </worksheet>
    <worksheet name='Contamination Japan'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>&lt;Sheet Name&gt;</run>
            <run bold='true' fontalignment='1'>Æ </run>
            <run bold='true' fontalignment='1' fontsize='10'>(normalized)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[02] - Country Details' name='federated.05u4i471ywr5a811qiskp1vheq6p' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.05u4i471ywr5a811qiskp1vheq6p'>
            <column caption='JP-Departements' datatype='string' name='[Calculation_734086793217118210]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='[nuts_2]' />
            </column>
            <column caption='max_JPN' datatype='real' name='[Calculation_734086793305341960]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_734086793217118210]: max([new_cases])}' />
            </column>
            <column caption='inc_per_1000_JPN' datatype='real' name='[Calculation_734086793306525705]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_734086793217118210]: max([Calculation_734086793305341960])/max([Pop Total])/1000}' />
            </column>
            <column datatype='integer' name='[Pop Total]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_734086793305341960]' derivation='Attribute' name='[attr:Calculation_734086793305341960:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pop Total]' derivation='Attribute' name='[attr:Pop Total:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='datetime' name='[datetime]' role='dimension' type='ordinal' />
            <column-instance column='[datetime]' derivation='Month' name='[mn:datetime:ok]' pivot='key' type='ordinal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_734086793217118210]' derivation='None' name='[none:Calculation_734086793217118210:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[nuts_2]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal' />
            <column-instance column='[Calculation_734086793306525705]' derivation='Sum' name='[sum:Calculation_734086793306525705:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;JPN&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.05u4i471ywr5a811qiskp1vheq6p].[Longitude (generated)]' field-type='quantitative' max='16028687.421921618' min='13668122.533477323' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.05u4i471ywr5a811qiskp1vheq6p].[Latitude (generated)]' field-type='quantitative' max='5988748.8580266945' min='2396371.607427855' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='text-format' field='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]' max='0.017501065' min='0.0' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]' />
              <text column='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[none:Calculation_734086793217118210:nk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[attr:Pop Total:qk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[attr:Calculation_734086793305341960:qk]' />
              <geometry column='[federated.05u4i471ywr5a811qiskp1vheq6p].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05u4i471ywr5a811qiskp1vheq6p].[Latitude (generated)]</rows>
        <cols>[federated.05u4i471ywr5a811qiskp1vheq6p].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.05u4i471ywr5a811qiskp1vheq6p].[mn:datetime:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{40D81D85-AC5E-4766-81C0-964C6E668E17}' />
    </worksheet>
    <worksheet name='Country Trend Lines'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;  -  </run>
            <run bold='true' fontcolor='#4e79a7'>&lt;[Parameters].[Parameter 1]&gt;</run>
            <run bold='true'>  for  </run>
            <run bold='true' fontcolor='#4e79a7'>&lt;[Parameters].[Measure to Show (copy)]&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Top10 Europe' caption='Country Selection' datatype='string' name='[Measure to Show (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Top10_Europe_total&quot;'>
              <calculation class='tableau' formula='&quot;Top10_Europe_total&quot;' />
              <aliases>
                <alias key='&quot;Bottom10_Europe&quot;' value='Bottom 10 Europe' />
                <alias key='&quot;Bottom10_Europe_Germany&quot;' value='Bottom 10 Europe + Germany' />
                <alias key='&quot;specific&quot;' value='GER + USA + SWE + JPN' />
                <alias key='&quot;Top10_Europe_Germany&quot;' value='Top 10 Europe + Germany' />
                <alias key='&quot;Top10_Europe_total&quot;' value='Top10 Europe' />
                <alias key='&quot;Top10_total&quot;' value='Top 10 World' />
                <alias key='&quot;Top10_total_Germany&quot;' value='Top 10 World + Germany' />
              </aliases>
            </column>
            <column alias='New Deaths' caption='Measure' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;new_deaths&quot;'>
              <calculation class='tableau' formula='&quot;new_deaths&quot;' />
              <aliases>
                <alias key='&quot;new_cases&quot;' value='New Cases' />
                <alias key='&quot;new_cases_per_million&quot;' value='New Cases (p.M)' />
                <alias key='&quot;new_deaths&quot;' value='New Deaths' />
                <alias key='&quot;new_deaths_per_million&quot;' value='New Deaths (p.M)' />
                <alias key='&quot;total_cases&quot;' value='Total Cases' />
                <alias key='&quot;total_cases_per_million&quot;' value='Total Cases (p.M)' />
                <alias key='&quot;total_deaths&quot;' value='Total Deaths' />
                <alias key='&quot;total_deaths_per_million&quot;' value='Totals Deaths (p.M)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Filter_by_Paramter' datatype='boolean' name='[Calculation_1118581610995380228]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Measure to Show (copy)] = &quot;Germany&quot; THEN [Top Countries Total Cases (copy)]&#13;&#10;ELSEIF [Parameters].[Measure to Show (copy)] = &quot;Top10_Europe_total&quot; THEN [Top Countries by New Cases (copy 2)]&#13;&#10;ELSEIF [Parameters].[Measure to Show (copy)] = &quot;Top10_Europe_Germany&quot; THEN [Set 3]&#13;&#10;ELSEIF [Parameters].[Measure to Show (copy)] = &quot;Bottom10_Europe&quot; THEN [Top Countries by New Cases (copy)]&#13;&#10;ELSEIF [Parameters].[Measure to Show (copy)] = &quot;Bottom10_Europe_Germany&quot; THEN [Set 2]&#13;&#10;ELSEIF [Parameters].[Measure to Show (copy)] = &quot;Top10_total&quot; THEN [Set 1]&#13;&#10;ELSEIF [Parameters].[Measure to Show (copy)] = &quot;Top10_total_Germany&quot; THEN [Set 4]&#13;&#10;ELSEIF [Parameters].[Measure to Show (copy)] = &quot;specific&quot; THEN [Germany (copy)]&#13;&#10;END' />
            </column>
            <column caption='Measure_by_Selction' datatype='real' name='[Calculation_895371954178236418]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == &apos;new_cases&apos; THEN [new_cases]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_cases&apos; THEN [total_cases]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_deaths&apos; THEN [total_deaths]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;new_deaths&apos; THEN [new_deaths]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;new_cases_per_million&apos; THEN [new_cases_per_million]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_cases_per_million&apos; THEN [total_cases_per_million]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_deaths_per_million&apos; THEN [total_deaths_per_million]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;new_deaths_per_million&apos; THEN [new_deaths_per_million]&#13;&#10;ELSE Null&#13;&#10;END' />
            </column>
            <column datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
            <column datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
            <column datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581610995380228]' derivation='None' name='[none:Calculation_1118581610995380228:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_895371954178236418]' derivation='Sum' name='[sum:Calculation_895371954178236418:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610995380228:nk]'>
            <groupfilter function='member' level='[none:Calculation_1118581610995380228:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]'>
            <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]' direction='DESC' using='[federated.1778kex0kgg0m118q1p271qx5l7r].[sum:new_cases:qk]' />
          <filter class='quantitative' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:date:qk]' included-values='in-range'>
            <min>#2020-01-25 00:00:00#</min>
            <max>#2020-11-29 00:00:00#</max>
          </filter>
          <filter class='quantitative' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:qk]' included-values='in-range'>
            <max>#2020-11-22 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]</column>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]</column>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:qk]</column>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610995380228:nk]</column>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[sum:Calculation_895371954178236418:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='band-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='background-color' value='#c0c0c0' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='8' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]' value='Country' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:date:qk]' value='Day of date' />
          </style-rule>
        </style>
        <panes>
          <pane id='53' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.33983424305915833' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1778kex0kgg0m118q1p271qx5l7r].[sum:Calculation_895371954178236418:qk]</rows>
        <cols>[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:qk]</cols>
        <table-calculations>
          <partitionable-measures>
            <column>[federated.1tqx0su0ika3du183um0b12cwg8m].[max:measure:nk]</column>
          </partitionable-measures>
        </table-calculations>
      </table>
      <simple-id uuid='{14C8554F-5725-4836-B01D-C60AE6E84B0A}' />
    </worksheet>
    <worksheet name='Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
          </datasources>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Global Deaths' datatype='real' name='[Global Cases (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([new_deaths])' />
            </column>
            <column datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Global Cases (copy)]' derivation='User' name='[usr:Global Cases (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='font-size' value='18' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Global Cases (copy):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{71DA9CCE-0D82-4787-95B0-854142610CE6}' />
    </worksheet>
    <worksheet name='FirstCase Days'>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
          </datasources>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Country' datatype='string' name='[Calculation_1118581610973171713]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[location]' />
            </column>
            <column caption='first case' datatype='date' name='[Calculation_734086793138049024]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ FIXED [location]: min(if ([new_cases])&gt;0 THEN ([date]) END)}' />
            </column>
            <column datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Calculation_1118581610973171713]' derivation='CountD' name='[ctd:Calculation_1118581610973171713:qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581610973171713]' derivation='None' name='[none:Calculation_1118581610973171713:nk]' pivot='key' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_734086793138049024]' derivation='Day-Trunc' name='[tdy:Calculation_734086793138049024:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:Calculation_734086793138049024:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tdy:Calculation_734086793138049024:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='%null%' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2019-12-31 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-01 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-02 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-03 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-04 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-05 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-06 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-07 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-08 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-09 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-10 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-11 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-12 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-13 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-14 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-15 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-16 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-17 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-18 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-03-29 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-03-30 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-03-31 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-01 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-02 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-03 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-04 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-05 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-06 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-07 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-08 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-09 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-10 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-11 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-12 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-13 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-14 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-15 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-16 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-17 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-18 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-19 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-20 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-21 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-22 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-23 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-24 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-25 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-26 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-27 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-28 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-29 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-30 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-01 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-02 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-03 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-04 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-05 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-06 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-07 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-08 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-09 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-10 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-11 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-12 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-13 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-14 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-15 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-16 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-17 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-18 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-19 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-20 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-21 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-22 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-23 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-24 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-25 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-26 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-27 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-28 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-29 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-30 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-31 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-01 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-02 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-03 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-04 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-05 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-06 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-07 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-08 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-09 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-10 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-11 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-12 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-13 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-14 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-15 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-16 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-17 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-18 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-19 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-20 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-21 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-22 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-23 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-24 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-25 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-26 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-27 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-28 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-29 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-30 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-01 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-02 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-03 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-04 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-05 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-06 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-07 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-08 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-09 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-10 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-11 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-12 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-13 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-14 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-15 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-16 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-17 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-18 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-19 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-20 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-21 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-22 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-23 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-24 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-25 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-26 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-27 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-28 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-29 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-30 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-31 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-01 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-02 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-03 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-04 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-05 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-06 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-07 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-08 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-09 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-10 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-11 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-12 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-13 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-14 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-15 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-16 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-17 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-18 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-19 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-20 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-21 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-22 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-23 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-24 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-25 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-26 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-27 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-28 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-29 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-30 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-31 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-01 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-02 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-03 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-04 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-05 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-06 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-07 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-08 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-09 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-10 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-11 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-12 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-13 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-14 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-15 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-16 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-17 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-18 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-19 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-20 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-21 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-22 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-23 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-24 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-25 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-26 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-27 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-28 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-29 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-30 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-01 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-02 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-03 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-04 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-05 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-06 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-07 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-08 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-09 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-10 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-11 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-12 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-13 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-14 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-15 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-16 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-17 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-18 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-19 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-20 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-21 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-22 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-23 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-24 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-25 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-26 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-27 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-28 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-29 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-30 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-31 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-11-01 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-11-02 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-11-03 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-11-04 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-11-05 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-11-06 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-11-07 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-11-08 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-11-09 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-11-10 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-11-11 00:00:00#' />
              </groupfilter>
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[ctd:Calculation_1118581610973171713:qk]' field-type='quantitative' max='14' min='0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1778kex0kgg0m118q1p271qx5l7r].[ctd:Calculation_1118581610973171713:qk]</rows>
        <cols include-empty='true'>[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:Calculation_734086793138049024:ok]</cols>
      </table>
      <simple-id uuid='{8D420EB7-487F-4B24-BC93-DBAA0D2CE986}' />
    </worksheet>
    <worksheet name='FirstCase List'>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
          </datasources>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Country' datatype='string' name='[Calculation_1118581610973171713]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[location]' />
            </column>
            <column caption='first case' datatype='date' name='[Calculation_734086793138049024]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ FIXED [location]: min(if ([new_cases])&gt;0 THEN ([date]) END)}' />
            </column>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581610973171713]' derivation='None' name='[none:Calculation_1118581610973171713:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_734086793138049024]' derivation='Day-Trunc' name='[tdy:Calculation_734086793138049024:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:Calculation_734086793138049024:ok] / [federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{84D17366-7932-432A-9CC7-C96DE638CCCC}' />
    </worksheet>
    <worksheet name='FirstCase Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>First Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Country' datatype='string' name='[Calculation_1118581610973171713]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[location]' />
            </column>
            <column caption='Period' datatype='string' name='[Calculation_1118581610988412931]' role='measure' type='nominal'>
              <calculation class='tableau' formula='str(DATEPART(&apos;day&apos;,min([date]))) + &apos;.&apos; +&#13;&#10;str(DATEPART(&apos;month&apos;,min([date]))) + &apos;.-&apos; +&#13;&#10;str(DATEPART(&apos;day&apos;,max([date]))) + &apos;.&apos; +&#13;&#10;str(DATEPART(&apos;month&apos;,max([date])))+ &apos;.&apos; +&#13;&#10;str(DATEPART(&apos;year&apos;,max([date]))) + &apos; (CW &apos; +&#13;&#10;str(DATEPART(&apos;week&apos;,max([date]))) + &apos;)&apos;' />
            </column>
            <column caption='has first case' datatype='boolean' name='[Calculation_734086793146056705]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[total_cases]&gt;0' />
            </column>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[iso_code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;OWID_KOS&quot;' value='&quot;Kosovo&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Calculation_1118581610973171713]' derivation='None' name='[none:Calculation_1118581610973171713:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_734086793146056705]' derivation='None' name='[none:Calculation_734086793146056705:nk]' pivot='key' type='nominal' />
            <column-instance column='[iso_code]' derivation='None' name='[none:iso_code:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
            <column datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581610988412931]' derivation='User' name='[usr:Calculation_1118581610988412931:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[Longitude (generated)]' field-type='quantitative' max='27168824.166140702' min='-12906192.51943779' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[Latitude (generated)]' field-type='quantitative' max='14080365.783279724' min='-9882014.3672968186' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#faf4e7' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:iso_code:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='Date'>
              <formatted-text>
                <run bold='true' underline='true'>Date</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_734086793146056705:nk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:iso_code:nk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581610988412931:nk]' />
              <geometry column='[federated.1778kex0kgg0m118q1p271qx5l7r].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run>&lt;[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>New Cases:&#9;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Cases:&#9;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Period:&#9;</run>
                <run>&lt;[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581610988412931:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1778kex0kgg0m118q1p271qx5l7r].[Latitude (generated)]</rows>
        <cols>[federated.1778kex0kgg0m118q1p271qx5l7r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:date:ok]</column>
        </pages>
        <page-trail-options size='5' />
      </table>
      <simple-id uuid='{10F84087-277F-422D-9731-2B75A622EBAE}' />
    </worksheet>
    <worksheet name='FirstCase Weeks'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
          </datasources>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Country' datatype='string' name='[Calculation_1118581610973171713]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[location]' />
            </column>
            <column caption='first case' datatype='date' name='[Calculation_734086793138049024]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ FIXED [location]: min(if ([new_cases])&gt;0 THEN ([date]) END)}' />
            </column>
            <column datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Calculation_1118581610973171713]' derivation='CountD' name='[ctd:Calculation_1118581610973171713:qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581610973171713]' derivation='None' name='[none:Calculation_1118581610973171713:nk]' pivot='key' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_734086793138049024]' derivation='Week-Trunc' name='[twk:Calculation_734086793138049024:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]' value='Continent'>
              <formatted-text>
                <run bold='true' underline='true'>Continent</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1778kex0kgg0m118q1p271qx5l7r].[ctd:Calculation_1118581610973171713:qk]</rows>
        <cols include-empty='true'>[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:Calculation_734086793138049024:ok]</cols>
      </table>
      <simple-id uuid='{EE8553B7-E5CF-4D3F-9A2E-18069B50E98F}' />
    </worksheet>
    <worksheet name='Germany'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[10] - predictions_for_tableau' name='federated.0m3vwg5077pvbz1bksxis1j7semv' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='predict' caption='Prediction' datatype='date' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='#2020-11-16#'>
              <calculation class='tableau' formula='#2020-11-16#' />
              <aliases>
                <alias key='#2020-11-16#' value='predict' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0m3vwg5077pvbz1bksxis1j7semv'>
            <column caption='new_cases_cut' datatype='real' name='[Calculation_1118581611088285718]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [date]&lt;= DATEADD(&apos;day&apos;, 6 ,[Parameters].[Parameter 2]) THEN ([new_cases]) END' />
            </column>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' type='nominal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[predicted]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581611088285718]' derivation='Sum' name='[sum:Calculation_1118581611088285718:qk]' pivot='key' type='quantitative' />
            <column-instance column='[predicted]' derivation='Sum' name='[sum:predicted:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:date:qk]' filter-group='3' included-values='in-range'>
            <min>#2020-01-28#</min>
            <max>#2020-12-13#</max>
          </filter>
          <filter class='categorical' column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;Germany&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]' filter-group='4' included-values='in-range'>
            <min>#2020-01-30 00:00:00#</min>
            <max>#2020-12-04 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]</column>
            <column>[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:date:qk]</column>
            <column>[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]' scope='cols' value='' />
            <format attr='display' class='0' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:predicted:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
            <format attr='background-color' value='#c0c0c0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#ffaaff' />
            <format attr='fill-below' id='refline0' value='#f5f5f5' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[:Measure Names]' value='Data Type' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]' value='Date' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]' enable-instant-analytics='true' formula='max' id='refline0' label-type='automatic' scope='per-table' value-column='[Parameters].[Parameter 2]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.25187844038009644' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:predicted:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2.7292816638946533' />
                <format attr='mark-transparency' value='111' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.49375692009925842' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:predicted:qk] + [federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk])</rows>
        <cols>([federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk] * [federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk])</cols>
      </table>
      <simple-id uuid='{176BD3CC-3B83-4194-ABBD-6CBF19E2AE99}' />
    </worksheet>
    <worksheet name='Incidence Japan (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>Contamination Japan</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[02] - Country Details' name='federated.05u4i471ywr5a811qiskp1vheq6p' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.05u4i471ywr5a811qiskp1vheq6p'>
            <column caption='JP-Departements' datatype='string' name='[Calculation_734086793217118210]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='[nuts_2]' />
            </column>
            <column caption='max_JPN' datatype='real' name='[Calculation_734086793305341960]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_734086793217118210]: max([new_cases])}' />
            </column>
            <column caption='inc_per_1000_JPN' datatype='real' name='[Calculation_734086793306525705]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_734086793217118210]: max([Calculation_734086793305341960])/max([Pop Total])/1000}' />
            </column>
            <column datatype='integer' name='[Pop Total]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_734086793305341960]' derivation='Attribute' name='[attr:Calculation_734086793305341960:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pop Total]' derivation='Attribute' name='[attr:Pop Total:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='datetime' name='[datetime]' role='dimension' type='ordinal' />
            <column-instance column='[datetime]' derivation='Month' name='[mn:datetime:ok]' pivot='key' type='ordinal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_734086793217118210]' derivation='None' name='[none:Calculation_734086793217118210:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[nuts_2]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal' />
            <column-instance column='[Calculation_734086793306525705]' derivation='Sum' name='[sum:Calculation_734086793306525705:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;JPN&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.05u4i471ywr5a811qiskp1vheq6p].[Longitude (generated)]' field-type='quantitative' max='16028687.421921618' min='13668122.533477323' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.05u4i471ywr5a811qiskp1vheq6p].[Latitude (generated)]' field-type='quantitative' max='5988748.8580266945' min='2396371.607427855' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='text-format' field='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]' value='Contamination [%]'>
              <formatted-text>
                <run bold='true' fontalignment='1' underline='true'>Contamination [%]</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[none:Calculation_734086793217118210:nk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[attr:Pop Total:qk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[attr:Calculation_734086793305341960:qk]' />
              <geometry column='[federated.05u4i471ywr5a811qiskp1vheq6p].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05u4i471ywr5a811qiskp1vheq6p].[Latitude (generated)]</rows>
        <cols>[federated.05u4i471ywr5a811qiskp1vheq6p].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.05u4i471ywr5a811qiskp1vheq6p].[mn:datetime:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{DA90F943-8E45-4492-9CBF-ACA179D28AE8}' />
    </worksheet>
    <worksheet name='Measures'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
            <datasource name='Parameters' />
            <datasource caption='[99] - Measures' name='federated.1tqx0su0ika3du183um0b12cwg8m' />
            <datasource caption='[01a] - owid-covid-data - original' name='federated.0bdudug06c89yc164m65t1pbh640' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='New Deaths' caption='Measure' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;new_deaths&quot;'>
              <calculation class='tableau' formula='&quot;new_deaths&quot;' />
              <aliases>
                <alias key='&quot;new_cases&quot;' value='New Cases' />
                <alias key='&quot;new_cases_per_million&quot;' value='New Cases (p.M)' />
                <alias key='&quot;new_deaths&quot;' value='New Deaths' />
                <alias key='&quot;new_deaths_per_million&quot;' value='New Deaths (p.M)' />
                <alias key='&quot;total_cases&quot;' value='Total Cases' />
                <alias key='&quot;total_cases_per_million&quot;' value='Total Cases (p.M)' />
                <alias key='&quot;total_deaths&quot;' value='Total Deaths' />
                <alias key='&quot;total_deaths_per_million&quot;' value='Totals Deaths (p.M)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0bdudug06c89yc164m65t1pbh640'>
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Measure_by_Selction' datatype='real' name='[Calculation_895371954178236418]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == &apos;new_cases&apos; THEN [new_cases]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_cases&apos; THEN [total_cases]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_deaths&apos; THEN [total_deaths]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;new_deaths&apos; THEN [new_deaths]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;new_cases_per_million&apos; THEN [new_cases_per_million]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_cases_per_million&apos; THEN [total_cases_per_million]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_deaths_per_million&apos; THEN [total_deaths_per_million]&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;new_deaths_per_million&apos; THEN [new_deaths_per_million]&#13;&#10;ELSE Null&#13;&#10;END' />
            </column>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
            <column datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
            <column datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_895371954178236418]' derivation='Sum' name='[sum:Calculation_895371954178236418:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1tqx0su0ika3du183um0b12cwg8m'>
            <column caption='Event' datatype='real' datatype-customized='true' name='[Calculation_895371954195169286]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF NOT(ISNULL(MIN([measure])))&#13;&#10;THEN MIN([federated.0bdudug06c89yc164m65t1pbh640].[new_cases])+100&#13;&#10;END' />
            </column>
            <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal' />
            <column-instance column='[measure]' derivation='Min' name='[min:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_895371954195169286]' derivation='User' name='[usr:Calculation_895371954195169286:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;Germany&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:qk]' included-values='in-range'>
            <max>#2020-11-22 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]</column>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]</column>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[sum:Calculation_895371954178236418:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.1tqx0su0ika3du183um0b12cwg8m].[usr:Calculation_895371954195169286:qk]' field-type='quantitative' fold='true' max='300.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1tqx0su0ika3du183um0b12cwg8m].[usr:Calculation_895371954195169286:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1tqx0su0ika3du183um0b12cwg8m].[usr:Calculation_895371954195169286:qk]' value='#c0c0c0' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#d4d4d4' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
            <format attr='background-color' value='#c0c0c0' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='8' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-weight' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane id='53' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.33983424305915833' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='54' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1778kex0kgg0m118q1p271qx5l7r].[sum:Calculation_895371954178236418:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.2853591442108154' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='55' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1tqx0su0ika3du183um0b12cwg8m].[usr:Calculation_895371954195169286:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1tqx0su0ika3du183um0b12cwg8m].[min:measure:nk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-labels-show' value='true' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-color' value='#ff0000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1778kex0kgg0m118q1p271qx5l7r].[sum:Calculation_895371954178236418:qk] + [federated.1tqx0su0ika3du183um0b12cwg8m].[usr:Calculation_895371954195169286:qk])</rows>
        <cols>[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:qk]</cols>
        <table-calculations>
          <partitionable-measures>
            <column>[federated.1tqx0su0ika3du183um0b12cwg8m].[max:measure:nk]</column>
          </partitionable-measures>
        </table-calculations>
      </table>
      <simple-id uuid='{2C53DE37-A85A-4B87-B8E8-FD64D017589A}' />
    </worksheet>
    <worksheet name='Others'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[10] - predictions_for_tableau' name='federated.0m3vwg5077pvbz1bksxis1j7semv' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='predict' caption='Prediction' datatype='date' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='#2020-11-16#'>
              <calculation class='tableau' formula='#2020-11-16#' />
              <aliases>
                <alias key='#2020-11-16#' value='predict' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0m3vwg5077pvbz1bksxis1j7semv'>
            <column caption='new_cases_cut' datatype='real' name='[Calculation_1118581611088285718]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [date]&lt;= DATEADD(&apos;day&apos;, 6 ,[Parameters].[Parameter 2]) THEN ([new_cases]) END' />
            </column>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' type='nominal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[predicted]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581611088285718]' derivation='Sum' name='[sum:Calculation_1118581611088285718:qk]' pivot='key' type='quantitative' />
            <column-instance column='[predicted]' derivation='Sum' name='[sum:predicted:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:date:qk]' filter-group='3' included-values='in-range'>
            <min>#2020-01-28#</min>
            <max>#2020-12-13#</max>
          </filter>
          <filter class='categorical' column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]'>
            <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]' filter-group='4' included-values='in-range'>
            <min>#2020-01-30 00:00:00#</min>
            <max>#2020-12-04 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]</column>
            <column>[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:date:qk]</column>
            <column>[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]' scope='cols' value='' />
            <format attr='display' class='0' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:predicted:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#d4d4d4' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
            <format attr='background-color' value='#c0c0c0' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#ffaaff' />
            <format attr='fill-below' id='refline0' value='#f5f5f5' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' value='Countries' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' value='Available Countries' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]' enable-instant-analytics='true' formula='max' id='refline0' label-type='automatic' scope='per-table' value-column='[Parameters].[Parameter 2]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.25187844038009644' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:predicted:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2.5966851711273193' />
                <format attr='mark-transparency' value='103' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.25187844038009644' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:predicted:qk] + [federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk])</rows>
        <cols>[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]</cols>
      </table>
      <simple-id uuid='{843320CD-36A1-40D6-9B76-15B60098C0B1}' />
    </worksheet>
    <worksheet name='World Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Incidence per Million </run>
            <run bold='true' fontsize='12'>(Logarithmic Cew Cases per Week)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Country' datatype='string' name='[Calculation_1118581610973171713]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[location]' />
            </column>
            <column caption='Period' datatype='string' name='[Calculation_1118581610988412931]' role='measure' type='nominal'>
              <calculation class='tableau' formula='str(DATEPART(&apos;day&apos;,min([date]))) + &apos;.&apos; +&#13;&#10;str(DATEPART(&apos;month&apos;,min([date]))) + &apos;.-&apos; +&#13;&#10;str(DATEPART(&apos;day&apos;,max([date]))) + &apos;.&apos; +&#13;&#10;str(DATEPART(&apos;month&apos;,max([date])))+ &apos;.&apos; +&#13;&#10;str(DATEPART(&apos;year&apos;,max([date]))) + &apos; (CW &apos; +&#13;&#10;str(DATEPART(&apos;week&apos;,max([date]))) + &apos;)&apos;' />
            </column>
            <column caption='Top 10 Countries' datatype='real' name='[Calculation_1118581611048226829]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF RANK(SUM([new_cases]))&lt;=10 &#13;&#10;THEN SUM([new_cases])&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Log_per_M' datatype='real' name='[Calculation_895371954159882240]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ISNULL(SUM([new_cases_per_million])) THEN 0&#13;&#10;ELSE LOG(SUM([new_cases_per_million]))&#13;&#10;END' />
            </column>
            <column datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[iso_code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;OWID_KOS&quot;' value='&quot;Kosovo&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581610973171713]' derivation='None' name='[none:Calculation_1118581610973171713:nk]' pivot='key' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[iso_code]' derivation='None' name='[none:iso_code:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1118581610988412931]' derivation='User' name='[usr:Calculation_1118581610988412931:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1118581611048226829]' derivation='User' name='[usr:Calculation_1118581611048226829:qk:7]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[federated.1778kex0kgg0m118q1p271qx5l7r].[Calculation_1118581610973171713]' />
                <order field='[federated.1778kex0kgg0m118q1p271qx5l7r].[iso_code]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_895371954159882240]' derivation='User' name='[usr:Calculation_895371954159882240:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]'>
            <groupfilter function='level-members' level='[none:continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:ok]'>
            <groupfilter function='level-members' level='[twk:date:ok]' />
          </filter>
          <slices>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]</column>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[Longitude (generated)]' field-type='quantitative' max='20365616.587164693' min='-19950312.117781304' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[Latitude (generated)]' field-type='quantitative' max='13313056.283573911' min='-7925763.3125894889' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:ok]' value='*yyyy\ \Www' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_895371954159882240:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#c0c0c0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_895371954159882240:qk]' value='false' />
            <format attr='in-tooltip' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:ok]' value='false' />
            <format attr='in-tooltip' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:iso_code:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]' value='Focus' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='Calender Week' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_895371954159882240:qk]' />
              <text column='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581611048226829:qk:7]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:iso_code:nk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[sum:new_cases:qk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[max:total_cases:qk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581610988412931:nk]' />
              <geometry column='[federated.1778kex0kgg0m118q1p271qx5l7r].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run>&lt;[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>New Cases:&#9;</run>
                <run>&lt;[federated.1778kex0kgg0m118q1p271qx5l7r].[sum:new_cases:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Total Cases:&#9;</run>
                <run>&lt;[federated.1778kex0kgg0m118q1p271qx5l7r].[max:total_cases:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Period:&#9;</run>
                <run>&lt;[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581610988412931:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1778kex0kgg0m118q1p271qx5l7r].[Latitude (generated)]</rows>
        <cols>[federated.1778kex0kgg0m118q1p271qx5l7r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:ok]</column>
        </pages>
        <page-trail-options size='5' />
      </table>
      <simple-id uuid='{293BE3CA-DC7F-4449-B709-AA166CA4AB7A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Entire World'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#e6e6e6' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Top10 Europe' caption='Country Selection' datatype='string' name='[Measure to Show (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Top10_Europe_total&quot;'>
          <calculation class='tableau' formula='&quot;Top10_Europe_total&quot;' />
          <aliases>
            <alias key='&quot;Bottom10_Europe&quot;' value='Bottom 10 Europe' />
            <alias key='&quot;Bottom10_Europe_Germany&quot;' value='Bottom 10 Europe + Germany' />
            <alias key='&quot;specific&quot;' value='GER + USA + SWE + JPN' />
            <alias key='&quot;Top10_Europe_Germany&quot;' value='Top 10 Europe + Germany' />
            <alias key='&quot;Top10_Europe_total&quot;' value='Top10 Europe' />
            <alias key='&quot;Top10_total&quot;' value='Top 10 World' />
            <alias key='&quot;Top10_total_Germany&quot;' value='Top 10 World + Germany' />
          </aliases>
          <members>
            <member value='&quot;Germany&quot;' />
            <member alias='Top10 Europe' value='&quot;Top10_Europe_total&quot;' />
            <member alias='Top 10 Europe + Germany' value='&quot;Top10_Europe_Germany&quot;' />
            <member alias='Bottom 10 Europe' value='&quot;Bottom10_Europe&quot;' />
            <member alias='Bottom 10 Europe + Germany' value='&quot;Bottom10_Europe_Germany&quot;' />
            <member alias='Top 10 World' value='&quot;Top10_total&quot;' />
            <member alias='Top 10 World + Germany' value='&quot;Top10_total_Germany&quot;' />
            <member alias='GER + USA + SWE + JPN' value='&quot;specific&quot;' />
          </members>
        </column>
        <column alias='New Deaths' caption='Measure' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;new_deaths&quot;'>
          <calculation class='tableau' formula='&quot;new_deaths&quot;' />
          <aliases>
            <alias key='&quot;new_cases&quot;' value='New Cases' />
            <alias key='&quot;new_cases_per_million&quot;' value='New Cases (p.M)' />
            <alias key='&quot;new_deaths&quot;' value='New Deaths' />
            <alias key='&quot;new_deaths_per_million&quot;' value='New Deaths (p.M)' />
            <alias key='&quot;total_cases&quot;' value='Total Cases' />
            <alias key='&quot;total_cases_per_million&quot;' value='Total Cases (p.M)' />
            <alias key='&quot;total_deaths&quot;' value='Total Deaths' />
            <alias key='&quot;total_deaths_per_million&quot;' value='Totals Deaths (p.M)' />
          </aliases>
          <members>
            <member alias='New Cases' value='&quot;new_cases&quot;' />
            <member alias='Total Cases' value='&quot;total_cases&quot;' />
            <member alias='New Deaths' value='&quot;new_deaths&quot;' />
            <member alias='Total Deaths' value='&quot;total_deaths&quot;' />
            <member alias='New Cases (p.M)' value='&quot;new_cases_per_million&quot;' />
            <member alias='Total Cases (p.M)' value='&quot;total_cases_per_million&quot;' />
            <member alias='New Deaths (p.M)' value='&quot;new_deaths_per_million&quot;' />
            <member alias='Totals Deaths (p.M)' value='&quot;total_deaths_per_million&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
        <column datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='99250' id='18' param='horz' type='layout-flow' w='99400' x='300' y='375'>
            <zone h='99250' id='16' type='layout-basic' w='99400' x='300' y='375'>
              <zone h='40260' id='5' param='horz' type='layout-flow' w='24430' x='300' y='15421'>
                <zone fixed-size='160' h='40260' id='4' is-fixed='true' param='vert' type='layout-flow' w='24430' x='300' y='15421'>
                  <zone fixed-size='60' forceUpdate='true' h='8500' id='15' is-fixed='true' type='text' w='23130' x='500' y='16296'>
                    <formatted-text>
                      <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='15'>Global</run>
                      <run fontalignment='1'>Æ&#10;</run>
                      <run fontalignment='1' fontcolor='#000000' fontsize='10'>(as of 28.11.2020)</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='background-color' value='#c0c0c0' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='77' h='10211' id='12' is-fixed='true' name='Cases' w='23130' x='500' y='24796'>
                    <layout-cache type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='background-color' value='#c0c0c0' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='102' h='10211' id='13' is-fixed='true' name='Contamination' w='23130' x='500' y='35007'>
                    <layout-cache type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='background-color' value='#c0c0c0' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='91' h='10213' id='14' is-fixed='true' name='Deaths' w='23130' x='500' y='45218'>
                    <layout-cache type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='background-color' value='#c0c0c0' />
                    </zone-style>
                  </zone>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='1' />
                    <format attr='margin-top' value='6' />
                    <format attr='margin-right' value='10' />
                    <format attr='margin-bottom' value='1' />
                    <format attr='background-color' value='#c0c0c0' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='55306' id='1' name='World Map' w='74970' x='24730' y='375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='1' />
                  <format attr='margin-left' value='0' />
                  <format attr='padding' value='1' />
                  <format attr='padding-right' value='0' />
                  <format attr='padding-bottom' value='0' />
                  <format attr='padding-left' value='0' />
                  <format attr='background-color' value='#c0c0c0' />
                </zone-style>
              </zone>
              <zone h='34569' id='8' name='Country Trend Lines' w='81804' x='300' y='55681'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='1' />
                  <format attr='margin-top' value='7' />
                  <format attr='padding' value='2' />
                  <format attr='background-color' value='#c0c0c0' />
                </zone-style>
              </zone>
              <zone h='28499' id='9' name='Country Trend Lines' pane-specification-id='53' param='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]' type='color' w='17596' x='82104' y='71126'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='2' />
                  <format attr='padding' value='2' />
                  <format attr='background-color' value='#c0c0c0' />
                </zone-style>
              </zone>
              <zone custom-title='true' h='15445' id='10' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='17596' x='82104' y='55681'>
                <formatted-text>
                  <run bold='true' underline='true'>Measure</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='1' />
                  <format attr='margin-top' value='7' />
                  <format attr='margin-right' value='2' />
                  <format attr='margin-bottom' value='2' />
                  <format attr='margin-left' value='2' />
                  <format attr='padding' value='3' />
                  <format attr='background-color' value='#c0c0c0' />
                </zone-style>
              </zone>
              <zone fixed-size='48' h='15046' id='7' is-fixed='true' name='World Map' synchronized='1' trailctrls='0' type='currpage' w='24430' x='300' y='375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='1' />
                  <format attr='margin-right' value='0' />
                  <format attr='padding' value='9' />
                  <format attr='background-color' value='#c0c0c0' />
                </zone-style>
              </zone>
              <zone h='9375' id='19' name='Country Trend Lines' param='[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:date:qk]' type='filter' values='database' w='81804' x='300' y='90250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='2' />
                  <format attr='padding' value='2' />
                  <format attr='background-color' value='#c0c0c0' />
                </zone-style>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='background-color' value='#c0c0c0' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='0' />
            <format attr='padding' value='3' />
            <format attr='background-color' value='#c0c0c0' />
          </zone-style>
        </zone>
        <zone custom-title='true' h='6625' id='11' mode='compact' param='[Parameters].[Measure to Show (copy)]' type='paramctrl' w='16000' x='82300' y='63125'>
          <formatted-text>
            <run bold='true' underline='true'>Country Selection</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='padding' value='3' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{0E103314-0984-450D-9216-0F2645B4D9EA}' />
    </dashboard>
    <dashboard name='Further Ideas'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='48899' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='48899' id='5' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='48899' id='3' name='Measures' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='0' />
                  <format attr='background-color' value='#c0c0c0' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='41750' id='11' name='FirstCase Map' w='49200' x='800' y='49899'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='0' />
              <format attr='margin-top' value='0' />
              <format attr='margin-right' value='6' />
              <format attr='margin-bottom' value='0' />
              <format attr='margin-left' value='0' />
              <format attr='background-color' value='#dfedeb' />
            </zone-style>
          </zone>
          <zone h='38750' id='14' name='FirstCase Weeks' w='49200' x='50000' y='49899'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='0' />
              <format attr='margin-left' value='5' />
              <format attr='padding' value='2' />
              <format attr='background-color' value='#dfedeb' />
            </zone-style>
          </zone>
          <zone h='7351' id='13' name='FirstCase Map' synchronized='1' trailctrls='0' type='currpage' w='49200' x='800' y='91649'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='0' />
              <format attr='margin-right' value='6' />
              <format attr='padding' value='6' />
              <format attr='background-color' value='#dfedeb' />
            </zone-style>
          </zone>
          <zone h='10351' id='15' name='FirstCase Weeks' pane-specification-id='0' param='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]' type='color' w='49200' x='50000' y='88649'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='0' />
              <format attr='margin-top' value='0' />
              <format attr='margin-left' value='5' />
              <format attr='padding' value='2' />
              <format attr='background-color' value='#dfedeb' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#c0c0c0' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='28' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='29' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='48899' id='3' is-fixed='true' name='Measures' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#c0c0c0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41750' id='11' is-fixed='true' name='FirstCase Map' w='49200' x='800' y='49899'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#dfedeb' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38750' id='14' is-fixed='true' name='FirstCase Weeks' w='49200' x='50000' y='49899'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#dfedeb' />
                  </zone-style>
                </zone>
                <zone h='10351' id='15' name='FirstCase Weeks' pane-specification-id='0' param='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]' type='color' w='49200' x='50000' y='88649'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#dfedeb' />
                  </zone-style>
                </zone>
                <zone h='7351' id='13' name='FirstCase Map' synchronized='1' trailctrls='0' type='currpage' w='49200' x='800' y='91649'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#dfedeb' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1EC93D55-9EB1-4DDC-947C-6F3E1A3AF36D}' />
    </dashboard>
    <dashboard name='GER vs. JP'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='19' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='17' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='90500' id='14' param='horz' type='layout-flow' w='98400' x='800' y='8500'>
                <zone h='90500' id='12' param='horz' type='layout-flow' w='98400' x='800' y='8500'>
                  <zone h='90500' id='10' type='layout-basic' w='98400' x='800' y='8500'>
                    <zone h='90500' id='5' param='horz' type='layout-flow' w='30898' x='800' y='8500'>
                      <zone h='90500' id='3' type='layout-basic' w='30898' x='800' y='8500'>
                        <zone h='90500' id='1' name='Contamination Germany' w='30898' x='800' y='8500'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                    </zone>
                    <zone h='90500' id='8' name='Contamination Japan' w='32500' x='31698' y='8500'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='90500' id='9' name='Incidence Japan (2)' w='35002' x='64198' y='8500'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                        <format attr='margin-top' value='0' />
                        <format attr='background-color' value='#f5eddc' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone h='7500' id='15' name='Contamination Germany' pane-specification-id='1' param='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306796042:qk]' type='color' w='21133' x='21934' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7500' id='20' name='Incidence Japan (2)' pane-specification-id='0' param='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]' type='color' w='19250' x='71200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='margin-right' value='0' />
                  <format attr='margin-bottom' value='0' />
                  <format attr='margin-left' value='0' />
                  <format attr='background-color' value='#f5eddc' />
                </zone-style>
              </zone>
              <zone h='7500' id='21' type='empty' w='21133' x='43067' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7500' id='22' type='empty' w='21134' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7500' id='23' type='empty' w='7000' x='64200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='margin-right' value='0' />
                  <format attr='margin-bottom' value='0' />
                  <format attr='background-color' value='#f5eddc' />
                </zone-style>
              </zone>
              <zone h='7500' id='24' type='empty' w='8750' x='90450' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='margin-bottom' value='0' />
                  <format attr='margin-left' value='0' />
                  <format attr='background-color' value='#f5eddc' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#c0c0c0' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{BB08DFD7-0D06-483C-A217-A8D46F41E42C}' />
    </dashboard>
    <dashboard name='Predictions'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#c0c0c0' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='[10] - predictions_for_tableau' name='federated.0m3vwg5077pvbz1bksxis1j7semv' />
      </datasources>
      <datasource-dependencies datasource='federated.0m3vwg5077pvbz1bksxis1j7semv'>
        <column datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[location]' role='dimension' type='nominal' />
        <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
        <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='10' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='92988' id='13' param='horz' type='layout-flow' w='98400' x='800' y='6012'>
            <zone h='92988' id='11' type='layout-basic' w='98400' x='800' y='6012'>
              <zone h='35819' id='9' name='Germany' w='79299' x='800' y='6012'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='1' />
                  <format attr='padding' value='1' />
                </zone-style>
              </zone>
              <zone h='40919' id='15' name='Others' w='79292' x='800' y='41831'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='1' />
                  <format attr='padding' value='1' />
                </zone-style>
              </zone>
              <zone h='11150' id='17' name='Others' pane-specification-id='3' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' type='color' w='79292' x='800' y='87850'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='1' />
                  <format attr='padding' value='2' />
                </zone-style>
              </zone>
              <zone h='51476' id='16' mode='radiolist' name='Others' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' type='filter' w='19108' x='80092' y='47524'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='1' />
                  <format attr='padding' value='2' />
                </zone-style>
              </zone>
              <zone fixed-size='160' h='35819' id='12' is-fixed='true' param='vert' type='layout-flow' w='19101' x='80099' y='6012'>
                <zone fixed-size='209' h='11939' id='35' is-fixed='true' type='empty' w='19101' x='80099' y='6012'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='151' h='11939' id='36' is-fixed='true' type='empty' w='19101' x='80099' y='17951'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='246' h='11941' id='14' is-fixed='true' name='Germany' pane-specification-id='3' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[:Measure Names]' type='color' w='19101' x='80099' y='29890'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='1' />
                    <format attr='padding' value='2' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='5100' id='32' name='Germany' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]' type='filter' values='database' w='79292' x='800' y='82750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='1' />
                  <format attr='padding' value='2' />
                </zone-style>
              </zone>
              <zone h='5693' id='33' type='empty' w='19108' x='80092' y='41831'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='5012' id='34' type='text' w='98400' x='800' y='1000'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='18'>Predictions</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#c0c0c0' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='51' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='52' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone forceUpdate='true' h='5012' id='34' type='text' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='18'>Predictions</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5100' id='32' name='Germany' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]' type='filter' values='database' w='79292' x='800' y='82750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35819' id='9' is-fixed='true' name='Germany' w='79299' x='800' y='6012'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='246' h='11941' id='14' name='Germany' pane-specification-id='3' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[:Measure Names]' type='color' w='19101' x='80099' y='29890'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='51476' id='16' mode='dropdown' name='Others' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' type='filter' w='19108' x='80092' y='47524'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40919' id='15' is-fixed='true' name='Others' w='79292' x='800' y='41831'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11150' id='17' name='Others' pane-specification-id='3' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' type='color' w='79292' x='800' y='87850'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{21D71AB9-2291-4A51-B9D6-0FB3CA552D40}' />
    </dashboard>
  </dashboards>
  <windows source-height='130'>
    <window class='worksheet' name='World Map' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]' type='filter' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-11-23 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:iso_code:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581610988412931:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581610997878789:nk:1]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_895371954159882240:qk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <geo-search-visibility value='1' />
        <map-scale-visibility value='0' />
        <default-map-tool-selection tool='2' />
        <default-map-unit-selection mapunit='1' />
      </viewpoint>
      <simple-id uuid='{C82F291A-36DF-42AB-9E8A-73EAAF6D5B80}' />
    </window>
    <window class='worksheet' maximized='true' name='Country Trend Lines' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Measure to Show (copy)]' type='parameter' />
            <card pane-specification-id='53' param='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Measure Parameter]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[Set 1]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610995380228:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_895371954196762632:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[sum:Calculation_895371954183909380:ok]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_895371954183909380:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[yr:date:ok]</field>
            <field>[federated.1tqx0su0ika3du183um0b12cwg8m].[none:measure:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{C115E562-9AA1-49B5-A3D9-3825217E3F29}' />
    </window>
    <window class='worksheet' name='Cases' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E460A1DF-F399-4B33-9D8A-C9480C666619}' />
    </window>
    <window class='worksheet' name='Contamination' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581611050946576:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>8025.3656870252471</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{2E3508AF-546B-428B-86F2-8168CD7BACDB}' />
    </window>
    <window class='worksheet' name='Deaths' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{78D9CEA4-F7B1-4D7C-9051-A710DAC29089}' />
    </window>
    <window class='dashboard' name='Entire World' tab-color='#dec77b'>
      <viewpoints>
        <viewpoint name='Cases'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Contamination'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Country Trend Lines'>
          <zoom type='entire-view' />
          <highlight field='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Deaths'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='World Map'>
          <current-page>
            <multibucket>
              <bucket>#2020-08-24 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{8E9C89E4-3012-4A5F-A6FE-6FF7DF161484}' />
    </window>
    <window class='worksheet' name='Contamination Germany' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306796042:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:Calculation_734086793217118210:nk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:nuts_1:nk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793230741508:qk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306796042:qk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:cases:qk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[yr:datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BFCFF678-AAB7-4E8B-AD22-9539D66FE4A1}' />
    </window>
    <window class='worksheet' name='Contamination Japan' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>11</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:Calculation_734086793217118210:nk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:Calculation_734086793299320838:qk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:nuts_1:nk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793230741508:qk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:cases:qk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[yr:datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0FC8A249-8D9D-4A91-9DFE-102C28D0699A}' />
    </window>
    <window class='worksheet' name='Incidence Japan (2)' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>11</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:Calculation_734086793217118210:nk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:Calculation_734086793299320838:qk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:nuts_1:nk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793230741508:qk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:cases:qk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[yr:datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C426DAF9-35F4-4D3B-9BF9-344762FC9885}' />
    </window>
    <window class='dashboard' name='GER vs. JP' tab-color='#4f779a'>
      <viewpoints>
        <viewpoint name='Contamination Germany'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Contamination Japan'>
          <current-page>
            <multibucket>
              <bucket>11</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Incidence Japan (2)'>
          <current-page>
            <multibucket>
              <bucket>11</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{6E065582-64DD-4549-84CA-FBAF7C4B6FCA}' />
    </window>
    <window class='worksheet' name='Germany' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='3' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[:Measure Names]</field>
            <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:date:qk]</field>
            <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]</field>
            <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[yr:Calculation_1118581611130515480:ok]</field>
            <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DAE77FF8-4501-4D6A-9100-E871A0BE9E9C}' />
    </window>
    <window class='worksheet' name='Others' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' type='filter' />
            <card pane-specification-id='3' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]</field>
            <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[yr:Calculation_1118581611130515480:ok]</field>
            <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5FBD9C64-D9A3-48D2-8297-CD24AA559EDE}' />
    </window>
    <window class='dashboard' name='Predictions' tab-color='#72bcbb'>
      <viewpoints>
        <viewpoint name='Germany'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Others'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{1FDD80D1-DFFC-4A72-93EE-390090653271}' />
    </window>
    <window class='worksheet' name='Measures' tab-color='#17927d'>
      <cards>
        <edge name='left'>
          <strip size='212'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Measure Parameter]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[Set 1]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610995380228:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_895371954196762632:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[sum:Calculation_895371954183909380:ok]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_895371954183909380:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[yr:date:ok]</field>
            <field>[federated.1tqx0su0ika3du183um0b12cwg8m].[none:measure:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{698ED573-2CDD-4028-88FD-3F9463813F77}' />
    </window>
    <window class='worksheet' name='FirstCase Map' tab-color='#17927d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_734086793146056705:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-07-19 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_734086793146056705:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:iso_code:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581610988412931:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581610997878789:nk:1]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_895371954159882240:qk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <geo-search-visibility value='1' />
        <map-scale-visibility value='0' />
        <default-map-tool-selection tool='2' />
        <default-map-unit-selection mapunit='1' />
      </viewpoint>
      <simple-id uuid='{74449D2E-FA6E-41C3-B7D8-B26C061DC757}' />
    </window>
    <window class='worksheet' name='FirstCase Weeks' tab-color='#17927d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:Calculation_734086793138049024:ok]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[yr:Calculation_734086793138049024:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{56B464AE-E2F1-4714-9923-6E814F935025}' />
    </window>
    <window class='dashboard' name='Further Ideas' tab-color='#17927d'>
      <viewpoints>
        <viewpoint name='FirstCase Map'>
          <current-page>
            <multibucket>
              <bucket>#2020-01-08 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
          <geo-search-visibility value='1' />
          <map-scale-visibility value='0' />
          <default-map-unit-selection mapunit='1' />
        </viewpoint>
        <viewpoint name='FirstCase Weeks'>
          <zoom type='entire-view' />
          <highlight field='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Measures'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{B09C2B8B-FDB0-4473-A8B6-274CD9C0252A}' />
    </window>
    <window class='worksheet' name='FirstCase List' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[yr:Calculation_734086793138049024:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1B237090-B4E5-4143-BF1D-E0A0FCD9A7B8}' />
    </window>
    <window class='worksheet' name='FirstCase Days' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:Calculation_734086793138049024:ok]</field>
                </fields>
                <multibucket>
                  <bucket>#2020-01-18 00:00:00#</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:Calculation_734086793138049024:ok]</field>
                </fields>
                <multibucket>
                  <bucket>#2020-01-17 00:00:00#</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:Calculation_734086793138049024:ok]</field>
                </fields>
                <multibucket>
                  <bucket>#2020-01-16 00:00:00#</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:Calculation_734086793138049024:ok]</field>
                </fields>
                <multibucket>
                  <bucket>#2020-01-15 00:00:00#</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:Calculation_734086793138049024:ok]</field>
                </fields>
                <multibucket>
                  <bucket>#2020-01-14 00:00:00#</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:Calculation_734086793138049024:ok]</field>
                </fields>
                <multibucket>
                  <bucket>#2020-01-13 00:00:00#</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:Calculation_734086793138049024:ok]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[yr:Calculation_734086793138049024:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{26815C8D-4B5C-44A8-9CFF-1353FC70DE7D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='38' name='Cases' width='144'>
      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
      hUb9Or2eg5kncXJyIib64UVTnU7Hzl0Z3LxdzgtTJ7RYK/o1yMm7woWsXEaOiDFb6HyQlu6j
      RqNh2+ff4OLizMjhMUZjrRKQi7OYpEWzUatrmT1vKRcv5aLRatHpdBRcKWJu4goAXo2fYrCI
      eQXXcHN1NhCVpWzZnsagkVPYsj3NoL2yspo7ZXfp0jm4VdnG85PHMmzwABYteZdd3x5oOrNJ
      ZVUkp2xkz75MXp/5YtMhX6WuZeFbq9myPY2y8gp0Oh06vZ6S0lssXvIue/cfJWnhaybDaF7+
      VUaNf4m/JSSZDRutRattZO+Bo3h5Shg+JNqiMS7OYt5YMAtZZRXLVq7j5q07wC/Xvi6V/17I
      ZvHfZxq9B4M2+JzDz9eHf61/mz17M0lel8qdO+UAeHt7MmHsUzw3/mmjcrxUWkllVQ3TXp77
      UP9DB/VnedK8h9rdr2ek7d5P2u79Ldq6OItZu+rNpmwK7r3zmTv7ZWIGRrLt891s2LQDjVaL
      i7OYAf37kPrRaoMMUSx2YsYrz7NzVwaz5i4xqH8NjulH4rwZJssGD2PpO+/z3ckzZvuWPvB3
      eGiIUXmk+EYJ5/57iWlTx+HtZXzDzdE+wJfUj1bzybavmDknCblC2fQ5x8YPV/56n3MI/H8j
      fJEoYBWCgASsQhCQgFUIAhKwiv8BEKiaGBr75g0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='38' name='Contamination' width='84'>
      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
      JJkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Contamination Germany' width='192'>
      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
      dJr/H39E/Ac768X3AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Contamination Japan' width='192'>
      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
      7OvRbXwAjicS+IbLYF0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Country Trend Lines' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='38' name='Deaths' width='144'>
      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
      P0S/WhxQTgibAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Entire World' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='FirstCase Days' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='FirstCase List' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='FirstCase Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='FirstCase Weeks' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dWYwkyXnf/5F3ZlXW2V3dXX1Nz83dHe6Say4pSiIpgRIg0RYkSAZs+YAN
      AwLsR1v2g2HAfLDfZL/ZMOAHW4YeTMMwBFHAipAECbJE8TDP3Zmdo+/7qDvvM/xQ1Xl0N2dn
      Z3q7Z7ritxjMxn8isyKr4ov44vgyCKWUgsEYU7jLLgCDcZkwA2CMNcwAriB2v4Xt3R08WV7H
      5tZe5l8CbG3s5fI+uP8+gjDAez9+H641SHRj0EMUX1CBLxHhsgvAOH9EgeB73/4uCiUNPMfj
      D999F7cXGujHHLyDDr78a7+K7cc/hhvxWN1Yw/x0Gfef7EEcPIGpX8f6k02oooPX3vky7IMV
      yIUy/vxP/wyfuPc65FINj7/zF3j9Z76CN+/MX/ajvjDMAK4golaFViiiqgkoTTQhqBVoXIC5
      Wh1dZRuO44PjOAiChk+9+Uno5So++cYd8L37WFpaQmtjFdXmEjhCwXEc7H4HM7Pz0Gt17O7u
      Y/baLcxMli/7Mc8F8jyzQJRSEEI+jvIwGBfKc40B4ngMnEPGWMAGwYyxhhkAY6xhBsAYa5gB
      MMYaZgCMseZD1wGMzhGsmKB/eIC5G3dQkNnSAePq8NTaTOMIewct0NBAafZ19LodKJN1xHGM
      cdpEutZZwbc2/ipJf/7az2KxunSJJWKcFx/SnFOoqgIvEtHZWcXc9dvgeR4Akr/Hgd3BDt79
      4A+S9FL9Bm5M3rrEEjHOi6caAOEEzF9jLR3j6sIGwYyxho1oT/C9R7v43W/8KEn/5pfvAdIl
      FojxscIM4ASWG2Bjv5+kTduHyAzgysJcIMZYwwyAMdYwA2CMNcwAGGMNMwDGWDPWs0Aru118
      49vLSfoLby1eYmkYl8FYG8BBx8Q3vruSpJeaVRQU8RJLxLhomAvEGGuYATDGGmYAjLGGGQBj
      rHm6AVAKY9CHH4TodTvww+iCisVgXAxPjwgD0G0fwAkJjJ6BN956M4kGuwovxzoZ1UYpPVuL
      eMR+IdUi/ko8P+MZIsIoJQClUGQOrc4AzSvyTsiPQmjMw1n9W2n67dlLLA3jPPkQAyCo1ieh
      aEU4tgW9VAJHCCgdvjT1Vefk+00JIc+sXYXnZ3xYSCQhKJUrAACpPH4tP+Pqw5oxxljDDIAx
      1jADYIw1zAAYYw0zAMZYwwyAMdYwA2CMNWMTEOMEDtrWUZIuq9VLLA3jZWFsDOCD/ffxO3/2
      75P0P/zMP0EJb11iiRgvA8wFYow1zAAYY83YuEA0KCDo3E7SsVtFo2Lgy9cfJNpc6Qa6fuMy
      ise4JMbGAGK/DP/w00k6ciaxsHiEv/fJ7yaaVvssvrPPDGCcYC4QY6x5ekQYjbG5tgIiqRh0
      u5i/fhvlgnxRZWMwPnY+JB6Ag6rI6HWPUJ+9DdPoo6i8mofkRVE+hDGOKaITYY0xjU+FOsZx
      fCogJo5jhGH48RSUcaF8yCmRMSzbgV5vYnCw8UofksfzeW+P4wj4E1FdHOFORXpxHHfKADiO
      gyCMzfDpSvMhh+RxWLp5BwAwMz11IQViMC4SNghmjDVj04/fa+zgv/zN30vSpSUNQO3yCsR4
      KRgbA+AIhSykL/biCXuvD4O5QIwxhxkAY6xhBsAYa5gBMMYaZgCMsSY3C+QYPQScglJBuazy
      fGzEPQ7+t9LnkiUB3MIlFojxUpDrAQgi/MH//hr+8rs/vqzyfGzQDg//m2ryJ94bmxlgxlPI
      1QKr18eXvvKrmKkWL6s8DMaFkukBKEI/xMbqe9jY6V1eiS4YStM/jPEj1wOsra6gT0R84rXx
      6AEe+Tfwe91/lqR/beb1SywN4zLI9AAE1+anQaQCCGXbBBjjQW4QLOkl7Dy+j4HtDwVKcbS/
      g4HlYG3lCSw3uIwyMhgfGzkXSNGruHdnAbaT9gCSLKN1uItOx8LcNR5RFL2aEWFnRHrFcXSG
      djr6i0WEXV1yBkDiAE4k40ZNAzCMCX706DEWrl2Hp9k4aPcx1xi+UvCViwg7I9KL4/gztNPR
      Xywi7OqS/IqUUjiGiZhEsGwPEyUZhOPxzuc+DwCYnp6+tEIyGB8XSbNIYwfbnRCf/+RN2A7z
      9RnjQdIDEE4Fifv43gcdvP3O5y6zTJfKfLmD33jte0n6WvUGNnoTl1gixsdJagCE4PatW/j+
      +4/gOB4U/ertB3oWmnofX7n9fpIulH6BGcAVJjcybG+uYcC8H8YYkTOAykwTUuQiZOtgjDEh
      N5fnGiYixHDdAChffRdobv8Af/vr30jSC4UK8NolFohx4eQXwsoV9A+/C/raq7XI9bzIno9G
      u5OkVdfDGL0og4FTvzaHz37hFzDXKF1OaRiMCyYxAN8e4P2Hj0E4HgcHB/jUm6+zeEnGlSep
      45yo4t7dWwjCAJpauMwyMRgXRmIAgijCbB3A9R38+ME6a/0ZY0EuIsyOCKKA4ue/9JnLKxGD
      cYHkGnqj1UFzaRaOzVbDGONBLiLs+hufgLm3Czf6yRcwGFeJvKtPY/gxj3JROhbguQ6CMILj
      OCxwnHHlyK0DGAe72NrbRWXGxFRVAyjQbh3AGBgIqIiJqRlM1UuglJ46S+tlhyJvvZTS01Ft
      Z2jD9Ol8r9rzM84mExDjY32vBdd0MTExfCsEBYVlOZicrKHVD3KhkK9aSOSpuj76L6+dzkhx
      llG8es/POJvMdmgJ1+dnYCLGYOBhpqoBIKhWqxAUHZOCj3KlCo4Mf/xXLSSSOxnWSDhwJO8B
      EkJAzjg4j5zMx5FX7vkZZ5NzgQRZBSCjUVMBDCvEROM4FJItjjGuHvmgeEQgvHhZZXkpGEQ6
      Hnm3kvStiO2LuspkDIBiYHvwBl344fjOg+6E0/i69QtJ+jfCJoDx/T6uOrl1AJmG6Aw6OGpZ
      l1ciBuMCSXoAx+iBq8/hnU8rUGQfIdjOeMbVJ+kBlGIJg/Y+uv0+iKSwys8YCzL1PMThfgsB
      CFSNzfgwxoOkByBEwt0bC4AonpozZzCuKumb4aiPhw8fIWITHowxIrcSfHNpEX/0zW9jbvEu
      qmP6Yqyz0Cd53HhHTdN1NkK6KuR+SVHVcOvOHSgic4GycDyBqHCZ9CUWhnGu5Da5DI56cAID
      nbZxWeVhMC6UXA9QrBbBmRZmZ2uXVZ5XBsv10Te9JF3VFajyeG8jeRXJGQAvEETR6W3CjNP8
      5Y838Z9///8l6X/1dz+Pn77HTt5+1cicD+Di299/iL2NDQgCc3IZ40E6BiASbt1eQr1eBY1H
      PQClONjZRRBHWH78kB2Sx7hyZKZBOSzduoulW3fzGeIITuhiYLhoElypQ/LImQfnnZHvjEPy
      zsrHDs579fjQCe1W+wgKz0PTJBiWA6023B//qkVEnX1I3rNpZx2Sd1Y+dnDeq8fTfzFCcOet
      Tw//v9m8gOIwGBcLewMiY6xhBsAYa5gBMMYaZgCMsYYZAGOsYQbAGGuYATDGGmYAjLGGLV0+
      J3KBQ3U2/foklbUlryLMAJ4TtcRj6oacpOUiM4BXEfarMcYaZgCMsealdYGC/X10//vvJmnt
      s59F8ee+dHkFYlxJXloDoLYD94c/StLiAgs3ZJw/zAVijDVPNwBKsfLe+xg4PXz/+z/EYZe9
      LoVxtfjQgJiJiTri0MfEVBO+5yGKtHMPidzpb+HfvPvbSfoX73wFv1H9Qi4PfcGQQ67UQ+Uz
      P07S4uQhwqCSy/NCIZERC4l8FXm6AVCKnmNBFqrgqYPpqVnwo8pwniGRHMchirMvJaXgT7x+
      jbxoyCHPIXvWHcdz4KIXCIk80QBwPAuJfBX50B5g8frNCyoKg3HxvBRNFiECZHE6SQs8O5iO
      cTG8FAYg8Doa1a8k6aK6dImlYYwTbBqUMdYwA2CMNS+FC/QyMbe3j19990+S9GJlEoRwOW1u
      YgarU5OXUTzGOcMM4ASq62H24ChJa44LcCSvue5lFI3xMcBcIMZY89L0AFxmZZW8Yi/ePSam
      MWKaPgdHOHCEtTEvMy+FAdR6ffzT//G1JK3/8i8BP/Mzl1ii5+OPH72L3/3Of03S/+Ln/jXe
      nn/nEkvE+DBY88QYa5gBMMaal8IFIlwMoTxI0pxyMbMsRAzznyu92Ak4NNAQmjNpOpSfkpvx
      MvBSGAAn+9DvridpsdG5kM8VdCv/uZUBArP83PcLzVl4219M0pEz8SLFY1wAzAVijDXPZABx
      FOLhg/vskDzGleOZXCAa+/C8EFEUIYq4c48Io1GUT1MKKrhQF3bTgpb6LxRx9UyH5NEYRLFy
      n8tpJkK7kM8XnR0RdjqaLGJRYi85z2QABBwUVUYYReB5BcD5RoRFJ+5FCIEgUygzrUSTyvaL
      RVydFel1UiMc+EKQ+1yx4CN29Xw+/ozIsbM0jmdRYi85z/TrcKKCO3fvfnhGBuMVgw2CGWMN
      MwDGWMMMgDHWMANgjDUXPkURUwonSNcTBI4790LQKAD1zSRNBPWF7kcIBREy05mEQohDqKGV
      SDw9e7rTC0J4fjrNqykiBJ61Oy8LF24AbdvC7/zfP0vSn5tfxK9MvVgFPUm0/V04/+e3krT8
      s/8cXO36c99PqvdQeftBmq71ca+/j9tP/l2iKbf/A9Zw+m0W735rGf/t3R8m6X/7j76IT9+e
      OZWPcTmwpogx1jADYIw1F+4CFUILv7T3+0m6Wf45YOqzz3RteHCIwde/nqSVT30K2tufPvcy
      Pi93J/bxD9786yQ9X34de23xue/37Qfb+P7j/ST961/8BBrVwlOuYHxULtwAlNjB271vJ2nR
      XgLwbAYQ9fsw/+RPkzRXKr1UBjBX6qG29DhJFzUTQPW57/doq40/+s5ykv7y31hiBnDOMBeI
      MdYwA2CMNc+2HZpG2FzfxMzCIiSeA/UMmF/7zfQmS1+A9M5vwf7a30+1Gz8P5Qu/fdbtzpXH
      W238x/+V+t2/8tN38IuXNMt437uNP+6l38uvB3P4ovJXeL36nxKtKS4BOF3AP/zmY/zhX6fu
      07/8O5/HL6vfwk9Vfy/R5oW3ANRPXfs///R9/PkP15P0V//xlzBdK77Yw4wJz2QAgdECr5Vx
      dNTB7PQEQGPQ3mby79RqATTKa3b7/Et7Bn4QYa+dLnqZjn8hn3sWLpXRjdNTZwIqosC5EIRu
      osnk7KAiw/Zyz+GHEXTOgZy5VsTZi219K39tGMVn5mOc5plcIE7S0NrbgqKe74IVg3HZPFMP
      ICg63nrrTVBKh9FgIEAxPdACSvm0JpdPRUgBACX8iXz62Ron5DQq6QDPg6vVEo2oKgSeoF5K
      DVOVBFBOzF8rFkB5Oa8JKsgJDaIKKpzOB0JOaMOgoNy1vAyJ41GW0zdB8BwHKmr5aznpzO9F
      lcXcc/AcAZWKJ64Vzry2oOSv5QjOzMc4DaEfIbaRUpoYwcnop1dRo5Tmzv86/iqeVzvrML2X
      5VmZdrb2kWaBCCHgOA48zyMMfPT7fRimnWg0jtBut+C4fqpFIbrdLmzXS7Q4CtDtdnP54nCk
      eakWhT663S7crBYca0GmLB463S5cPwAhZKj5Q83zw9NaECbPEvguOt0u/CBKDskLvJEWpprv
      Oeh0uwjCONXckRbFyWF6nmuj0+0ijCh4nh9qzmnNdayhFmc020K320UUD0NOOY7Atc2hRlPN
      sUx0uz3EOc04pdnmUKMgGW1wSrOMAbq9fqIRUPR6XQxMG4RwqdbtwshpMbrdLgzLSTU61EzL
      SX4f0Gio2RktHmqW7Wbqz7CuWM5pzXay9ec86tSw/jzXNCghBGHgw7IsWLaTaFvra9jY3cf6
      xlpGW4UXRlheXk60zbVV+GGEJxltY20FQRRheXkl0dZXVxFGMZ5ktLXVFURxjCcrGW1lBXEc
      Y3llFYQQEEKwurKMOI5y2kqiraXa8jLiKMTy6lo+XxRiZXX9RL4AK2uptpxoG/l8oZ/Tlkfa
      6vrmKW1tfWuoAXiyvIwocLG2OdRAKZ4sryL0bKxv7Q61UfkD18D6zsFIC/FkZQO+3cfmXmuo
      RQGWVzfhmR1s7rdHmocnq9twjRa2D3tDLXSxvLYDp3eAnZYBQgg6BzvoDBxsri0jiIbHxLb2
      ttCzPKytLiMa9XYH25sw3AAry08ADLW9rXWYXpj7bfc212H5Ya4O7Gyuwfbz+XY21uEE+bqy
      vb4GN4jwZGX5jDq1crpOZfKtn1mnVoZ1apTvudcBJFlB5Ds4aqcvsWrOzWFxdg4lPQ0ir1Qq
      MA0LExOTOc0wbUxOTmS0MgzTxsREOs1XrZRgWCfzlWBYDiYz+SqVEkzLwUT9hGZ7mJhIxwyV
      kg7L8TFRr+Y02w1zWlkvwvZC1GuVnOZ4MWrVckYrwPUp6hmtVCzADYFatZTRNHghyWsFFV7E
      oVrRM5oCPxZQKR9rBLomIyQSKvpoBZjwKKoiYk5GuagmWkERAEGFXhiNTzgBmsyBk4vQtdG4
      hBOhSQS8oqOgjrZo8BJUkULUytDk4ZCwWCrDcyzUJho49ur0cgWOZaI+2cCxo1euVGAZBiYm
      M79ttQrTGGCykWrlahXmwMDkqXxmXqtUTmnlShmmaWJyIl9XTNPCxCnNzuWrVsowTSdXpyqV
      8rBOjfI9twEIooRCoYgwTKcde+0WgjhGr5+eKG/aLibrZewfHCaa5XiYrOrYyxw6YTkBJio6
      9g8zmhugXi7kNNsNUdNVHBylb26wvQhVXcVhK9UcP0a1IOPwKJ2OdUOKsibisJVqXgToKp/T
      /JhAl/mccQeUQ0EiaLXTackQPFSR5vJFRIDKx2h10nwxJ0Lmoty1lJchkQCtTi/zpSoQ4aGd
      aBQQVfCRg3Zv9ApHGoPIBZDQRqc3+p5pBF4pgvomOv3RdGgcQlBLiN0BOn0r0cRCGZHdR3fg
      jAocQCpWEVhd9Myh5lgWJhsNHBzsI4qG4x3LNNGYmsTe3j7i0RjINExMT09iZ+8AxwNJwzAx
      M93Azm66h8k0LExPTWBn7yDVTAtTjTp29zOaZWNqsprTLNtFo17BXrb+2B4ma2XsH2brlI+J
      6on64wSoVwo4OEzrxXGdOtae2wAccwDH8yEK6WYvXhAQ+h7UzHSpIoswLQeVStpKypII03ZR
      LZcymgDTcVEpZ/KJAizHO6HxsFwflVLmWoGD7fooZzRJ4GB7AcqZz5B4AscLc/cTOcD1I1RK
      qSZwgBuEKGc0nlB4YYRy5loeMfwwRqWc9hQcYvghzX0GoRGCKM5dizhEGOXzIQ4RxiRzv6Er
      E1IOlePnIAQ09BFRPqNxoKGHCAKq5WKixYGLiIh5zXcRcRKqpVGPwvGIfAcxJ6NW0obfiSzD
      NAzoegmCMKwisqzANExUyuXksHRZVWAMDNQq5aRXUBQFg4GBWiX9ThRFhmGYqGXqgCIrMAwT
      1Wy9UGQYpoVq5vuUZQmG5aCarQPHdSqrSQJM2839jrJ0XH/SOqCM6tRxvXhuA/A9B92egenp
      dJqO4ziEQYjstBLHcQhOvByK58johVHkqRrHEYRh/qVZHIehlplx4QgQRhEITmvZ+5GnaZn7
      EVCEI9831UafcWKmJzqpUTo89T57MAaliOL4jHx5jY6uPanF8VmfceLamA5f7HX8bIQkM3Zp
      PgIaRyMNeY3GyffCcTyiE78Zx3MIwwA08+sOJyBO/N48jzAIgIzKnZmPO/XSMH5UfzI/z1A7
      o/6crFPccf3JXMsRIAjzvzdHRvXn+FnxnBTKNdy8eR26piRaf2CA4wiCTMhjf2CAIwR+4Gc0
      E4QQ+Bn3qW+YICAIAi/RBoYFAiDIXDswbBAAvp/JZw27bj9I3yptmDYICHzfSTXLBgEHz7MT
      zRzNYHhuGt5o2g4I4eE66eqqZdsgnADHTt07y3FAOBG2lb5h2nYcEF6CbfYTzXHdn6DJsIzU
      BXJdBxwvwzRSF8j1XPCCDGMwupbGcFwPgihhkNU8D6Iooj8YlS8O4Xg+JFFEL9ECOF4ARRLR
      HRy7Sj4cL4QqCegMht+BZQxACRDTCEE4XE8wBgOAkOHbAeNhVe73+iD8sDIeV+5+rw+O5+Bn
      KuhQy1fafn8AjiPws3WlPwDhuBPaqP6E2TplgiMkXy8G1rBOZTVzWH/8bJ0yj+vUUOO/+tWv
      fhXPAcfxEEURopiupSmyBL1SQxQEKJX0RCtXaggzmixLqNRGmn6syajWqgiDMNEkSUatVkXg
      hyjpw25ckiXUa1X4QUaTTmuiJKNeqyAIY+jFYnq/aglBSKEXC6P7yahVdIQxyWgKqmdppSIi
      yqFY0EZlVlDVNURESDVFRUVXQYmIYkFNtaKKmBNR1FKtXJQBXkbhWFM1lArH2rBhUVQNuiaB
      CAoKqgKAQFE1FFURvKhCU2UAHFRVg6YIECQNmiIBhIeqalBlAaJ8rAlQNQ2KxENSClBlESA8
      NE2DLPKQ1aEmSRI0vQoSBdB1HRxHoMgSCqUqaBSgVCqBEAJFkaCVakDoJ5qqSCiU6ojD1CVV
      FQmFch00GOY7rhfFSg3xCa10ov7IZ2iKJKFcfYY6dVx/cnVKytWpc90NqhR0dNstzDabiaYW
      dHROaFpRR7vVQnMm3RRWKOpot9o5rajraLXaaM6kbpaul3DUaqM5ndV0HLXamM3kK+lFHLW6
      aE5PZbQCWp0+mtONVCtqOGj3IAnpV1EqqDhs909oCg67BkQ+7U5LmoyDng0x8y2WNAmHfRcC
      l3b4vmvjsN2Fklkl9hwLR+0e5Jxm4qjTz+VzbROt7iDVCIHIA+2eAUUWE03gKDp9C3JOi9Ed
      2FCkVONJjK7hQJFGDRfhwCFCz3QhjzRBFOGafUTgwI18JUGUYBs9UMIn7pMoSrD6XYBLG0FB
      kmH2OyB8qomSDLPXBuHFjCbB6HbAZcaQoixj0G3nNEkaarwgJZpSKKLTaUMQ0ldqqoUi2u02
      +MwLB7RiEa12J6cVivpIe0EX6Cfh2wOsbGznNM/q4f1HyznNNbp48Hg1p9mDDj5YXstpVr+F
      hyvrOc3sHuHx6kZOG3QO8XhtK6MQ9Nv7eLK+ndN6R7tY2dhJJRrDdR10MjNXoBEc10W3n7pA
      iMOhNrAyWgDHddAzMlrkw3Zc9I3UzdJ1HSeGDkmrlxaNQNdPa8ctXBZRINje3kYvUxaBJ9je
      2sp9Ls8RbG9tJi4iAHCEDjXby1zLgWYqOzhhOLPEC6n7zAlAHOXfCcuLAI1y7z8lvDicgcrk
      8zwXnpffpOh5Hjz/hOa68PzghOac0qLAw8HeLgzLy2guDvZ2YNrpPUPfxf7uDiwnvT7wHOzv
      bsNyh+7YuRvAwd4WtvaPTmi7aHX6OW13bwftXl7b2dlGr5/XtrZ2MDAGOW19cxuGaeS1jW1Y
      OS3G+uYuLDNzLY2xvr0PM6sRDkavh2o1E7nF8TB7XVRrWU2A0e2gls3HizC67ROaBLPTyl0r
      C0Cra+UqiixQtHs2xExFkYUY7b6TzLwAgEhidAZu7lUqlFLopQoEPj8wLpUr4Ln8ALpcqYDL
      acP5di5jka5lwHJcxHHaaw16vaEvnhm59nu9U4PPfreb89kBoHcin6Lp0GQBR620XqgFHarE
      4ygzda0VS1BEDq3MFLemlyELXC6fICkgkY+BlWkAJBU08GDYaQMgyipiz4HppA2ApGgIHRu2
      NxwvnrsBNOeW0JzMhwHOX7uOiWq+Jbu2dAO1cn7P+vXrN1HW8/lu3rwJvZDPd+f2LRS0fGjg
      3Ts3oapaRuFw9/YNqGomH+Fw99YStIzm+T7CKEC328troX+21stqAcLAR7ebGq0XBAhCL6eB
      EyGSAEamJQYnQYQHw84cB8XLEKgLM9M6E0EGHzuw3JEWR7h//wF834emjZ43DnH/wQfwgjAZ
      OyAK8ODBQ3h+BE0ZuU+RjwcfPIQbxMMxwQhNr4AP7VyvUKvX0eu0EWW2itXrdXTaLWTsBPWJ
      Otqt/Nb3er2GVqbCHiNJp4+MOlOTT2vyCW26OQeJz3erM7PzOXcUAJoLC+CR3+42u7iYHMt7
      rgZgGX3stbpwHTun84KIKMq3HIIgnppqE0QRURg8gyadocmnNUnKLdQd5wsyGqUUekGHJEk5
      rVgsQZRSX5RipIkZjcYo6mWIkpDXimVImckBRB7ciMf21kZ6rkLkwIlEbG1mtMCBO9KOiQMb
      fixgc3MUa0E4zM4tQC+o6RQx4TA7Nw9dU9JYAI7H7Pw8ipqcno3A8ZifX0BBlVKNxuj3ezAd
      L/GVo8BHrzfcp3Q8rRoG3khLHyv0PfRG+5SOCXwPvW4PMc30MLYB2wtB43RK27EMOH6EOKPZ
      5gBuEOc1ow8vjBGfOEMCGE5C5CDPZjwko51rUHxBL6OiF1Ao58/GMk0bszP5KCjTsjHbPK1l
      B7zAcErypNbp9jC3mH8JVafXw9zijYxC0ekNsHAt80IsStHtGzltd3MNA8tDaSL9jO2NNRiW
      j8pkqm2trcJyItQbaZk31lZhuzEmp1NtfWUFjk8wlRn09y0fMhdieuFGMifftwJInI+5pRvJ
      vp++HUIkPhZv3ErKazoReAS4dv1W8lxRHKOo68mgFQCimA61Y8OjFHFMUdRLkI4HixSIKIWe
      1TDsAa41IxjeqAHhONQbM/CDbUSUQgABIRwmpppwg20c2yvhOExOz8LZSsdeHMehMZPXFE3H
      nKajlmkY1YKOuUJe04olaMUS7Kyml6Hp5ZwGAPv7++j1OpCLZSxODT2O/b199HttKMUqFhrl
      RBv0WlBKdcxPDD2Jvf19GN0WlPLE+b8VwvN8lIR8x8L/hEWP0wtk3KmFL/6MxbCCpqA/MFDJ
      DBAL6rF27C4RFBQZ/YGJsn68EkqgySIGhonyaG9NvTEDIvZyLcxkYwa81M9r003wvQGijNaY
      bkLsGYgy5WvMzELq5zXbtuD7fm6xzbIs+J6fW8yyLBOe7+cGzJZtjbTjBS4O0zOzAI1hu36i
      zTRngTiC7Y++U44/U2s2Z4E4hO3HybWFQgGapqI8arV5XkCxWMSNW7eTz+UFEVcHpiMAAAle
      SURBVMWiiNu3byflO9bu3rmT/l4j7RMZDQBoHMFxPGgjN/V4kS4IQuB44wCl8DwvNxaJoggc
      xyO3wgVgYXERjZkm9HIho12D32yiWEpd4cVr1+D7s9B1JaMtIWjOQi/K528AxYKCwcBCo55u
      Qjva28KAFjEzlW5y2tvZhCcOMNNIe4ud7Q1Q1cR0I928tLWxDqnsYGpyeL9Btz2cAsy49v1e
      G52+BTVKDa/XPULXsKHGaUvXax+iZ7rQYAAYTo9GUQRVK0DJLOiFx5qadp1RFEPTClBPaoXC
      aC5+pMUUWqEINeNjz8wuYGZ2IdcINOcW0ZxbTDVCMDt/Dc25xdTIclrqsuzv76PT7eHa9VGP
      Rylc10EcBRg48dDnpxE2NzYRhCFqU3PQFACRj47pYnB0gNrMQu53I3EIw41RKigAKMIwgmWZ
      KOpl8CSNgbAsC4VicVgdKUUYRXA9Nx2TUQrf9+CHcbI2srmyDDemsP0Q9dHkwObqMtp9A5ys
      4q3Xh7NfW2vLEIpVHB0e4JNvvA4AePL4IQpFHZJShJbZYuN7HjZ2DvHZTO/r+y42dlt4Zzrt
      fT3PxdZ+G5+ZSTXfdbB12MVnZmbP3wAO97ZgcDXcXJofFsCxMTE9h5qQWqXrWJhqzgNSMac1
      ZxfAqeleDse2MDe/CKGQDqpL1To4bjPX+pcrdYBsolpK71epTgDrO+meFwCVegPY2k93VgKo
      TQzXBOzMTEF9cuqZtInG9Clt8gxt+Hw2YnDJTFAURaBxjCCKEy2OI3h+CI5gqFGKMI4hcByi
      KBrNexNwiNE1LNxNxi0xdnb2UKsUYbuj1pPGGAwGiAFItouqrgI0xsHOBnhRhWE7w0W3OMDK
      2hZUzseAr6NUUNDa3cLa9iGILOHe62+A5wi2NtYQRTHahoO37r0Bjgd2NlbhQoBp2bj32l0Q
      AHtb69g46kKVJLx57w0AwNziAjY2NjGTWbtpTM9gZvE6Dvb30t+iVsHK9hGKmengWrUKSSuB
      Qz7CjdJhI5XTorO0EKqWn0SJoxCaNqw/5z4L1Ghew/W5dKGJFwQ0ppvwMlsIBEHE1Mws3MwW
      Al4QMdWcg232MvkETM/Ow85sFwCGG+L8E26RLPLwsiM0EEgCgR/lZwAkHggy2dZWnmB3/zA3
      a7G1sYYf/OB7uanbnZ1dLD/+APuZnYWrTx7hwYMHODzq5O63s72Ndjd9tsePn2B9fQ1b2+n6
      w8P77+G9Bx+kGqV4cP8+bKOLzd3RLkca40c//AE2t7YRHrsFhKAxM4ef+szbmelNgmJBg+97
      yU5NgMPEZAONWjmdbycEIAImqnrao3ACZmam0Vy4jrnJYcWrTjbQnGtipjGVLPw1m7MQFQ2z
      U/XEBZqoVyGrOgqKlDgolXIRslLETGYBkhMkLN24ianMlnOr18bO3n5uh+hRq4vGZA0HR5kd
      naYJ1zHx4MlKoh3sbGBnextETiv7/vY69na3QeS0su9urWF/dxtESQ1qZ2MFh3vbIKOG9tx7
      AFlVc4sxgihBECXcunnjqZooShBFCbduZDRJhigBN2+kg9bllRXIWhFLC3OptroKtaDj2vxs
      TtOKJSzONTPaGrRiCQuzmRVovQxdU7DXTqcAeZ7HxNQs1MwgU+QoekGMajnthrViCRPFAoxB
      umAmCDx834NSTHu86UYNrc4AM7PzibZ4/SZUVcFupgKoIoeu4aBSHbmPhKBeq2F6Zgau6wJI
      Xa18aB8BL4qolqogxmhalXAQRBHVehmceTy4FVCfaACRA+E4rhkkmU49Di/gRSW3cg8Adr8D
      xw/RbR+iPjkNniNotzvg1BIOWh1cv34dBEC73cP0ZAVPVjfQyOzrP0l9Zh41QrDQTHuFxes3
      QQnJrassXr8BEA61aupSN5oLKNfqaPfSejY1u4hKbQKdQarNzF1DrTaBjplONTcXrqM2MYme
      OWwUPlJM8LPw/W/9BXxlAp976zUAw9W9KPTQ7juYnx0+rGMZcLwArh8m2xJ8x0Knb4ATJDRG
      QSy9TgtKsQJCo2TaatDrwLRdyFoB9dFW2mNN0YqoVYbW3u+2YTke1IKO6ijApNdtwz6hPSvb
      m+vgBAlHnR7efGP4bA/uv4diqQbXc3D75k0AwP33fgQ/ArRCEXdu3fiJ93v0wX3o5SravQHu
      vXYXoBQPHz1CUZPRswO8cfc2QGM8fPQEBUVA3wPeuPOT7/dxQ2kMSgmOI78IIYkWRSEEQRhq
      o5cmhGEISXr+96I+C7bj5MYFz6OdqwFEoY/lRw8RCEW8cWfYam+uLWP3sA1NL+OTrw1Pmlx+
      /BgxIYgpxd3btwEAK48+gFKq4KjVwVv3hgOgh48eoVYuIuYVTE/mXwh1Hg//UbBtG5qmwbQs
      FAvDrtc0TSiSgI7hoDHq3i3ThKoqMEw7F4twkuMA7TRQmyKKYnCEIIwpRIHPaEAUI7f3ZZzZ
      3dpAd2CCkxR8YtTI7O9sIqA8XC/ArRvXAADLTx5BVguoTzSShb+9rXX4rokOreBTt+fO1wXa
      WF/H4u3XsL6a+mvz126gMTMHIbOAtLC4AD+McJCJ8ilXyrB8iqnMrFC5oIIKKvjMAGhzfRWG
      ZUNSC7h1fbgWsL2xBiJIcIMIN64NZzceP3wwdFEaaRe7ubYM3zURFmZxd+GjGUDiJhRSv7M4
      2mXaqKczSIWR9rTKD6QuTOrKkGSfTbqamWrCuY/WXl0UtYD5ah22mbqeiizDs32QzLaPol7G
      VKOBdrcLTRk2oI2ZJnY3llHTXzAg5iymp6fRa7dQraWVeLhtVsltjuq2juB6wSg4ZYjnh6jo
      Kg4yIYwRBRQB2M2ETmrFEhYXl6BrmagzZbjamfWLS9U6ms0ZmJl9RDOzsyCckJstYrx61CYm
      UCoWc8FYfhCC5/nc9hVCI+zu7WN9M90QubK8gpgvwOodjPKc8xgAeD4XAzSNNUoWfc7SzmBv
      ZwuU8Ng7auPtN+8BAHa3NwFOwP5RB59+czgd98GD+9AKOhzfx91bNz9a+RgvNZ7rQJAUuI6N
      wqiXdl0HkqTAyWi2ZUFWFRwdtTE91ThfAzjc3YIbc3AcD3duPf+ZXB8V27Ghqdpwkeb4Qc/Q
      LMuCqkg46vQxNTnxtFsyxoRzNQCj20LbsAHC56YkGYyXlXMdBBumBXNgAOLpHXkMxsvIuRqA
      qhWwUJuAkxmdMxgvMx/LIJjBeFX4/0jBteq0VxjgAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Further Ideas' width='192'>
      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
      DQpaGY8vgN2mVO6vSy9HyRcKFDSNdDrD3MLipp5rfwmAZbCwGMPtdpHK5JGmDpjEUxkK6RTz
      C4uodgdCWmj5DHlNR5gGpfLWDtVSiRgGakUvVCwd1eFGK+SJLScQwobTrhKNLuBweshnUqi2
      rdiqJflslkwuh2FZaEUNiSSbyZLP59E0jVIxh8PlxzLKLMYyuF0qmby2+S9ImixEl3B4QziM
      DMlMEQkEAx4yhTKUi0Tnp0kVVt5ZdGEBh8tNNr3VZwOn00kmnaZcLlMq5imWdBLxlYkKIJNc
      RrcEelnDlFtzHZHSIpNKUCzmUWxOyuUyZilP0bKRTcaILswTT+XurAiS6EJ0Q8/12OwBPsto
      moZrjwL8P8uUtQLJbJGWyMY9dD+/ziz7iPrg3xkcLg8trs2FplYEIODf/SSzdR4tpZJeURft
      LhfKY+i+vNNUVCA9X88m/FlnZn6ZmfmV2yS7Dg7QHqmd6/TzQF0F+pyiCIHLvn/SOD4q6mtg
      nc81FQF496f/xL/7T3/BBxdv8+FHn6xbePjSVVYNjuV8iv/4H/6U7/3ta3vRzzq7wPjNa1y4
      cIFkOsPMbG0VWFomI8OXiaU2dlYwPz+/0sb4+J2fq9zVrCW5fGt6453eYdQ/+qM/+iOA8794
      m2/+zr/iYFsTV4dvUE7O8NbHIxSyGf7+n96gaAn+/vvfZypjcPrIAK//+O948tVf48VTQ0ze
      vMoP//6fSZXtzIxc4LV3ztPc3s5f/+CvuDIWpdFe5Ps/fh3L7qOjZf9nUPuskskWyGRXDv5C
      TU3844/+hq7ePhoag0xNLWKzWWSTSVS7wtWrI7icNv74j/8tHT0H+NmPvof0hrEpdqxShvGZ
      JZojTcxN3CaaLNAY9HL96jDeYBMOm8rf/dUPGDh+mP/tf/ojnv7yK/zjj/+Ro0N9XL05TnMk
      QjoeZSqaIGwv8tqlOVr9dhwOleHhq7gDDbiq+PPvNPe0ovG9//QXPHX2GaLRJYKKg4MnX6bf
      k+Xi5avEk1mOHH+CX/31rz74Ygslnjh5ksvXrvFEfzOlYp6bn55HhLqxF5KYLjdCmiSSqT15
      qDobo5hNcuHCBSLdLQxfvMHwhRlaek6SWRhmIlbm29/+TqVsFhe/+YVnAXj7n3/Me++9R+Y3
      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
      B04AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='GER vs. JP' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Germany' width='192'>
      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
      c+j5ev9c/w+hv13CeRkRogAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Incidence Japan (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Measures' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dWXMc2ZXf/7ln7Xth3wk2uJPdkppNjtozI4/lsMKecWjC4zfHKMJ+sD+S
      w6E3h8YxdkxLltzWtCPUlFrd02yxyW4uIAiSAIECUHsVspZc7/UDWBCBTJBZKBC15e+FjMzC
      zZNV99zl3LMwhBAKD48hhQeAW7dudVsOD4+uwLf+w7JsRw1JkgRZljsWyMPjNNlXAEJIx41x
      HNdxGx4ep0lnw76HR5/jKYDHUOMpgMdQ4ymAx1DjKYDHUOMpgMdQ4ymAx1DjKYDHUOMpgMdQ
      4ymAx1DjKYDHUMO/+SN/RFcbaBoEIktBWAEiz4EQAkmS3pZ8Hh5vlbYUQFEUVGsqIpEgQFUU
      qgqS45OI+f2QJMlTBI++oy0FCAQCaBoUxNBBWB6hcBi6pqHRaIBS6nmDevQdbSmA7A9i0h98
      W7J4eJw63ibYY6jxFMBjqPEUwGOo8RTAY6jxFMBjqPEUwGOo8RTAY6jxFMBjqPEUwGOo8RTA
      Y6jxFMBjqPEUwGOo8RTAY6jxFMBjqGnLHbpczKOumZB5BoThIXIswIuIhj0XaY/+pC0FAAWI
      RcDIPnCUoFIuIzUxDb8XEebRp7SlAP6AH4QV4BNZEFZAKBQBIZYXEebRt7SlAJIvAMl3+Kpw
      ctJ4eJwy3ibYY6jxFMBjqPEUwGOo8RTAY6jxFMBjqGnvHMCjZygUClheXkY0GsXFixe7LU7f
      4s0AfYrf74eqqhgdHe22KH2NpwB9iiiKoJR2W4y+x1OAPoVhGDAMg93d3W6L0td4CtDH5HI5
      1Gq1bovR13gK0KdQShGPxzE+Pt5tUfoaTwH6FEIIDMPothh9j6cAfYogCFhYWADPe5bsTmhL
      AZqNGsqVKnStCVU3YFkWTNN8W7J5vAbDMLC2tobf//73njWoA9oaPkRJRq1exq6pg4JCazQR
      SY4gFQxCFEUIgucafVrouo7Z2VkkEgmIothtcfqWthSAWgZEXxBavQLKcBBFCaZpQtd1cBzn
      zQaniCAIsCwLuVzOOwzrgLYUgBNkhAUG1C8C2LNDU0pBCAEhxJuKTxFKKSilCAaD3vfeAW0p
      AMMwL//lbNc83LG1tYVGo4FwOIx0On3sdizLwvPnz2GaJmZnZ8Gynj3jOHgmhFNEVVUIggBZ
      lqFpGkzTPLYVh+d5jI2NYXx83Ov8HeB9c6eILMuwLAuPHj2CqqodmTBN08SXX36JTCZzghIO
      H94McMpQSnH16lU0Go2O2uF5Hj/5yU+8VDQd4s0Ap0ylUsHt27cRiUQ6asc0TfzsZz/D3bt3
      T0iy4cRTgFMmEAggEol0nEOJ4zgsLS1hbm7uhCQbTgZaASil+OlPf4pf/OIX3RZln2QyiWaz
      2fESqGV9K5VKJyHW0DLQCqCqKq5cuYJkMtltUfZRFAWEkI7dmGu1GsLhMKLR6AlJNpwM9CZY
      lmWMjIxgbGys26Lsw3EcQqFQx+4LtVoNm5ubsCzrgIK3DsW88xl3DPQMAAAPHjzArVu3ui3G
      PhzHgWVZFIvFjk5wE4kEFhYWkEgkbPeePHmCTz/9FM1msxNRBxbNsLBTUfE4owz2DAAA2WwW
      IyMj3RZjH03TEAwGkUgkOhqleZ5HvV6Hz2dL1opKpYIbN24MdbxAU7eQragoKjqKioZy3UBJ
      0bDbNCFwDGJBEWGfMPgK8OGHH3ZscjxJBEFArVZDKBTqqB3LsnD79m1cu3YNk5OTB+5xHIdM
      JoPZ2dmOntHrUEphEopcVcNWqYlcVUW2oqGoaOBYBqmIjJGohHhQxOJYCNGggIhfQGvYYRhm
      8BWAUopMJtMzm0WGYRCJRBCLxTpu58KFCwiHw7Z7iqKgXq8PnAJQSlFTTazl6siUVDzP1aA0
      TIxEZUzEfZhK+PHeQhyJkAiBc7e6H3gFePDgAYLB3qlg8/Tp030foE5mgXw+D0VRHDv51NTU
      wESKUbo3wj/Y2MXDjSosCsylA5hM+PD+YhyxYGfGhLa+pdpuBaoJsESHxfCQBR6EYREJ9U4H
      O8zs7CwIId0WY5+pqSkYhmFbtrRLMpkEz/PY2Ng4EBhfq9XwzTffYHZ2FjMzM52K2xUopdip
      qLj/oorljAKJZ3F+Koy/uTmNVORkXT/aUoBmswnDAiSfDJ4SFHJZjEzP9WyJpC+++AKFQmFf
      vl4gnU7jl7/8JWRZ7kgJeJ5HLBbDxYsXD7ybKIqoVqvI5/M9885uUZomvl2v4IvlLESexZW5
      GP7TD8cR9r+9SMO2FCAcjqBaVyGyAGEljE1OwzL1ni2RlEgkwLIsfD4fNE3rtjgAgM3NTdTr
      deTzeaRSqWO3QwhBpVJBpVI5cKZQLBZx9uxZ8DzfM+/8OixC8Wynhq+elrFVauLSTAT/7uYU
      UuGW8pK3+h5tlkjyI+3zvy1ZTpzp6WlMT09je3sbhmH0RMxyLBbD/Px8x6ZZy7IAAM+ePUMq
      ldo3qcbj8b5ImWIRirvPK/j0YR4jEQnfWYjjb25OgWVP9wBvMHZKR0ApxYMHDxCPx3vmZLR1
      OLWysoLr168fWy6O4zA5Oen49xMTEz27/KGU4nmujl/d2UYyJOFv/3wWsUD3gvoHWgEKhQKy
      2SxCoVDPWEVCoRAWFxcRjUaP3fkppbh79y4YhsHZs2dt7aysrOD8+fMnIe6JQSlFYVfD//l6
      B6pu4d++P4nxmNz1gWmgXSGSySRSqVTPJJAlhOCzzz5DPp/H48ePj90OwzB45513UCqVoCiK
      7b6qqnj27Fknop4ommHhF19t4b//9gXenY/hP/7FPCbivq53fmDAFUBVVWia1jPrYYZh4PP5
      sLKygqmpqY7aEkURLMtiY2PDdu/MmTOOPkLdoFzT8d/+33OEZAH/+V+ewcXpSE90/Ba9sS54
      S8iyDFmWe8YdmlIKVVUxPT2Nra0tLC4uHrstnudx8+ZNR8tboVDA/Px8J6KeCOv5Ov7nF5v4
      4dVRnJ8M91THb+E4A+xsrmNl5Rms05bmLdBoNKDr+ltrvx2PToZhEI/H9zM7d/JMTdNw69Yt
      bG9v2+4bhmFTDEopXrx4gUqlcuzntiPf18/L+IcvM/j3N6dxYaq3Rv1XcVQATW2i1mHEUq+Q
      SCTw/Plz15+3LAu1Ws11x65UKrh37x7K5fIbP0sp3V+OqarqWiYnSqUSdF13XN4tLS05pkr5
      5JNP3noMsUUo/vFeFl+tlvG3fzaH8bjdW7WXcFQA3bBANK3vZwDLsqCqaluOZ7/73e/w85//
      3LX7hGVZkGXZVYgjwzDw+/0QBAG5XM61TE7ttA7RnPyJyuUyNjc3D1wzDANXr159q3sD3ST4
      H59toNow8B/+dPatnuCeFLY9AKUWwuEwmhbf9xuEp0+fYmNjo60NZyKRwLvvvus62dTGxgYk
      SXKV5a3VcVuJsTqB4zhMTEygWCwe2OO0ZrDDHd2yLOzs7Ly1ghqEUPzDP2UQD4n4F1dGenbJ
      cxjHX7lWb0JkKPo91W0wGMTIyEhbJ8D1eh2/+c1vXC+BxsfH8ejRI9cdulqt4vHjxye2MW+d
      CLcghDhagWRZRrVaRbVaPZHnvgqlFL9bLsCiFH9xuX86P+CoABTlcgWMKPb9DBAOhzE6OtpW
      Z2v3BDWXy0HXdVcKoGka4vE4Ll++DEVROsqmbVkWKpWKLd5ZEARsb2/bzgGKxSLm5+ffyhLo
      8ZaC++tV/NX3Jk7dlaFTbArAMDzisTCau0rf7wGCwSDy+XxbViDTNHH58mXXo1g6ncaVK1dc
      +faLooh6vY6VlRXUarVjOw+2gnxEUbTF/RqGgUajYdv3JBIJyLJ84pmk81UVH3+9g7++MQmf
      2FvOkG6wKYBaq6JpmGAFcSBOyVqHYW6JRCJtfT6bzYJlWVcKwzAMgsEgms0mKKXHXiowDIPJ
      yUlomoadnZ0D91RVRblcxosXL2x/c+bMGZw5c+ZYz3Sirpn4u8828K/eHUM6Ip9Yu6eJbZUj
      ByMI+TLI5k0QAK/qNLEsGJYFnmMBsGj9fr2anVhVVYyNjbUlXz6fb8tGL0kSdF13PbKKongi
      aVFYlsXly5dtI30oFMLo6KgtDppSitu3b4PjOHz/+9/v6NnAnrnzf32xiWvzMZwd7yy+uZvY
      rUDEhD8YRmNr23azXCoAvARiqCBgAcuCHIwgHg3tp/voJQKBALLZLCRJci3b3Nwcnj175npU
      B/aWTSzLunrGysoKTNOE3+/v+Pu6c+cO5ubmbCfKDx48wMzMzIHRnlKKRCJxIr8TBfDJ3S0E
      ZRF/ci6NPtrz2rApQDnzAi/KdfhlEQaAV8cpSZKQLysI+iWwAHTT2Ius53nXHeC0WV9fx+Li
      YtuyuVUASZKwtraGZrMJWX7zMmB2dhbZbLbjvP4tvyKn7/3KlSv7vkItarUaFEXB3Nxcx7/T
      o4yCF/kGfvLPF8C5DD7vVWwKEJuYBvErkEUCpVRDIv7HeF/Z58eIIEPgGFCGA8cy+8fyLMv2
      XI2w1qhXLpdd2b9N08Tt27cRj8dhGMYbOwqlFOFwGD6fD5IkuX7/fD6P8fHxjpZBlmXBsixb
      bbZsNotisYhwOHzgeuusghDS0e+kmwQf/2ETP74+CY6hPfebt4tNARiWRzIRg2XsolhSDygA
      L4jge/9w7wCWZbk+1eV5HjMzM65/1FKphEwmA13XoSiKKxOjpml48eIFkslkx6laSqWSLbIs
      nU6jXq875kJqzVQti9Bx+PxxAfMjwZ53cXCL4xBXzmeRySoYGe2dhFLHZWdnpy23A8uykM1m
      XX02FArBNE3EYjHXKU6i0SguXLjQkScosDf7RCIRxxPozz77DPfv37ddn5qawvj4+LE7f7mu
      4+vnFfzZxePHMvcajmddlmVC2VXA8yLGR/v7ZdPpNN555x3Xn9c0DfPz867W/6IoYnFxETzP
      u7YC8TyPZrOJSqXSUZE8lmURjUZtJ8EAcPbsWZw7d+7IvzsOlFL8+u4O/uRcEn6p349I/4jt
      2zANDZmtLeTyJYz0eecH9qoyLi8v264XCgU8fvzY1nHn5+ddpy6nlOKrr77Cb3/7W9dnB41G
      40RqKlNKUavVUK/XHe8dnsVa+6HjpmJZziho6gTX5jrLaNdr2IcDSjE+NYsL52ZRLnaWw74X
      qFarjiGR2WwWuVzOpgBPnz7F06dPXY3oDMPgypUr+4EubvD5fKCUIhAIuHuB12AYhuNzLcuy
      +fzU63Xcvn37WL5AddXEP97L4i+/Ow6uz1wd3oRtLuNFGamUDMvYxeaWimSid7O+uWFpackx
      IL5er6NcLts6ejQaxdjYmOszAF3XwXGc6w2toiiglGJ3d7ejpL3ZbBaGYThakpzOPRiGASEE
      fn97aW0opfjNgzyuzEY6TkPYizguCHNba3iymsfoRP9Pd60EUq/661NKMT4+jnQ6beso7eTU
      aTmk+Xw+x6WIE6Ioguf5jnMUjY6OYnR01LbUOcrlgVIKWZZx//79tlw9dip7SWivn+2NGOOT
      xlEBDENHoVgGz/efc9NhIpEIUqnUgZGv0WjsL39enQEsay8Wop3RXxRFpNNp1xthRVGws7Nz
      IqGJuVwOo6OjB65RSvHrX/8aT58+PXA9GAzC7/fDNE3k83lX7RNC8X/v7uDPL45AEvq/Lzjh
      HBGmGoin+n/0B/bcAg6PkoFAAKOjo9jZ2TnQaTmOw/b2tusDKp/Pt7+0cFv0LhQKgWXZjvYA
      lFKUSqX9IJfDzMzMOJo6Y7EYUqmU643wyrYClmGwNNm/vj5vwlEBYskULF3DyTrOnj6maeJH
      P/oRPvzwQ9u9UqmEmzdvHlgC5XK5/fJFbmEYBrquIxaLuZo5WucGnWJZFiYnJ7GwsGC79+23
      3zqefVBKXScIo5Tii8dF/LMLKbD97OzzBpyNwhQgVu+kFD8uz549w8cff4ytrS3bvVAohEwm
      c+BatVpFMpncT/b7JiilkCSprfW8aZrw+XwdnQK3imwQQhwP4N577z1cu3bNdr0VSO+GbFWD
      ahBMJvonF+xxcFSAUrmMYi6HfleBs2fPYmJiwjFjw+joqG2ZcObMGYTDYVy7ds3VgZFlWWAY
      BtFo1PUBk2EY+96jncDzPCqVii34fW1tDZlMxvE0WxRF1zHBf3hawrW56MCZPQ/j+CuEgz6E
      kykMwrZHEATb0mRnZweffvqprfMwDIO1tbV9U+WbME0T6+vrWF9fd32wFY1G4fP5Oi7akc/n
      0Ww2bYqUTCYxOTnpuMwyDMPVezV1C6vbNVye7Y2yUm8TRwWoqyqUYrnvZwBgLxj8sJNayzJE
      CLF1iEgkgrW1NddtT0xMgGVZR5eEw1BKsb29fSJp2pPJJHK5nG12KxQKCAQCjmWhCCGOibQO
      8816BQujwb4McWwXRwWQRQGp0TEcnvwsU8P6iwwKuR1k8wWUSyVUdnv7tLjlrfkqoijCMAzc
      uHHjwOxgGAYKhYLrkbL1NwzDnHomBMuy8P7779vKICWTSWQyGdu+J5vNIhgMvtH/iLzM2//e
      wmBYAd+Eo0mAYYBdRbEpQDFfgK5rCASi4GFht1JGcnyqZ0skAXtrfVVVD8hWr9cRi8Xw5MkT
      vP/++/vLiFwuh2KxiMuXL0OW3afulmUZgUDAlfk0mUzio48+ws2bNztKjbKzswNFURAIBA68
      myRJEEURuVzugEPczMwMnj9/jmQy+drfaS1XhyxymB0d/OUP4KAAu/kM7txfRTSasplB02MT
      iGgaLEMDYX0IhaIgxOrZEkmU7gVsMAxz4PSzUCjg2bNn4DgOuq7vd/R0Oo0f/vCH4HnelbWE
      UgqWZZFOp1GtVh1Llh5GkiR88MEHSCaTHSXHSiaTePbsGQqFAiYmJg7IJEkSotHogfYppVAU
      BYVC4chzAEopbn27he8sxPqivNJJYFsCyYEwpifHwXPOo58kSfAHwwj6fRBF4di+5adBa+Q/
      LOPIyAhu3LjhaBH5/PPP8dFHH7la0wN7meGePHniavYjhOCTTz450oenHXiex/Xr13H58mXb
      PUVRHNt/U600pWkiW9WwODa4B1+HsSkAIQSCKCEWi9qWQP0GIQQPHjywbRQZZi+Uc3p62rbW
      HxkZQTAYdGWmbOX6dOs+wbIsPvjgA+zu7naUsbqV6fmTTz7Bl19+absfiURs75zNZhEOh19b
      m+zOszIuz0Qg8v0d59sO9hkgGMHimTNYmJ/pezOo3+/H2bNnHb0uX7x4gUKhYOu429vbbdXX
      nZiYQLVadW3WJISAYRiUSiXXzzgMwzCYmprad+l4lVa+ocMKLMsy4vH4kUXDDZPgm/Uqrs4N
      x9q/xeCE9hzB5uamY54fpzKilmVhbGxs/xzAzaheqVTAMAxUVXW1HEyn00gmkx1bjUzTRLlc
      xtLS0oHrmqY5WqUURUEul0M0GnXcfK/u1JAKS4h2sWBdNxj4ua5ardrSBwJ7G+H79+/jzp07
      B65vbm5C0zTXZlDTNCFJkus9QyaTwZ07d1w7zx0Fx3Hw+Xy2mcSyLGxvb9t8fhKJBOLxuKOS
      UkrxT09KA+vy/DoGWgEePXqESCTi6Bu/uLiIixcvHigl1PLSjMVirl0VlpaWcObMGdfZ5KLR
      KLLZbMdWFsuyUCqVbIoUCASQz+dtRUF8Ph9M03RceuWqGhqaienUYPv9ODHQS6ClpSXs7u7a
      3BRaJsFMJnMgO0Nr6dDO8mRlZQXAXsdzc8JbqVQQi8WQzWY7KpPE8zw++OADx/3N+++/7xjU
      UyqVHK1Vd9cquDo7+H4/Tgz0DMAwDAzDsG1QWZbF1tYWVldXbUsdWZbx8OFD10ugZDIJRVFc
      R5GFQiEEg8GOq0Sapom7d+86ziTlctlx2Tc6OmpLx2IRiscZBUuTbz7DGEQGWgFUVcXU1JTj
      iD41NYWrV6/aljosy7aVQ79SqeDJkyeuzZqKoiAej6NQKLh+hhOGYWB+ft6mqNVqFZFIxNHc
      ubGxgXv37h24tl1uQhJYxAJ9lvHshBhoBZBlGWNjY46doVgsolKp2Dpis9lEKpVytQwyDAO5
      XM6xWvtR1Ot13Lt3z3UiraNouTsczvKQzWaxurrquIeRJMl2CrycUXCpx2r3niYDrQCNRgO/
      +tWvHLOkcRyHubk5m0lQFEU8evTI1RJIEARMTk5CEATXHp6yLKNUKjmGMrYDpRTFYtEWjD81
      NYXz5887yn/37t0DlWMIoXiyNbzLH2DAFcDv9yOdTkNRFNu9ZrPp2GlDodB+BUY3GIYBy7Jc
      hRq2EglfunTpgP/OcSiVSo5hmJRSrK6u2tyem80mbty4genp6f1reUUDxzJDu/wBBlwBgL2R
      /tKlS7bryWQSDx48sI2UkiShWCy63gQLggDTNF2bNRmGgSzLHTsOtkIqnYrhhUIhm3Wo5RP1
      qkHg0cYuzk/1ZgX302KgFaAVBO6UDS2bzWJra+tAR6eUYnNzE6Ojo64VoBUT7GYGaJVIun//
      PjY2Nty/yCFaNcIIIbYUJ616AYez4ZXLZdy7d29/s04IxaPMLs4N8fIHaPMcQNeaUA0CiWdA
      GR48x4FSciIRTm+Dra0tCIKzx+rs7KzNQrSysoKZmRk8evQIhmG8sVOXSiXcuXMHhBDMzMzA
      53tzyvBgMIiJiYm2llmHYRgGMzMzyGazRz7z8BIrHo/j3Llz+2bQoqKBZRjEBzDbWzu0pQCU
      EFQqVQRkERQEzXoTsdQIwuHwfiBGLxEIBLC+vo6xsTGbbBzHoVarQZKkfSWYn5/H06dPMTU1
      5SptYTAY3Hecc1v3q5WhzTTNjr4vQgjC4TAikYitnVbuocPXK5UKHj9+jGvXruHRVhGXZuM9
      GcR0mrSlAKZpgVgWTMsAGA6yLMEwTKiqul8qqZeIxWL48OpVWIGAzU4/MTaGyVjswAGWIAg4
      t7gIxjBc2fVFUcSFCxfA1euwRNHV36iqCo7jEIlEOnKJBoDLs7OO73ZpZsbxuqZpKJfL0HQd
      jzYq+OsPpjqWod9paw/gDwQxPTWBdGoEqVQKyfQIouGALcVgLyE9fOh8Q1Uhrq7aLjO1GoT1
      9ZN5htNnX5ZScus8d5znOl1vFdSYnZ1FcVcDpUA82JtL19OkLQVgXm6wGJYFewy/GY+9YnW3
      b992nXnipMhms/uHfg82qjg3OdzWnxYDbQXqNVoxxD/4wQ/acrc4CVKpFGZnZ1Gv17GcUXBh
      aritPy08BThFKKVYXl5Go9E49aDzZrOJO3fuIJOrghCKRKi3DBbdord2rQMOy7L48MMPQQg5
      9QwagUAAV69exf/+7X1c+d6Mt/x5iTcDnDIsyyKwutqVDlitVtFgAjg/5Idfr+LNAF2Ac/BN
      Og02tvNQmzpGo72byua08RRgiJDiU7gaZsEOYeTXUXhLoCFhZyeLTz79HHNJb/R/FU8BhgTB
      H0FsbB5+3l3o5rDgKcCQcHd1BxMhglQHCXkHEU8BhgBKKR5tVJAIcgciwjw8BRgKyjUdjBjE
      bmGr44Rcg4ZnBRoC7m/s4sJ0BDUr1lFNgkHEmwEGHEIpHm3u4uJ0GMlksudqOHSbtmaAZl1B
      abcBWQAIw0PmeRCWQyTknHHYo/uUazoIoYj5eezu7mJubq7bIvUUbSkAx/MIBvwglgmGWijk
      cxiZmuvpEkk8x0EQBHueHNOEwPOgh2UWBAg8D7h8l1ZlnHbenWXZE/mujmrn1Xd+vFLG5bk4
      ms0mzp0717O/U7doSwE0VYWmE/gkDoSRMT45DcsyerZEEgBwluWYtpAxDDAO2RxYwwDayPIA
      ALxltfV5jpAT8QY9qp3WOxNK8e1aCT++PolgUMTy8jIAnEil+kGhLQUIRWIYnuI5/U9J2Vv+
      JMMSKKXY2dkBwzAHcgMNO94meIC5v1HFxek/BvfH4/GOk/IOGp4CDCgt68/5l5Ff2WwWhmGg
      Uql0WbLewlOAAaWk6GDAIBHa2/D6/f620rgPC95B2IDy7YvqgbhfRVFw7do1jI2NdVGq3sOb
      AQaUZ9na/vIH2EvHsrKygkwm00Wpeg9PAQaUdETeX/4Ae0l0WZbFeps5jwYdbwk0gBgmwaWF
      g6kdGYbBhQsXei57X7fxZoABw7QIHm8pmDlU8bFVN8ApU/Yw4ynAgLGyXdtzf3bIOlEoFFAs
      FrsgVe/iKcAAQSnF7SclTCScU6ZLkuRYL22Y8RRggCjVdChNA3PpgOP9SqWCVYeEwMOMtyMa
      ECil+PJJCe8uxMDsOp/2LiwsdFydctDwZoABwbQoHm7u4spM9MjPaJqGWq12ilL1Pm1XiLEo
      BUMJKLOXIh2AY01aj9Pl/kYVCyNBBOSjf1JZlnu2jkO3aK9GmK6i1jRADBWUYUAME75wFIlo
      GBzH9WQ8AMswezUNDltFXtY6OCwzc8T1o6CUgmGYtt6dAU7ku2q1QynFV6tl/OvvToDjOMd3
      JoQgnU63Leug015EGMfBNBp7xTEAELJX5aRVmbAnMw4fVcjjiOvMMQp/MC//rl2ZOuZlO9sV
      FYRSTCYDB66/+ozl5WV88803uH79em/+Tl2iLQUghMLvkyFLAijDgWNZUEqg6/qecpjm25Lz
      2BBCHMsRMZYFy7JsMrOWBdbh+mufQWlbnxfb/Pzr2jEMA58v5/Cdhfh+m07vnE6nkUwmQQjp
      yd+pW7S1eBclGaFQEIIoQRR4cBzrHa13GVW3sLpVw6WZ11e1jEajYBgGL168OCXJ+gOv9/Y5
      99arODcVhsi/eSyLxWInUpxvkPDMN33M3ua3hO+dibv6fKVScVXMe5jwZoA+hlLAL/FIht+c
      5qTZbOLixYsQBK806qt4M0CfQimFYRF88I67apOUUvzhD3/A119//ZYl6y88BehDKKW4vVrG
      TlnF0oQ71wa/349EIuFlhTiEpwB9yHZZxWfLBSTDUls2/Wq1ClH0yqO+iqcAfYZmWPj7zzfx
      b747/lq3h6PY3t5+C1L1L54C9BGUUnz05RYuz0SwMNp+QmK/3+/NAIfwrEB9xJf9pcoAAAYM
      SURBVO3VMhq6hQ/Pp47197FYzMsLeghvBugTtspNfLZcwI+vTxy7zOmdO3fw5MmTE5asv/EU
      oA/QDAt///u9dX/Id3w7/sTEBJaWlk5Qsv7HU4AehlKKbEXF3322gUszEcyPOIc6ukUURayt
      rZ2McAOCtwfoQRqaiYcbu7j9tAyWAd6bj+Hd+VjHbszZbNarEXaIYylAuVTYK5Ek8CBgEAp2
      NjINHRTQTQLTIjCsvRNd3SRQGiburVeQKTbxzngIf/W9cYxE5f3Iu045f/78iRTmGCSOoQAU
      YDiwsJDbzmN0Zh5+vx88z4MQcvISdgqljnKxlDreY464fpxnHEVB0fBfP14FyzLgWQY8x0Lg
      WQQkDucmQvjL74xBaHl3UgpyVBjjEc+lR1wvFAqQZbk3f6cucQwFYMCCgLACRicmYekqGg0O
      Pp+vN23ML8MD7ZcZx3tHXT/OM44iERLxX/70zMvQxQ5G99e82+Hru7u7oJQiHo97MdyvcKwl
      UCTmzgHLwxmG2Rv1TxNJktBsNrG+vo6ZmZlTfXYv422ChwRRFLG4uIh0Ot1tUXoKby4cIh4+
      fIj79+93W4yewpsBhojt7W0vhvsQ3rcxJJRKJbz33nuIRF4fPD9seEugISEajaLRaGBycrLb
      ovQUngIMCeVyGYlEAoVCodui9BQMIYTeunWrY9tw65hekiTH08Z2r/t8PjSbzY7bkXgemkMi
      KL/Ph2a9DnrovVmGAceyMA6lD+E4DgzDOCaVOuoZR77DEZ9v9938koRGG+/cbvutAPrDpVV5
      ngel1DHFStd+52O2v68AvcZRL9Qv7Z/GM952+60com8zl1C3v6Oe3QS/7c55Gj4x/f4Op5FE
      q9vfUdcVQKmW0DSAVDIOBoBS3QXLM2B5CabahOQPwlBrKCsNCAwFw0tIp9yfRFPLwPb2NgLR
      EUSCEna2NhGIxEFMA8Q0wMt+BH0SctksTAJQYiE9PgmRc+eiYJk6cjs5hJJpBGUR62trSMSD
      UBoAqIlkMgHTskBNHcVKDSIPgJMw4vIddislKE0DDNEg+iJIxiPIb23AF0sju72DWFiG5A+D
      AvAJLLK5LMDJsEwTk5PjeONbUIJCIQ+LMNDVOiLpCYR9IsqFLBgpBI7oEH0BWKYBSRSQy+4A
      nAjTNDE2Pg7ehStHuZiHQRlo9RqSoxPwSQI219eQTCewU6wjGpAgSxI4nw/1cgmqYcDUdAQi
      ccQibw791Jp15PIlhKJh1GpNTI6P7n131Sr8gQAoIWg0GwgEw2jWqlAaKkAsSP5Q9xVA13Q0
      VR2mGQXPMTAtE0ZThWpWEZD9sOo1CDyDeCyOZqP94g4ULCRJAujeaEYphVGvoFDTEPSHwFk1
      BH0SBMkHERQ8S2ESQGwjg7gcCCEg7a2X/bKAal0HR1nUawqylCKVSsGyTMTjMajNRlvy76Wd
      JxDEAED31vViIIRKbhuBcAiaWkejloEYm4RPAORAFLAMgOdAALh5DY4XEA1HoVR5hGQRAEWt
      3gA0E35JRk3JQQwFIYkCZH9477uUeBBCARcKwLIcosEAirqGeqMJnyQgFA5iJ1dFyM+jWimi
      YskYXZgAy7GIBsJo1HQQy20SXwaReBwcLMRfhnxSSmFaBqqVKgxNhyDzaKgaWIZFLBZBo6ED
      xOq+AsQSCbC7DVBiglAKTpAg8BwCvAhREABQqM06NK0BvyyC4eW22mdAQcBCFjlYFEimR8Hz
      HChbgixLMOlehmvT0BEMhaHpOoJCGw5qlELXVTSaInw+H6KJFCyLgAUgSiL8wSBEgUdDtdDQ
      dAR8IhjuzZncWhBCEAwEAEuD6A9C1034/QFIkgyWZdHkWYiSBEGSQU0VhqYiEglD1U1XnZ9S
      wDINqKqKQCgEy9TBcDxGxqcAaqFUKCKeSoMXOMAyoOsqwpEINE2H4NKfybJMqKoJSZIRDEgw
      LQp/MALJF9xLrc8LkEU/BABN04KqEfAchT98dLWbg+9AoDaakEQBht4EzzGglgHJF4KpNeDz
      xyCKHMCwqCtN6Cog8QxEf6R3N8EeHqeBdw7gMdR4CuAx1Px/CCdioZX8Yt0AAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='192' name='Others' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAbOElEQVR4nO3dV3vcRp7v8W9VIXVkpiRSVJaDbI/tSZ7dc31uznnVe7Fnd4LltWUrUVmk
      SDE2O6IBVP3PBUhKGitQGgXbqM/zUN3qiEbXD6gEtBIRwfMqKgDwGfCqKji4srq6ShzHH3JZ
      PO+9OwxAHMc0Go0PuSye997pD70Anvch+QB4leYD4FWaD4BXaT4AXqX5AHiV5gPgVZoPgFdp
      PgBepfkAeJXmA+BVmg+AV2k+AF6l+QB4leYD4FWaD4BXaT4AXqX5AHiV5gPgVZoPgFdpPgBe
      pfkAeJXmA+BVmg+AV2k+AF6l+QB4leYD4FWaD4BXaT4AXqX5AHiV5gPgVZoPgFdpPgBepfkA
      eJXmA+BVmg+AV2k+AF6l+QB4leYD4FWaD4BXaT4AXqX5AHiV5gPgVZoPgFdpPgBepfkAeJXm
      A+BVmg+AV2k+AF6l+QB4leYD4FWaD4BXaT4AXqX5AHiV5gPgVZoPgFdpPgBepfkAeJXmA+BV
      mg+AV2k+AF6l+QB4leYD4FWaD4BXaT4AXqX5AHiV5gPgVZoPgFdpPgBepfkAeJXmA+BVmg+A
      V2k+AF6l+QB4leYD4FWaD4BXaT4AXqX5AHiV5gPgVZoPgFdpPgBepfkAeJXmA+BVmg+AV2k+
      AF6l+QB4leYD4FWaD4BXaT4AXqX5AHiV5gPgVZoPgFdpPgBepfkAeJXmA+BVmg+AV2k+AF6l
      +QB4leYD4FWaD4BXaT4AXqX5AHiV5gPgVZoPgFdpPgBepfkAeJXmA+BVmg+AV2k+AF6l+QB4
      leYD4FWaD4BXaT4AXqX5AHiV5gPgVZoPgFdpPgBepfkAeJXmA+BVmg+AV2k+AF6l+QB4lZBn
      GSsP7rO9uYmIHN4efMBl8rx3TkTY2thgbXWFoigA6HW7LJ05gzHGB8D7bRIRBv0+D+/fYzQc
      0mg2OX/qNLs722ysrzMcDjh74SJKSmxtbdFoND70cnvevyzPcx6tPGR7c5MgCFg4ucTM3BxK
      KUSEvc4u9+/cAXwVyPuN6ezucP/uXWxRMDs/z8LiSYIwPLxfKcXk1DTJZ3XuLi/7PYD32+Gc
      4+oP36OU5uyFC9TqdZRSAIcN34P/A1hr/R7A++3odbvsbG+jtaa4UaCUwjmH1vrJpXXMzs+z
      uLTkG8Heb4eIcPPaVYbDIf/7//xfjDEvfNzjtTW+v/wtIuID4P36iQhXr1xhb3eXz373uxcW
      fiirQMcXFji+sOCrQN6vn7WWH767TBAETM/OMjM7d+TnGmP8SLD365WNx3z71//m3IWLaKWo
      NxrUX7MjxwfA+1Xq93p894+/89Uf/4RSivF4zOz8/Gu/jg+A96vT7/W49tOP/Pnf/xdhGLK1
      uYExhqnp6dd+LR8A71clzzKuXvmBP37zF5RSFHlOt9NhanoGY16/SesD4P1qiAjf/ePvfPmH
      Px4OaO1sb+OcY2bu6I3fp/kAeL8KIsLDB/f5+NJnxHF8eNv25ga1ep1Gs/lGr+sD4P0q7HU6
      7O3uMjE5eXhbv9cjTVNm516/8XvAB8D7xRunKTeuXeWLr74+vE1E2NrcQGvN1MzrN34P+AB4
      v2jOOX747jJ/+NOfn7nd2oK93V0mp6cJgvAFz365YTHwI8HeL5eI8P3lb7n0xe+emdIMsLNV
      Nn5n36DxKyIMbZ9/7PynD4D3y7V8/TonFhd/1sAtG7+bJLUajWbrtV5TRNjLd7m8+1/Mxyd8
      ALxfpof37xMEAcdPLPzsvkG/z2g0ZPHUqWfm979KJ7VsDIfcHlxlNj7DfHTOB8D75dna2KC7
      t8elL7545nYRYTgYcPfWMsYYpmdmj/yao9xxffchPX7kfPtTpsJTrPWcbwR7vyy9Xo8H9+5y
      6Ysvntm6iwij4ZDl69dAKc5//DFheLTGrxPh6s4mPa5wofURZ5unyQpFK9J+D+D9cqSjEVev
      /MCf/vJvPyv8e7u73Ltzm6RW49yFi0T7g2GvIiIs7/bZLP7B2dZZlurn2BnB2ApzdX9E2Acn
      IjjnGA2HDAd9mq32M8eyVkVRFPzPt9/yx2++QesnFRMRYX3tEWurq0RJjZPnP2EkisHIkgSK
      OFDol6yr9UHOrcHfWGzOcrpxnn6m6GeOiVjTjJQPwPt2UODT0Yhed49et8dwMMDa4vAxM7Nz
      LJw8SRhFH3BJ3x/nXDnH5/e/JwhDRAQr0B9bHq1vsL2zR9w6Tntuno2RAE/O7GYUJIGiHmpq
      ocKoJwe+9zPLD7tXmEoMS7WL5EXMzshSDxXTNY1SPgDvjYgwTlPW1x7R7XTKs5QpRRRFTExN
      0mq1qTUabD1+zPbWJp3dHY4tLDB/7PgzW8TfGhHhynff8dEnn5DUagxzRyd1bA0Ktve6ZGlB
      c2KeqNlkkCtC4wi1QimYTDTWQVoIg9wCEBkItSJ3wrXdFazuU5dP6QybKGUJNczVzWFI/GlR
      3oPxeMz6o1V2trZAKSanpmi3J2g0m8RJ8rPqzqDf59HKQ3rdLkmSsHjqNO2JiV9ktehgj2at
      BRHCKHqt5bz204+0JmdQ7Tk2BwWZFUKtoL9F3nnM2dNLzO6f1OppuRUe7z9+umaIjWJUCKNc
      KJxwv9ehy2XO1i9xrHaCQCsCragFCqOfvJbfA7xDRZ6z8fgxG4/XEeeYmpnh+MIiSZK89HmN
      ZpMLH39CZ2eH1ZWH3L55g4nJSU6fO08QfLiv7KAbcjgcME7HZOMx43FKnmUURXkakhMnT3Ls
      +IlXhkBEWNnY5UEaM6uniEeWmZqhHWsCN+bm6hozE+3nFn6A0ChOtsvq0tbQsjuyJIHmeNOw
      0kvZ4+9cnFjifPM4oX7xOvN7gHfAWVsW/PU1iqJgYnKShZNL1Or1134tWxRsPH7M+qNVJqen
      OXPu/AfZExycTuTRykMAtNYEQUgUx8RJTBwn9Ps9up0OM7NzLJ0+jX7O2RmcCJtDy/KDdQAW
      jh+jFSlasSY25ee6deM6g/6ATz//nPgVG4unl29YCBuDnKu9/2ap2eBC6xPqwcunSfs9wFtm
      reXO8k163S7NVosTi4s0W+03LrQmCDixuIi1lo31NaanZ5iYmnrLS/1yIsLO9haPVh4ehjmM
      Iowxz3wu5xyPVh6ysb7OeJxy9vyFw4Z84YT1fkEndaT9LqPNVT7/+vfM1AMi8+Q1tjc36XW7
      LC6dOnLhh7LhG5uCHfctx+qGxfrpVxZ+8AF4q5xzXPvxCneWl5mankZpzdrqIyanRrQnJ4nj
      +I2DcGJxkc7uDg/v36PZbr/03DdvW7/X4+G9ezSaTc6cP//CQw+11ocFd+XBA25cu8qZ8xfZ
      dRFpLoRGEdgxew9u8pe/fEMzfjZAeZ6zuvKQWr3O3LFjR14+EaGbd/i+83fa4STHa4tMR0cb
      JfZVoLfgYG76tStXGPT7/O7r37OwtASUDeDd7W06u7uk6ehJ74NSh39a68PLOKkxNT1NrV4n
      +qcGZbfT4dbNG8wdO87J15wH86YORl+NMVz89BLREbpmRYS9vS7X767Q1w0W5iap1RpYW7By
      9Vv+/d++IfqnUVwR4cHdu2xvb/Hxp5eOfISXE8e9wS3uDZZZSE6xUF+iFRy9w8AH4F/gnGP1
      wQPWHq2Wp9kzhvnjJzh5+vSRvgBxDieCiEOkbDuMRiM6u7sMBwPyPENEUChqjTpz88fo7Oyw
      u7PNR5cu0XzNmZCvK8sylq9fwxYFFz/59LltGBHBCRQOMiuMrdDPHBuDgkgJg53H2HzM7ESL
      vbX7fPn1l9TrPy9nvW6X5evXmJ0/xtIR1p+IMHYpP+5dZlQMONv4iOO1RQL9escG+CrQGxqn
      KVe+/x8Wl5Y4e/4CD+/fY2p6+rVmKCqtKSsy+9WZMCROEib/qY4vIgyHAx6vrdPZ2WZtdZXB
      YMAf/vzNOxs1trbg7q1l8izj3MWPqNXriAiZLQt6ZoXcCbkVClcOTTkRemOH0YqzkyG1UBPM
      LrF6/w4/Xf5/HF9YIB2OSJLaM2Mbzjke3r9HGEYsnDx5pMK/nW1wpfMtrWCCLyb/yEQ49Ubr
      we8B3oCIcPlvf+Xzr75mNBhw9/Ytmq0W5y5+9F7q5ttbm1z/6UecExrNJmEQMjM3y9yx40ee
      IPYyzjnu3blNZ2eH02fPMTM3R+GEzYFlc2gpnKAAFCCgFGilSALFQiugGZWFO8syHt67x+7O
      DjNzs6TDEaPRkHqjwYnFRdoTkyilWFtdZW11hbPnLzA1M/PC5RIR+kWXe4NbrI0ecq75Maca
      54j00eYFPY8PwBu4vXyTZqtFvd7g9s0bxEnChY8/eSuF7yhEhDvLN+l2u3z62eeEUcTWxgaP
      19dwzpEkCScWT77R4Jm1lkcPH7K58ZgTi4vMn1hka2hZ7RWIwIlWwESsywat5mfzcESEzv7E
      NWMMp86cYWJy6vBU5dubGzxeWyPLMlrtCWbn57l/5zbNdpvzFz967vKKCLnkrA7vcat/jYlw
      mgvNT5iKZv/lvZ8PwGvq7OzwaHWVsxcusHztGtpoLn7y6eGpOt6XbDzm6pUfqNUbfPTpp8/8
      EMRoOCynXOztHf4sEAJhFGJMUJ4XPwj2j6gqR6ON1uxsl7+fNc7GxBOz1OaW6I4doVFMJprZ
      uiEJ9OH7FEVBnucUec44TcszN+x1mJya4vTZcy8ctLPWsrXxmPVHj7DWoo3hk88+f+4AYe4y
      Vof3uT24QahCLrW/Yiqexai3s6f1AXgNRVFw+W9/5es//Zlb16+T5RkfvaBx+D5srK+z8uA+
      p86cfeV5MUUEay22KChsgS0so+GQvb0Oj1ZWGPb75HmO1CaozZzAjUdEgQIpJ5s1Is3TG1sR
      IQgCoigiCEOSpEar3abZah15q5xnGZsbj6nV6j+r+mRuzPpolVv9a4Qq5HTjAvPJCRJTe+31
      9DI+AEckIvzw3WUufPQx25ubbG1ucPbCxTc6H+XbXKabV6+SpiPOXfyIVrt95OcWec7mxmM2
      Hz8upzEkTVR7ntmpSQKjGOZCbBQzdX241X/XRBy9/Tr+1nidWNc4WT/DfHKCmnk3GxkfgCN6
      eP8eItBoNrh/5w5zx45x8tTRujvfpTQdcevGDfIsY3HpFHPHjr10mQ4OLnl4/x55nhM3WrjW
      PEmjRS3UZBa0golYM5Hol861f1syl/E4XeXB4A6pHTETz3EsWWQqmibWtXe6jn036BEMBwO2
      t8oBmpvXrlJvNFg4ufTBCz9AktT4+NJn3L9zm5UH9xkM+pw6c/a5vVF5nrPy4D6729vEtTr1
      +dPkQYNmZBDAOphKNK1YE+h3+9lEhEHR53b/OtvZBrFOOJ4sMh3P0Q4n31od/1V8AF7BOcdP
      P3zPl7//A7eXl0Epzpw7/16nIrxKGIacu/gRa6srPF5bIx2NOHvh4mGj8slW/z5FkWMm5sna
      x6iFAY393pyJRNMI9TNThd8FK5bdbJtbvasM7YCpcIZP218yGU2TvOOt/fP4KtBLiAjXfrzC
      iYVFer0uWxsbnDl/gemX9FV/SCLC7s42D+/dQynF6XPnqTcarD54wM72FoWJYXqJWr1JIypn
      X5YFX73zgpe7jLXRCncHNxER5pMTHE8WaYeTrz16+zb5PcBLPLh3l3qjnJOytbHB7Pz8B230
      vopSiumZWWq1OnduLXNn+SbGBIwLR1qbpz59jMlaQC3UTCaaWvBuCv5Bv31qh3TzDpvpOp18
      h1BHLNXPMRcfoxG00OrDH+nmA/ACj9fXGA2HnDl3nhvXrlKvN1hcej8T0N6EEyG3ltxaxiK0
      Fk9y5959xi5GTcxzfKJOM9LMNw2NUL+VzyEiOByFy8ldxsiO2M222M42GNkhALFOmIpm+KT2
      u/fSqH1dPgDPsdfpsLa6yudffsWtG9dBhNPnzmGMwYmQWUtWFBTO0Ypjwg/QHhAR7uxsc2V9
      jd3hkMwWOAe506ASjrenGdBkL+3C6Da3d1R5MHi9zlStzkSSEAcBRmsCrQm0IdD68P/7sxyA
      csalIFjKrXpqh4xcn5HtMbQDRkVKZi3WOVrBJJPhDCfCUzTDJo2wQWxCjNL8En+T0bcB/slo
      OOSnH77n8y+/4t6d23QHA6YXTlCfmCTNc9KiwIo7fLxWiqlajelag+Q9HK7YGY34fm2V29vb
      1IKQyVoTVEIYJNTCGrFRREYRB5pmZGhFGkXBXpqyOxqy1uuyMxzSG4+xzmFFQISDcy0YpcrC
      rxxOHI4Cq3vU6iOS2LHbLxiOQUtMQIwiQGEwhBgVEqoQozVaaZIgIDIBoTFExpCEIUYpIhMQ
      GUMcBARGExpDoPT+8xRGl41xozRREBAaTajNv7bnEEFcDkUKxRjGXdh76APwtDzLuPz3v/Hx
      pUvcvHeXtfEIF2TUGhMEYZ3AhGilqAUhU7Ua9Sgis5b+eAxAO06YrTeoheFb2807EXaGQ1b2
      OixvbtIbp8w2JgiDJklYp5XUaUWGQIPZP+i7EemfHfz9NBEpt+jOkbmc1KYM8yF7WZed8Q7d
      vEMmaXkQeRgzFU3TMtM0gjaxrmEI0MqgldqfCFdu2RWQHVTDbMEwyxjtbzSGWUY/Gx/enxUF
      mbWHexkFh6EwuizwoRYCBYEujwFOAk07CkkCTRKU9ysshgJDRiAZASlIBs5CkcGoC4NO+Zf2
      oOiDzUEbSCZ8AGB/mkCR8rf//A+mTrRZ3tpiXAyYj3o0dIoKAgjruKCBC2qMnKJrLcPCUY+m
      qIVtxoUQaEgCzUSUsNCaZjpuEWpTTpc8CIRSsL/VxTlwDuUczlk6acpamrI+GrE3HDBIR6RF
      gTEBrfoE9XiCWlQW+nZs9s908NR5cV5S6J04xjZlZIfs5TvsZFsMih5WLE5ceUihjqkHLdrB
      BM2gTSNokpgaRgU/D7QIggOxcHD59B8OpEDEghTgcsCClLcjFusKcptRFGOKYkCaDRhmOWlh
      GRUFmXUUzqKQ8hw+SqGwOBFiAw0DDZUz6nUZdLq48ZjZQCgsbOUhO1IjJ8CaBBVE6FCjkgQV
      RwRaMFJUMwAigrMp2XCL3s41uts3WNneJR3ukQUGrQuiep1Uh3SdY5zugCtQUYtILEm6Q0sb
      2vEkezanhyKTmK4YMDMkehrCkHnV4KJucMrE1I1BK4NSBkEQW7CTW5at5ZGzpIMB9TxnMgho
      RwmBiditTZImLWbGKU0lNIxCJTFhHJLEIUkSYqIAGyisAqcFq8DicDhyKRjIkO1sk36+RyFF
      eXCNSZgKJ2maBomOiHRArAKMUmgRnhTUvCy4brxfaDNwY8SOQMZPFXgHuKfXMOU2fZ8KQJny
      D/2c6yHK1CibpAaknINUjs4V4ArIR5B2kcE2btxF0j6SDVFKY5JJxtEUA+oMJSIlZqwb7NmE
      rXHA9kgYZI7COpwF5wStFA6pRgDKAj8mT3cYdO7Q3fqRXn+TzUyxPWyyZyfRTUs/W8cGiolm
      nTbCqajOufocbQe1UYYZjdGFAx0hYY08ABvmiLGIjHEuI3VjOtmQ3SJn4IRRUUCREdghgR0T
      Ydi1IfeyOu0ooF2bwDROIfECKmygtcGYiFqc0AoNde2oB2G5y8/6yKDDON1jnHYpXE7PjNlr
      OAotBLkjHoMWwRqLCy06EprK0FKGOkKCEBpdHpCiyrKGuLLeb/YLptagNGBAh6Ci/csQpSPQ
      NdAx6Ki8TYWgg7KgY8rnCuUeTlxZ5bA5ZIOy7p3uIWmnvJ6n5FlKnmfYYr/dIYKzlsIpCgdj
      C2MJKUwDG7bITZ2RCxm5iIENGUrCmBirQkRpRMq2WT0JaNUj2vWYODREoSEODbU4II4Cktj8
      NgIg4hBnEbE4l2GzAfm4w6i/yqi7QjrcJM9HdHKhpybYGDfY2OszHmzRbFjmJiLmg4AzcZuT
      UZvmWBG4EFQCKkRMjKvVcM02rj6BjZtIXMeGEQWUR0Y5IbeOzDqywpHmGf1hn63eLhuDLpGG
      pbomcxkjKQvYnBqRuA69oktW9FBZD7Ie+X71QoIx4zjCJTXq9QaBy7DpEOWElhGaYUDdxEQq
      IBTQhaCcI1AapWOcDhEVELiAMA+JigTjQlRhUM6As4iU8/zF1FCmRhDWCIIA0QWiCiwWJwVW
      coSySiNSbp6tAEpwlCPmhRVcPkTGPbIsI89y0qxgkMEg1/QlYiQJKTEjqVGoGIfBEeAIUNqg
      KMczAi3EJij3mCZETEgQRURJRJKEJGFAGCjig71hHBLFAVGoCYxCKUGUMHaOcVEwspa0yMjz
      Mc7lZXlx9u0EoNO5w/aj/yrrtW+TuMM/QcovTBn6+hjWOcQOkXyA2BHGZThX0O/1yZ0iswYV
      1AniJkrXAUM0HhGnu2iEhomYUg0KF5I7Q9+FDCShgyGLQlwQUCiNqBAxEWJCnDGItjgjCDkW
      Sy4WS4FzOc6NsZLhJCOSMe0wJ9IWoywai84sZAU6L9DWEYwdUWExhUM7R+ggtIJx4GzZFWlC
      MKGQhY4QB6IJcBhrSQPIjEZriMUyto7M5gwKx9BaMqtBAhCDcxEWg7C/Jd9vi4gIuXMoLIKg
      lCXAUShwCKHWZQ+O1jR0sN9FKlhRuIM/FAUBRhyBOGrOEYoQOkfkLIHkaGUJlQWlEFXupdR+
      47lQYLVGKYNLwIVCFitcpGG/a1ZTTtIzgFUKQWG0INpQqACrDAXlpVOaAo0Ti3EjlEsxLkNR
      oKSsIGoEJ/JkHCDPc9I0RWuNc2V97qjXR6M93HDj+b28/1ImnjxZQRkwFTGKa2S6Xv7EX3Rw
      ryIbCw+2dg6XjUJB+tSrySSKhf2GqAalUFpA71+KgAIloPKckLw8kkkZFAqFoCl7JsrrCoVD
      49BKoZVGqxqKOgoF4/JZ7P970BAWrVBGoSKwSmNR8PSiPjVCqg8a0AfVanlyHKLCYffb1Epr
      Qi1obYiVUNOaQJef56C3RinZ33o7rBT7b6UPVgUoe7Cicdj9Wv3+94xDq4OK+X41BYeTotyL
      UDamjVKIUhS6XG6ny96iAEWOEOxfRymUCEosscjhhs65DBFHIhbnCkCV1Zr9doRTquw/OFg/
      +0XA7JcX5fa7dQ9OOOBixEm5lyscyglayucpeUvjAAe7xPfp5++2XzCOuhj7/d0vfchTj/Xe
      o8OaxFON6Xc0ZeOtjNyUXWTveRbfi271ZfXX77Cwv9svUyn1Cxyb9rz3yAfAqzQfAK/SfAC8
      SvMB8CrNB8CrtMNuUK01WbZ/NuIX9Lm+6D7Z77d90X2v+3rv4r73/V7g18fTt8P7WR+v+xwl
      IvKqBx3lTeH5H9A598JfOXwXX8KL3u99vxe83S/8Tdbjmy7H2/7OXlU+Dn4n4W283ut+rp8F
      wPOq5P8DLGT8KoQoDzsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Predictions' width='192'>
      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
      ie0NAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='World Map' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
