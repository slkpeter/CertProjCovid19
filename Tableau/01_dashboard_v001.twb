<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.20.0415.1518                               -->
<workbook original-version='18.1' source-build='2019.2.11 (20192.20.0415.1518)' source-platform='win' version='18.1' xml:base='https://dub01.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='01_dashboard_v001' path='/t/aidacovid/workbooks' revision='1.7' site='aidacovid' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='Top 10 World + Germany' caption='Country Selection' datatype='string' name='[Measure to Show (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Top10_total_Germany&quot;'>
        <calculation class='tableau' formula='&quot;Top10_total_Germany&quot;' />
        <aliases>
          <alias key='&quot;Bottom10_Europe&quot;' value='Bottom 10 Europe' />
          <alias key='&quot;Bottom10_Europe_Germany&quot;' value='Bottom 10 Europe + Germany' />
          <alias key='&quot;specific&quot;' value='GER + USA + SWE + JPN' />
          <alias key='&quot;Top10_Europe_Germany&quot;' value='Top 10 Europe + Germany' />
          <alias key='&quot;Top10_Europe_total&quot;' value='Top10 Europe' />
          <alias key='&quot;Top10_total&quot;' value='Top 10 World' />
          <alias key='&quot;Top10_total_Germany&quot;' value='Top 10 World + Germany' />
        </aliases>
        <members>
          <member value='&quot;Germany&quot;' />
          <member alias='Top10 Europe' value='&quot;Top10_Europe_total&quot;' />
          <member alias='Top 10 Europe + Germany' value='&quot;Top10_Europe_Germany&quot;' />
          <member alias='Bottom 10 Europe' value='&quot;Bottom10_Europe&quot;' />
          <member alias='Bottom 10 Europe + Germany' value='&quot;Bottom10_Europe_Germany&quot;' />
          <member alias='Top 10 World' value='&quot;Top10_total&quot;' />
          <member alias='Top 10 World + Germany' value='&quot;Top10_total_Germany&quot;' />
          <member alias='GER + USA + SWE + JPN' value='&quot;specific&quot;' />
        </members>
      </column>
      <column alias='New Cases' caption='Measure' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;new_cases&quot;'>
        <calculation class='tableau' formula='&quot;new_cases&quot;' />
        <aliases>
          <alias key='&quot;new_cases&quot;' value='New Cases' />
          <alias key='&quot;new_cases_per_million&quot;' value='New Cases (p.M)' />
          <alias key='&quot;new_deaths&quot;' value='New Deaths' />
          <alias key='&quot;new_deaths_per_million&quot;' value='New Deaths (p.M)' />
          <alias key='&quot;total_cases&quot;' value='Total Cases' />
          <alias key='&quot;total_cases_per_million&quot;' value='Total Cases (p.M)' />
          <alias key='&quot;total_deaths&quot;' value='Total Deaths' />
          <alias key='&quot;total_deaths_per_million&quot;' value='Totals Deaths (p.M)' />
        </aliases>
        <members>
          <member alias='New Cases' value='&quot;new_cases&quot;' />
          <member alias='Total Cases' value='&quot;total_cases&quot;' />
          <member alias='New Deaths' value='&quot;new_deaths&quot;' />
          <member alias='Total Deaths' value='&quot;total_deaths&quot;' />
          <member alias='New Cases (p.M)' value='&quot;new_cases_per_million&quot;' />
          <member alias='Total Cases (p.M)' value='&quot;total_cases_per_million&quot;' />
          <member alias='New Deaths (p.M)' value='&quot;new_deaths_per_million&quot;' />
          <member alias='Totals Deaths (p.M)' value='&quot;total_deaths_per_million&quot;' />
        </members>
      </column>
      <column alias='predict' caption='Prediction' datatype='date' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='#2020-11-16#'>
        <calculation class='tableau' formula='#2020-11-16#' />
        <aliases>
          <alias key='#2020-11-16#' value='predict' />
        </aliases>
        <members>
          <member alias='predict' value='#2020-11-16#' />
        </members>
      </column>
    </datasource>
    <datasource caption='[02] - Country Details' inline='true' name='federated.05u4i471ywr5a811qiskp1vheq6p' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='country_details' name='textscan.0fyx4i60ummtbt1gslc391146wdz'>
            <connection class='textscan' directory='C:/AIDA/CertProjCovid19/Tableau/Input' filename='country_details.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0fyx4i60ummtbt1gslc391146wdz' name='country_details.csv' table='[country_details#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='string' name='country' ordinal='1' />
            <column datatype='string' name='nuts_1' ordinal='2' />
            <column datatype='string' name='nuts_2' ordinal='3' />
            <column datatype='integer' name='Pop Total' ordinal='4' />
            <column datatype='real' name='cases/100k pop.' ordinal='5' />
            <column datatype='real' name='cases' ordinal='6' />
            <column datatype='real' name='deaths' ordinal='7' />
            <column datatype='datetime' name='datetime' ordinal='8' />
            <column datatype='real' name='new_cases' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nuts_1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[nuts_1]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>nuts_1</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nuts_2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[nuts_2]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>nuts_2</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pop Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pop Total]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>Pop Total</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases/100k pop.</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases/100k pop.]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>cases/100k pop.</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cases]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deaths]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>datetime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[datetime]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>datetime</remote-alias>
            <ordinal>8</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[country_details.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='JP-Departements' datatype='string' name='[Calculation_734086793217118210]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='tableau' formula='[nuts_2]' />
      </column>
      <column caption='max_cases_Bundesland' datatype='real' name='[Calculation_734086793298964485]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [nuts_1]: max([cases])}' />
      </column>
      <column caption='pop_Bundesländer' datatype='real' name='[Calculation_734086793304289287]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [nuts_1]: max([Calculation_734086793298964485])/max([cases/100k pop.])/10}' />
      </column>
      <column caption='max_JPN' datatype='real' name='[Calculation_734086793305341960]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Calculation_734086793217118210]: max([new_cases])}' />
      </column>
      <column caption='inc_per_1000_JPN' datatype='real' name='[Calculation_734086793306525705]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Calculation_734086793217118210]: max([Calculation_734086793305341960])/max([Pop Total])/1000}' />
      </column>
      <column caption='inc_per_GER' datatype='real' name='[Calculation_734086793306796042]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [nuts_1]: max([Calculation_734086793298964485])/max([Calculation_734086793304289287])/1000000}' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='datetime' name='[datetime]' role='dimension' type='ordinal' />
      <column datatype='string' name='[nuts_1]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[nuts_2]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal' />
      <column-instance column='[datetime]' derivation='Month' name='[mn:datetime:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_734086793217118210]' derivation='None' name='[none:Calculation_734086793217118210:nk]' pivot='key' type='nominal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[nuts_1]' derivation='None' name='[none:nuts_1:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (country,JP-Departements,MONTH(datetime))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:country:nk]' />
          <groupfilter function='level-members' level='[none:Calculation_734086793217118210:nk]' />
          <groupfilter function='level-members' level='[mn:datetime:ok]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='country, nuts_1'>
          <field>[country]</field>
          <field>[nuts_1]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.323077' measure-ordering='alphabetic' measure-percentage='0.509231' parameter-percentage='0.167692' rowDisplayCount='100000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:nuts_1:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Hamburg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thüringen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Baden-Württem­berg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rhein­land-Pfalz&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brandenburg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sachsen-Anhalt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kinki&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hessen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tohoku&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bremen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Schles­wig-Holstein&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nordrhein-Westfalen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Baden-Württemberg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rheinland-Pfalz&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niedersachsen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chubu&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Schleswig-Holstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kyushu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mecklenburg-Vor­pommern&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nordrhein-West­falen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Okinawa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hokkaido&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chugoku&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shikoku&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bayern&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saarland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mecklenburg-Vorpommern&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kanto&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Berlin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sachsen&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <filter class='categorical' column='[nuts_1]' filter-group='2'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[nuts_1]' />
          <groupfilter function='member' level='[nuts_1]' member='&quot;Repatriierte&quot;' />
        </groupfilter>
      </filter>
    </datasource>
    <datasource caption='[99] - Measures' inline='true' name='federated.1tqx0su0ika3du183um0b12cwg8m' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='measures' name='excel-direct.1ieujvi18vc1d117z40pn0ei6epy'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/AIDA/CertProjCovid19/Tableau/Input/measures.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1ieujvi18vc1d117z40pn0ei6epy' name='Tabelle1' table='[Tabelle1$]' type='table'>
          <columns gridOrigin='A1:C367:no:A1:C367:0' header='yes' outcome='2'>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='measure' ordinal='1' />
            <column datatype='string' name='type' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>measure</remote-name>
            <remote-type>130</remote-type>
            <local-name>[measure]</local-name>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias>measure</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDE_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDE_RDE_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Tabelle1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C367:no:A1:C367:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Event' datatype='real' datatype-customized='true' name='[Calculation_895371954195169286]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF NOT(ISNULL(MIN([measure])))&#13;&#10;THEN MIN([federated.0bdudug06c89yc164m65t1pbh640].[new_cases])+100&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.355982' measure-ordering='alphabetic' measure-percentage='0.322009' parameter-percentage='0.322009' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='federated.0bdudug06c89yc164m65t1pbh640'>
        <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[type]' filter-group='2'>
        <groupfilter function='member' level='[type]' member='&quot;Germany&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
    </datasource>
    <datasource caption='[01a] - owid-covid-data - original' inline='true' name='federated.0bdudug06c89yc164m65t1pbh640' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='owid-covid-data' name='textscan.07iqnjf0qak6cw10xf4830jedvvo'>
            <connection class='textscan' directory='C:/AIDA/CertProjCovid19/Tableau/Input' filename='owid-covid-data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.07iqnjf0qak6cw10xf4830jedvvo' name='owid-covid-data.csv' table='[owid-covid-data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='real' name='total_deaths' ordinal='7' />
            <column datatype='real' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='integer' name='icu_patients' ordinal='17' />
            <column datatype='real' name='icu_patients_per_million' ordinal='18' />
            <column datatype='integer' name='hosp_patients' ordinal='19' />
            <column datatype='real' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='integer' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='real' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='integer' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='real' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='integer' name='total_tests' ordinal='25' />
            <column datatype='integer' name='new_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='real' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='tests_per_case' ordinal='31' />
            <column datatype='real' name='positive_rate' ordinal='32' />
            <column datatype='integer' name='tests_units' ordinal='33' />
            <column datatype='real' name='stringency_index' ordinal='34' />
            <column datatype='real' name='population' ordinal='35' />
            <column datatype='real' name='population_density' ordinal='36' />
            <column datatype='real' name='median_age' ordinal='37' />
            <column datatype='real' name='aged_65_older' ordinal='38' />
            <column datatype='real' name='aged_70_older' ordinal='39' />
            <column datatype='real' name='gdp_per_capita' ordinal='40' />
            <column datatype='string' name='extreme_poverty' ordinal='41' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='42' />
            <column datatype='real' name='diabetes_prevalence' ordinal='43' />
            <column datatype='string' name='female_smokers' ordinal='44' />
            <column datatype='string' name='male_smokers' ordinal='45' />
            <column datatype='real' name='handwashing_facilities' ordinal='46' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='47' />
            <column datatype='real' name='life_expectancy' ordinal='48' />
            <column datatype='real' name='human_development_index' ordinal='49' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekly_icu_admissions]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_icu_admissions</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_icu_admissions_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_icu_admissions_per_million</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekly_hosp_admissions]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_hosp_admissions_per_million]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>129</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[owid-covid-data.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='string' name='[iso_code]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='string' name='[location]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.475628' measure-ordering='alphabetic' measure-percentage='0.490399' parameter-percentage='0.0339734' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='[10] - predictions_for_tableau' inline='true' name='federated.0m3vwg5077pvbz1bksxis1j7semv' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='predictions_for_tableau' name='textscan.107q0kn047pqls19avodn1io96y1'>
            <connection class='textscan' directory='C:/AIDA/CertProjCovid19/Tableau/Input' filename='predictions_for_tableau.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.107q0kn047pqls19avodn1io96y1' name='predictions_for_tableau.csv' table='[predictions_for_tableau#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='new_cases' ordinal='4' />
            <column datatype='real' name='predicted' ordinal='5' />
            <column datatype='string' name='arima_model' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[predictions_for_tableau.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[predictions_for_tableau.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[predictions_for_tableau.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[predictions_for_tableau.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[predictions_for_tableau.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[predictions_for_tableau.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>predicted</remote-name>
            <remote-type>5</remote-type>
            <local-name>[predicted]</local-name>
            <parent-name>[predictions_for_tableau.csv]</parent-name>
            <remote-alias>predicted</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arima_model</remote-name>
            <remote-type>129</remote-type>
            <local-name>[arima_model]</local-name>
            <parent-name>[predictions_for_tableau.csv]</parent-name>
            <remote-alias>arima_model</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk]&quot;' value='Real Cases (thin)' />
          <alias key='&quot;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:predicted:qk]&quot;' value='Prediction (bold)' />
        </aliases>
      </column>
      <column caption='max_date' datatype='datetime' name='[Calculation_1118581611083980819]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{ FIXED [location]: max(if [new_cases]&gt;0 then DATEADD(&apos;day&apos;, 0, [date]) END)}' />
      </column>
      <column caption='new_cases_cut' datatype='real' name='[Calculation_1118581611088285718]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [date]&lt;= DATEADD(&apos;day&apos;, 6 ,[Parameters].[Parameter 2]) THEN ([new_cases]) END' />
      </column>
      <column caption='last_full_week' datatype='datetime' name='[Calculation_1118581611130515480]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='If DATETRUNC(&apos;week&apos;,[Calculation_1118581611083980819])&lt;&gt; [Calculation_1118581611083980819] &#13;&#10;THEN DATEADD(&apos;day&apos;,-0,DATETRUNC(&apos;week&apos;,[Calculation_1118581611083980819])) &#13;&#10;ELSE [Calculation_1118581611083980819]&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[location]' role='dimension' type='nominal' />
      <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
      <column datatype='real' name='[predicted]' role='measure' type='quantitative' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1118581611088285718]' derivation='Sum' name='[sum:Calculation_1118581611088285718:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[predicted]' derivation='Sum' name='[sum:predicted:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1118581611088285718]' derivation='User' name='[usr:Calculation_1118581611088285718:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.416923' measure-ordering='alphabetic' measure-percentage='0.323077' parameter-percentage='0.26' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:new_cases:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0m3vwg5077pvbz1bksxis1j7semv].[usr:Calculation_1118581611088285718:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:predicted:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column alias='predict' caption='Prediction' datatype='date' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='#2020-11-16#'>
          <calculation class='tableau' formula='#2020-11-16#' />
          <aliases>
            <alias key='#2020-11-16#' value='predict' />
          </aliases>
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='[98] - Locations' inline='true' name='federated.1oj1ff50ycwa1h1gzrf681w40tvc' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='locations' name='textscan.0yiu33h1s64y8j1bo9s290botwzc'>
            <connection class='textscan' directory='C:/AIDA/CertProjCovid19/Tableau/Input' filename='locations.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0yiu33h1s64y8j1bo9s290botwzc' name='locations.csv' table='[locations#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='countriesAndTerritories' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='string' name='continent' ordinal='2' />
            <column datatype='date' date-parse-format='yyyy' name='population_year' ordinal='3' />
            <column datatype='integer' name='population' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[locations.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>countriesAndTerritories</remote-name>
            <remote-type>129</remote-type>
            <local-name>[countriesAndTerritories]</local-name>
            <parent-name>[locations.csv]</parent-name>
            <remote-alias>countriesAndTerritories</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[locations.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[locations.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[population_year]</local-name>
            <parent-name>[locations.csv]</parent-name>
            <remote-alias>population_year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[locations.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='string' name='[countriesAndTerritories]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.354505' measure-ordering='alphabetic' measure-percentage='0.354505' parameter-percentage='0.29099' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
    <datasource caption='[01b] - owid_clean' inline='true' name='federated.1778kex0kgg0m118q1p271qx5l7r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='owid_clean' name='textscan.0cb2auj0hmj29f114n4zt03kz22z'>
            <connection class='textscan' directory='C:/AIDA/CertProjCovid19/Tableau/Input' filename='owid_clean.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0cb2auj0hmj29f114n4zt03kz22z' name='owid_clean.csv' table='[owid_clean#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='real' name='total_deaths' ordinal='7' />
            <column datatype='real' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='integer' name='icu_patients' ordinal='17' />
            <column datatype='real' name='icu_patients_per_million' ordinal='18' />
            <column datatype='integer' name='hosp_patients' ordinal='19' />
            <column datatype='real' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='integer' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='real' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='integer' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='real' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='integer' name='total_tests' ordinal='25' />
            <column datatype='integer' name='new_tests' ordinal='26' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='real' name='new_tests_smoothed' ordinal='29' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='real' name='tests_per_case' ordinal='31' />
            <column datatype='real' name='positive_rate' ordinal='32' />
            <column datatype='integer' name='tests_units' ordinal='33' />
            <column datatype='real' name='stringency_index' ordinal='34' />
            <column datatype='real' name='population' ordinal='35' />
            <column datatype='real' name='population_density' ordinal='36' />
            <column datatype='real' name='median_age' ordinal='37' />
            <column datatype='real' name='aged_65_older' ordinal='38' />
            <column datatype='real' name='aged_70_older' ordinal='39' />
            <column datatype='real' name='gdp_per_capita' ordinal='40' />
            <column datatype='string' name='extreme_poverty' ordinal='41' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='42' />
            <column datatype='real' name='diabetes_prevalence' ordinal='43' />
            <column datatype='string' name='female_smokers' ordinal='44' />
            <column datatype='string' name='male_smokers' ordinal='45' />
            <column datatype='real' name='handwashing_facilities' ordinal='46' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='47' />
            <column datatype='real' name='life_expectancy' ordinal='48' />
            <column datatype='real' name='human_development_index' ordinal='49' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekly_icu_admissions]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>weekly_icu_admissions</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_icu_admissions_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>weekly_icu_admissions_per_million</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weekly_hosp_admissions]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weekly_hosp_admissions_per_million]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>129</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[owid_clean.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country' datatype='string' name='[Calculation_1118581610973171713]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[location]' />
      </column>
      <column caption='Period' datatype='string' name='[Calculation_1118581610988412931]' role='measure' type='nominal'>
        <calculation class='tableau' formula='str(DATEPART(&apos;day&apos;,min([date]))) + &apos;.&apos; +&#13;&#10;str(DATEPART(&apos;month&apos;,min([date]))) + &apos;.-&apos; +&#13;&#10;str(DATEPART(&apos;day&apos;,max([date]))) + &apos;.&apos; +&#13;&#10;str(DATEPART(&apos;month&apos;,max([date])))+ &apos;.&apos; +&#13;&#10;str(DATEPART(&apos;year&apos;,max([date]))) + &apos; (CW &apos; +&#13;&#10;str(DATEPART(&apos;week&apos;,max([date]))) + &apos;)&apos;' />
      </column>
      <column caption='Filter_by_Paramter' datatype='boolean' name='[Calculation_1118581610995380228]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Measure to Show (copy)] = &quot;Germany&quot; THEN [Top Countries Total Cases (copy)]&#13;&#10;ELSEIF [Parameters].[Measure to Show (copy)] = &quot;Top10_Europe_total&quot; THEN [Top Countries by New Cases (copy 2)]&#13;&#10;ELSEIF [Parameters].[Measure to Show (copy)] = &quot;Top10_Europe_Germany&quot; THEN [Set 3]&#13;&#10;ELSEIF [Parameters].[Measure to Show (copy)] = &quot;Bottom10_Europe&quot; THEN [Top Countries by New Cases (copy)]&#13;&#10;ELSEIF [Parameters].[Measure to Show (copy)] = &quot;Bottom10_Europe_Germany&quot; THEN [Set 2]&#13;&#10;ELSEIF [Parameters].[Measure to Show (copy)] = &quot;Top10_total&quot; THEN [Set 1]&#13;&#10;ELSEIF [Parameters].[Measure to Show (copy)] = &quot;Top10_total_Germany&quot; THEN [Set 4]&#13;&#10;ELSEIF [Parameters].[Measure to Show (copy)] = &quot;specific&quot; THEN [Germany (copy)]&#13;&#10;END' />
      </column>
      <column caption='ShowValue' datatype='real' name='[Calculation_1118581610997878789]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='IF [Calculation_1118581611035512838] &lt; 11 THEN SUM([new_cases]) END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Country_Rank_by_new_cases' datatype='integer' name='[Calculation_1118581611035512838]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM([new_cases]))'>
          <table-calc ordering-field='[federated.1778kex0kgg0m118q1p271qx5l7r].[Calculation_1118581610973171713]' ordering-type='Field' />
        </calculation>
      </column>
      <column caption='Top 10 Countries' datatype='real' name='[Calculation_1118581611048226829]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF RANK(SUM([new_cases]))&lt;=10 &#13;&#10;THEN SUM([new_cases])&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Global Contamination [p.M.]' datatype='real' name='[Calculation_1118581611050946576]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([new_cases])/SUM([Calculation_1118581611051085841])*1000000' />
      </column>
      <column caption='c_pop' datatype='real' name='[Calculation_1118581611051085841]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Calculation_1118581610973171713]: AVG([population])}' />
      </column>
      <column caption='Global Cases' datatype='real' name='[Calculation_1118581611054268434]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([new_cases])' />
      </column>
      <column caption='first case' datatype='date' name='[Calculation_734086793138049024]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{ FIXED [location]: min(if ([new_cases])&gt;0 THEN ([date]) END)}' />
      </column>
      <column caption='has first case' datatype='boolean' name='[Calculation_734086793146056705]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[total_cases]&gt;0' />
      </column>
      <column caption='Log_per_M' datatype='real' name='[Calculation_895371954159882240]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ISNULL(SUM([new_cases_per_million])) THEN 0&#13;&#10;ELSE LOG(SUM([new_cases_per_million]))&#13;&#10;END' />
      </column>
      <column caption='Measure_by_Selction' datatype='real' name='[Calculation_895371954178236418]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == &apos;new_cases&apos; THEN SUM([new_cases])&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_cases&apos; THEN MAX([total_cases])&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_deaths&apos; THEN MAX([total_deaths])&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;new_deaths&apos; THEN SUM([new_deaths])&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;new_cases_per_million&apos; THEN SUM([new_cases_per_million])&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_cases_per_million&apos; THEN MAX([total_cases_per_million])&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_deaths_per_million&apos; THEN MAX([total_deaths_per_million])&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;new_deaths_per_million&apos; THEN SUM([new_deaths_per_million])&#13;&#10;ELSE Null&#13;&#10;END' />
      </column>
      <column caption='Event' datatype='string' name='[Calculation_895371954181685251]' role='measure' type='nominal'>
        <calculation class='tableau' formula='ATTR([federated.1tqx0su0ika3du183um0b12cwg8m].[measure])' />
      </column>
      <column caption='Global Deaths' datatype='real' name='[Global Cases (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([new_deaths])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='string' name='[iso_code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;OWID_KOS&quot;' value='&quot;Kosovo&quot;' />
        </semantic-values>
      </column>
      <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_734086793146056705]' derivation='None' name='[none:Calculation_734086793146056705:nk]' pivot='key' type='nominal' />
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <group caption='G + US + SWE + JPN' name='[Germany (copy)]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[location]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;United States&quot;' />
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Top Countries Total Cases' name='[Set 1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[location]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Bottom + Germany' delimiter=',' name='[Set 2]' name-style='unqualified'>
        <groupfilter function='union'>
          <groupfilter field='[Top Countries Total Cases (copy)]' function='reference' />
          <groupfilter field='[Top Countries by New Cases (copy)]' function='reference' />
        </groupfilter>
      </group>
      <group caption='Top Europe + Germany' delimiter=',' name='[Set 3]' name-style='unqualified'>
        <groupfilter function='union'>
          <groupfilter field='[Top Countries Total Cases (copy)]' function='reference' />
          <groupfilter field='[Top Countries by New Cases (copy 2)]' function='reference' />
        </groupfilter>
      </group>
      <group caption='Top + Germany' delimiter=',' name='[Set 4]' name-style='unqualified'>
        <groupfilter function='union'>
          <groupfilter field='[Set 1]' function='reference' />
          <groupfilter field='[Top Countries Total Cases (copy)]' function='reference' />
        </groupfilter>
      </group>
      <group caption='Germany' name='[Top Countries Total Cases (copy)]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
            <groupfilter function='member' level='[location]' member='&quot;Germany&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Top 10 Europe Total Cases' name='[Top Countries by New Cases (copy 2)]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
            <groupfilter expression='MIN([continent]) == &quot;Europe&quot;' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[location]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Bottom Countries Total Cases' name='[Top Countries by New Cases (copy)]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
            <groupfilter expression='MIN([continent]) == &quot;Europe&quot;' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[location]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.330769' group-percentage='0.258462' measure-ordering='alphabetic' measure-percentage='0.315385' parameter-percentage='0.0953846' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_734086793146056705:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>false</bucket>
            </map>
            <map to='#e15759'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:continent:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='%null%' />
        <semantic-value key='[County].[Name]' value='%null%' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='Parameters'>
        <column alias='Top 10 World + Germany' caption='Country Selection' datatype='string' name='[Measure to Show (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Top10_total_Germany&quot;'>
          <calculation class='tableau' formula='&quot;Top10_total_Germany&quot;' />
          <aliases>
            <alias key='&quot;Bottom10_Europe&quot;' value='Bottom 10 Europe' />
            <alias key='&quot;Bottom10_Europe_Germany&quot;' value='Bottom 10 Europe + Germany' />
            <alias key='&quot;specific&quot;' value='GER + USA + SWE + JPN' />
            <alias key='&quot;Top10_Europe_Germany&quot;' value='Top 10 Europe + Germany' />
            <alias key='&quot;Top10_Europe_total&quot;' value='Top10 Europe' />
            <alias key='&quot;Top10_total&quot;' value='Top 10 World' />
            <alias key='&quot;Top10_total_Germany&quot;' value='Top 10 World + Germany' />
          </aliases>
        </column>
        <column alias='New Cases' caption='Measure' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;new_cases&quot;'>
          <calculation class='tableau' formula='&quot;new_cases&quot;' />
          <aliases>
            <alias key='&quot;new_cases&quot;' value='New Cases' />
            <alias key='&quot;new_cases_per_million&quot;' value='New Cases (p.M)' />
            <alias key='&quot;new_deaths&quot;' value='New Deaths' />
            <alias key='&quot;new_deaths_per_million&quot;' value='New Deaths (p.M)' />
            <alias key='&quot;total_cases&quot;' value='Total Cases' />
            <alias key='&quot;total_cases_per_million&quot;' value='Total Cases (p.M)' />
            <alias key='&quot;total_deaths&quot;' value='Total Deaths' />
            <alias key='&quot;total_deaths_per_million&quot;' value='Totals Deaths (p.M)' />
          </aliases>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1tqx0su0ika3du183um0b12cwg8m'>
        <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal' />
      </datasource-dependencies>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
      <column datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[date]' derivation='Day' name='[dy:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Week' name='[wk:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.1tqx0su0ika3du183um0b12cwg8m'>
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[date]' derivation='Day' name='[dy:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Week' name='[wk:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-relationship source='federated.1778kex0kgg0m118q1p271qx5l7r' target='federated.1tqx0su0ika3du183um0b12cwg8m'>
      <column-mapping>
        <map key='[federated.1778kex0kgg0m118q1p271qx5l7r].[dy:date:ok]' value='[federated.1tqx0su0ika3du183um0b12cwg8m].[dy:date:ok]' />
        <map key='[federated.1778kex0kgg0m118q1p271qx5l7r].[mn:date:ok]' value='[federated.1tqx0su0ika3du183um0b12cwg8m].[mn:date:ok]' />
        <map key='[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:date:ok]' value='[federated.1tqx0su0ika3du183um0b12cwg8m].[tdy:date:ok]' />
        <map key='[federated.1778kex0kgg0m118q1p271qx5l7r].[tmn:date:ok]' value='[federated.1tqx0su0ika3du183um0b12cwg8m].[tmn:date:ok]' />
        <map key='[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:ok]' value='[federated.1tqx0su0ika3du183um0b12cwg8m].[twk:date:ok]' />
        <map key='[federated.1778kex0kgg0m118q1p271qx5l7r].[tyr:date:ok]' value='[federated.1tqx0su0ika3du183um0b12cwg8m].[tyr:date:ok]' />
        <map key='[federated.1778kex0kgg0m118q1p271qx5l7r].[wk:date:ok]' value='[federated.1tqx0su0ika3du183um0b12cwg8m].[wk:date:ok]' />
        <map key='[federated.1778kex0kgg0m118q1p271qx5l7r].[yr:date:ok]' value='[federated.1tqx0su0ika3du183um0b12cwg8m].[yr:date:ok]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Country Trend Lines' />
      <command command='tsc:brush'>
        <param name='field-captions' value='location' />
        <param name='target' value='Country Trend Lines' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Entire World' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='location' />
        <param name='target' value='Entire World' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 1' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Measures' />
      <command command='tsc:brush'>
        <param name='field-captions' value='location' />
        <param name='target' value='Measures' />
      </command>
    </action>
    <action caption='Highlight 3 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Further Ideas' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='location' />
        <param name='target' value='Further Ideas' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
          </datasources>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Global Cases' datatype='real' name='[Calculation_1118581611054268434]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([new_cases])' />
            </column>
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581611054268434]' derivation='User' name='[usr:Calculation_1118581611054268434:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='font-size' value='18' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' scope='rows' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581611054268434:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3E2D8D12-0512-4811-9C4A-CD5439AD48D0}' />
    </worksheet>
    <worksheet name='Contamination'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>Contamination (p.M.)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
          </datasources>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Country' datatype='string' name='[Calculation_1118581610973171713]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[location]' />
            </column>
            <column caption='Global Contamination [p.M.]' datatype='real' name='[Calculation_1118581611050946576]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([new_cases])/SUM([Calculation_1118581611051085841])*1000000' />
            </column>
            <column caption='c_pop' datatype='real' name='[Calculation_1118581611051085841]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1118581610973171713]: AVG([population])}' />
            </column>
            <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581611050946576]' derivation='User' name='[usr:Calculation_1118581611050946576:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581611050946576:qk]' value='' />
            <format attr='text-align' value='center' />
            <format attr='font-size' value='18' />
            <format attr='text-align' data-class='total' scope='cols' value='right' />
            <format attr='text-align' data-class='subtotal' scope='cols' value='right' />
            <format attr='text-align' data-class='subtotal' scope='rows' value='right' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-align' data-class='total' scope='cols' value='right' />
            <format attr='text-align' data-class='subtotal' scope='cols' value='right' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' scope='cols' value='right' />
            <format attr='text-align' scope='rows' value='right' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581611050946576:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C4B2F49C-4CF9-4A34-9D4E-D2F6CA68DBCD}' />
    </worksheet>
    <worksheet name='Contamination Germany'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>&lt;Sheet Name&gt;</run>
            <run bold='true' fontalignment='1'>Æ </run>
            <run bold='true' fontalignment='1' fontsize='10'>(normalized)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[02] - Country Details' name='federated.05u4i471ywr5a811qiskp1vheq6p' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.05u4i471ywr5a811qiskp1vheq6p'>
            <column caption='max_cases_Bundesland' datatype='real' name='[Calculation_734086793298964485]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [nuts_1]: max([cases])}' />
            </column>
            <column caption='pop_Bundesländer' datatype='real' name='[Calculation_734086793304289287]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [nuts_1]: max([Calculation_734086793298964485])/max([cases/100k pop.])/10}' />
            </column>
            <column caption='inc_per_GER' datatype='real' name='[Calculation_734086793306796042]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [nuts_1]: max([Calculation_734086793298964485])/max([Calculation_734086793304289287])/1000000}' />
            </column>
            <column-instance column='[Calculation_734086793298964485]' derivation='Attribute' name='[attr:Calculation_734086793298964485:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[cases/100k pop.]' role='measure' type='quantitative' />
            <column datatype='real' name='[cases]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[nuts_1]' derivation='None' name='[none:nuts_1:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[nuts_1]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_734086793304289287]' derivation='Sum' name='[sum:Calculation_734086793304289287:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_734086793306796042]' derivation='Sum' name='[sum:Calculation_734086793306796042:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;DE&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='text-format' field='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306796042:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306796042:qk]' max='0.017501064861584301' min='0.0' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306796042:qk]' value='Contamination [%]'>
              <formatted-text>
                <run bold='true' fontalignment='1' underline='true'>Contamination [%]</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306796042:qk]' />
              <text column='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306796042:qk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[none:nuts_1:nk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[attr:Calculation_734086793298964485:qk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793304289287:qk]' />
              <geometry column='[federated.05u4i471ywr5a811qiskp1vheq6p].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Bundesland:&#9;</run>
                <run bold='true'>&lt;[federated.05u4i471ywr5a811qiskp1vheq6p].[none:nuts_1:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Cases:&#9;</run>
                <run bold='true'>&lt;[federated.05u4i471ywr5a811qiskp1vheq6p].[attr:Calculation_734086793298964485:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Population</run>
                <run fontcolor='#787878' fontsize='8'> [M]</run>
                <run fontcolor='#787878'>:&#9;</run>
                <run bold='true'>&lt;[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793304289287:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Contamination:&#9;</run>
                <run bold='true'>&lt;[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306796042:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='7' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05u4i471ywr5a811qiskp1vheq6p].[Latitude (generated)]</rows>
        <cols>[federated.05u4i471ywr5a811qiskp1vheq6p].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{DDE45985-81FA-4913-B132-3FE7C74168B1}' />
    </worksheet>
    <worksheet name='Contamination Japan'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>&lt;Sheet Name&gt;</run>
            <run bold='true' fontalignment='1'>Æ </run>
            <run bold='true' fontalignment='1' fontsize='10'>(normalized)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[02] - Country Details' name='federated.05u4i471ywr5a811qiskp1vheq6p' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.05u4i471ywr5a811qiskp1vheq6p'>
            <column caption='JP-Departements' datatype='string' name='[Calculation_734086793217118210]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='[nuts_2]' />
            </column>
            <column caption='max_JPN' datatype='real' name='[Calculation_734086793305341960]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_734086793217118210]: max([new_cases])}' />
            </column>
            <column caption='inc_per_1000_JPN' datatype='real' name='[Calculation_734086793306525705]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_734086793217118210]: max([Calculation_734086793305341960])/max([Pop Total])/1000}' />
            </column>
            <column datatype='integer' name='[Pop Total]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_734086793305341960]' derivation='Attribute' name='[attr:Calculation_734086793305341960:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pop Total]' derivation='Attribute' name='[attr:Pop Total:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='datetime' name='[datetime]' role='dimension' type='ordinal' />
            <column-instance column='[datetime]' derivation='Month' name='[mn:datetime:ok]' pivot='key' type='ordinal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_734086793217118210]' derivation='None' name='[none:Calculation_734086793217118210:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[nuts_2]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal' />
            <column-instance column='[Calculation_734086793306525705]' derivation='Sum' name='[sum:Calculation_734086793306525705:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;JPN&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.05u4i471ywr5a811qiskp1vheq6p].[Longitude (generated)]' field-type='quantitative' max='16028687.421921618' min='13668122.533477323' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.05u4i471ywr5a811qiskp1vheq6p].[Latitude (generated)]' field-type='quantitative' max='5988748.8580266945' min='2396371.607427855' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='text-format' field='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]' max='0.017501065' min='0.0' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]' />
              <text column='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[none:Calculation_734086793217118210:nk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[attr:Pop Total:qk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[attr:Calculation_734086793305341960:qk]' />
              <geometry column='[federated.05u4i471ywr5a811qiskp1vheq6p].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Prefecture:&#9;</run>
                <run bold='true'>&lt;[federated.05u4i471ywr5a811qiskp1vheq6p].[none:Calculation_734086793217118210:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Cases:&#9;</run>
                <run bold='true'>&lt;[federated.05u4i471ywr5a811qiskp1vheq6p].[attr:Calculation_734086793305341960:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Population </run>
                <run fontcolor='#787878' fontsize='8'>[M]</run>
                <run fontcolor='#787878'>:&#9;</run>
                <run bold='true'>&lt;[federated.05u4i471ywr5a811qiskp1vheq6p].[attr:Pop Total:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Contamination:&#9;</run>
                <run bold='true'>&lt;[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='auto' />
                <format attr='vertical-align' value='auto' />
                <format attr='wrap' value='auto' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='7' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05u4i471ywr5a811qiskp1vheq6p].[Latitude (generated)]</rows>
        <cols>[federated.05u4i471ywr5a811qiskp1vheq6p].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.05u4i471ywr5a811qiskp1vheq6p].[mn:datetime:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{40D81D85-AC5E-4766-81C0-964C6E668E17}' />
    </worksheet>
    <worksheet name='Country Trend Lines'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;  -  </run>
            <run bold='true' fontcolor='#4e79a7'>&lt;[Parameters].[Parameter 1]&gt;</run>
            <run bold='true'>  for  </run>
            <run bold='true' fontcolor='#4e79a7'>&lt;[Parameters].[Measure to Show (copy)]&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Top 10 World + Germany' caption='Country Selection' datatype='string' name='[Measure to Show (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Top10_total_Germany&quot;'>
              <calculation class='tableau' formula='&quot;Top10_total_Germany&quot;' />
              <aliases>
                <alias key='&quot;Bottom10_Europe&quot;' value='Bottom 10 Europe' />
                <alias key='&quot;Bottom10_Europe_Germany&quot;' value='Bottom 10 Europe + Germany' />
                <alias key='&quot;specific&quot;' value='GER + USA + SWE + JPN' />
                <alias key='&quot;Top10_Europe_Germany&quot;' value='Top 10 Europe + Germany' />
                <alias key='&quot;Top10_Europe_total&quot;' value='Top10 Europe' />
                <alias key='&quot;Top10_total&quot;' value='Top 10 World' />
                <alias key='&quot;Top10_total_Germany&quot;' value='Top 10 World + Germany' />
              </aliases>
            </column>
            <column alias='New Cases' caption='Measure' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;new_cases&quot;'>
              <calculation class='tableau' formula='&quot;new_cases&quot;' />
              <aliases>
                <alias key='&quot;new_cases&quot;' value='New Cases' />
                <alias key='&quot;new_cases_per_million&quot;' value='New Cases (p.M)' />
                <alias key='&quot;new_deaths&quot;' value='New Deaths' />
                <alias key='&quot;new_deaths_per_million&quot;' value='New Deaths (p.M)' />
                <alias key='&quot;total_cases&quot;' value='Total Cases' />
                <alias key='&quot;total_cases_per_million&quot;' value='Total Cases (p.M)' />
                <alias key='&quot;total_deaths&quot;' value='Total Deaths' />
                <alias key='&quot;total_deaths_per_million&quot;' value='Totals Deaths (p.M)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Filter_by_Paramter' datatype='boolean' name='[Calculation_1118581610995380228]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Measure to Show (copy)] = &quot;Germany&quot; THEN [Top Countries Total Cases (copy)]&#13;&#10;ELSEIF [Parameters].[Measure to Show (copy)] = &quot;Top10_Europe_total&quot; THEN [Top Countries by New Cases (copy 2)]&#13;&#10;ELSEIF [Parameters].[Measure to Show (copy)] = &quot;Top10_Europe_Germany&quot; THEN [Set 3]&#13;&#10;ELSEIF [Parameters].[Measure to Show (copy)] = &quot;Bottom10_Europe&quot; THEN [Top Countries by New Cases (copy)]&#13;&#10;ELSEIF [Parameters].[Measure to Show (copy)] = &quot;Bottom10_Europe_Germany&quot; THEN [Set 2]&#13;&#10;ELSEIF [Parameters].[Measure to Show (copy)] = &quot;Top10_total&quot; THEN [Set 1]&#13;&#10;ELSEIF [Parameters].[Measure to Show (copy)] = &quot;Top10_total_Germany&quot; THEN [Set 4]&#13;&#10;ELSEIF [Parameters].[Measure to Show (copy)] = &quot;specific&quot; THEN [Germany (copy)]&#13;&#10;END' />
            </column>
            <column caption='Measure_by_Selction' datatype='real' name='[Calculation_895371954178236418]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == &apos;new_cases&apos; THEN SUM([new_cases])&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_cases&apos; THEN MAX([total_cases])&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_deaths&apos; THEN MAX([total_deaths])&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;new_deaths&apos; THEN SUM([new_deaths])&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;new_cases_per_million&apos; THEN SUM([new_cases_per_million])&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_cases_per_million&apos; THEN MAX([total_cases_per_million])&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_deaths_per_million&apos; THEN MAX([total_deaths_per_million])&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;new_deaths_per_million&apos; THEN SUM([new_deaths_per_million])&#13;&#10;ELSE Null&#13;&#10;END' />
            </column>
            <column datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
            <column datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
            <column datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581610995380228]' derivation='None' name='[none:Calculation_1118581610995380228:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_895371954178236418]' derivation='User' name='[usr:Calculation_895371954178236418:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610995380228:nk]'>
            <groupfilter function='member' level='[none:Calculation_1118581610995380228:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]'>
            <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]' direction='DESC' using='[federated.1778kex0kgg0m118q1p271qx5l7r].[sum:new_cases:qk]' />
          <filter class='quantitative' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:date:qk]' included-values='in-range'>
            <min>#2020-01-25 00:00:00#</min>
            <max>#2020-11-29 00:00:00#</max>
          </filter>
          <filter class='quantitative' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:qk]' included-values='in-range'>
            <max>#2020-11-22 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]</column>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]</column>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:qk]</column>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610995380228:nk]</column>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='band-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='background-color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='background-color' value='#c0c0c0' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='8' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]' value='Country' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:date:qk]' value='Day of date' />
          </style-rule>
        </style>
        <panes>
          <pane id='53' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.33983424305915833' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_895371954178236418:qk]</rows>
        <cols>[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:qk]</cols>
        <table-calculations>
          <partitionable-measures>
            <column>[federated.1tqx0su0ika3du183um0b12cwg8m].[max:measure:nk]</column>
          </partitionable-measures>
        </table-calculations>
      </table>
      <simple-id uuid='{14C8554F-5725-4836-B01D-C60AE6E84B0A}' />
    </worksheet>
    <worksheet name='Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
          </datasources>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Global Deaths' datatype='real' name='[Global Cases (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([new_deaths])' />
            </column>
            <column datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Global Cases (copy)]' derivation='User' name='[usr:Global Cases (copy):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='font-size' value='18' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Global Cases (copy):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{71DA9CCE-0D82-4787-95B0-854142610CE6}' />
    </worksheet>
    <worksheet name='FirstCase Days'>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
          </datasources>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Country' datatype='string' name='[Calculation_1118581610973171713]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[location]' />
            </column>
            <column caption='first case' datatype='date' name='[Calculation_734086793138049024]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ FIXED [location]: min(if ([new_cases])&gt;0 THEN ([date]) END)}' />
            </column>
            <column datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Calculation_1118581610973171713]' derivation='CountD' name='[ctd:Calculation_1118581610973171713:qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581610973171713]' derivation='None' name='[none:Calculation_1118581610973171713:nk]' pivot='key' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_734086793138049024]' derivation='Day-Trunc' name='[tdy:Calculation_734086793138049024:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:Calculation_734086793138049024:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tdy:Calculation_734086793138049024:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='%null%' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2019-12-31 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-01 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-02 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-03 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-04 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-05 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-06 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-07 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-08 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-09 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-10 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-11 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-12 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-13 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-14 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-15 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-16 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-17 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-01-18 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-03-29 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-03-30 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-03-31 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-01 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-02 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-03 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-04 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-05 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-06 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-07 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-08 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-09 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-10 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-11 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-12 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-13 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-14 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-15 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-16 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-17 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-18 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-19 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-20 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-21 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-22 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-23 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-24 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-25 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-26 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-27 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-28 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-29 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-04-30 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-01 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-02 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-03 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-04 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-05 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-06 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-07 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-08 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-09 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-10 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-11 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-12 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-13 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-14 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-15 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-16 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-17 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-18 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-19 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-20 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-21 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-22 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-23 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-24 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-25 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-26 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-27 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-28 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-29 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-30 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-05-31 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-01 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-02 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-03 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-04 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-05 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-06 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-07 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-08 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-09 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-10 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-11 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-12 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-13 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-14 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-15 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-16 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-17 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-18 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-19 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-20 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-21 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-22 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-23 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-24 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-25 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-26 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-27 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-28 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-29 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-06-30 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-01 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-02 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-03 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-04 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-05 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-06 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-07 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-08 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-09 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-10 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-11 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-12 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-13 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-14 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-15 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-16 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-17 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-18 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-19 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-20 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-21 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-22 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-23 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-24 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-25 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-26 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-27 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-28 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-29 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-30 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-07-31 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-01 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-02 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-03 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-04 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-05 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-06 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-07 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-08 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-09 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-10 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-11 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-12 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-13 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-14 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-15 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-16 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-17 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-18 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-19 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-20 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-21 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-22 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-23 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-24 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-25 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-26 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-27 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-28 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-29 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-30 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-08-31 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-01 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-02 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-03 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-04 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-05 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-06 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-07 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-08 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-09 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-10 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-11 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-12 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-13 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-14 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-15 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-16 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-17 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-18 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-19 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-20 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-21 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-22 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-23 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-24 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-25 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-26 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-27 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-28 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-29 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-09-30 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-01 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-02 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-03 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-04 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-05 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-06 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-07 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-08 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-09 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-10 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-11 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-12 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-13 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-14 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-15 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-16 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-17 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-18 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-19 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-20 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-21 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-22 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-23 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-24 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-25 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-26 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-27 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-28 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-29 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-30 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-10-31 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-11-01 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-11-02 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-11-03 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-11-04 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-11-05 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-11-06 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-11-07 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-11-08 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-11-09 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-11-10 00:00:00#' />
                <groupfilter function='member' level='[tdy:Calculation_734086793138049024:ok]' member='#2020-11-11 00:00:00#' />
              </groupfilter>
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[ctd:Calculation_1118581610973171713:qk]' field-type='quantitative' max='14' min='0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[ctd:Calculation_1118581610973171713:qk]' scope='rows' value='Countries' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1778kex0kgg0m118q1p271qx5l7r].[ctd:Calculation_1118581610973171713:qk]</rows>
        <cols include-empty='true'>[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:Calculation_734086793138049024:ok]</cols>
      </table>
      <simple-id uuid='{8D420EB7-487F-4B24-BC93-DBAA0D2CE986}' />
    </worksheet>
    <worksheet name='FirstCase List'>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
          </datasources>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Country' datatype='string' name='[Calculation_1118581610973171713]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[location]' />
            </column>
            <column caption='first case' datatype='date' name='[Calculation_734086793138049024]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ FIXED [location]: min(if ([new_cases])&gt;0 THEN ([date]) END)}' />
            </column>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581610973171713]' derivation='None' name='[none:Calculation_1118581610973171713:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_734086793138049024]' derivation='Day-Trunc' name='[tdy:Calculation_734086793138049024:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:Calculation_734086793138049024:ok] / [federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{84D17366-7932-432A-9CC7-C96DE638CCCC}' />
    </worksheet>
    <worksheet name='FirstCase Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>First Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Country' datatype='string' name='[Calculation_1118581610973171713]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[location]' />
            </column>
            <column caption='Period' datatype='string' name='[Calculation_1118581610988412931]' role='measure' type='nominal'>
              <calculation class='tableau' formula='str(DATEPART(&apos;day&apos;,min([date]))) + &apos;.&apos; +&#13;&#10;str(DATEPART(&apos;month&apos;,min([date]))) + &apos;.-&apos; +&#13;&#10;str(DATEPART(&apos;day&apos;,max([date]))) + &apos;.&apos; +&#13;&#10;str(DATEPART(&apos;month&apos;,max([date])))+ &apos;.&apos; +&#13;&#10;str(DATEPART(&apos;year&apos;,max([date]))) + &apos; (CW &apos; +&#13;&#10;str(DATEPART(&apos;week&apos;,max([date]))) + &apos;)&apos;' />
            </column>
            <column caption='has first case' datatype='boolean' name='[Calculation_734086793146056705]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[total_cases]&gt;0' />
            </column>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[iso_code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;OWID_KOS&quot;' value='&quot;Kosovo&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[Calculation_1118581610973171713]' derivation='None' name='[none:Calculation_1118581610973171713:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_734086793146056705]' derivation='None' name='[none:Calculation_734086793146056705:nk]' pivot='key' type='nominal' />
            <column-instance column='[iso_code]' derivation='None' name='[none:iso_code:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
            <column datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581610988412931]' derivation='User' name='[usr:Calculation_1118581610988412931:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[Longitude (generated)]' field-type='quantitative' max='27168824.166140702' min='-12906192.51943779' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[Latitude (generated)]' field-type='quantitative' max='14080365.783279724' min='-9882014.3672968186' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#faf4e7' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:iso_code:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='Date'>
              <formatted-text>
                <run bold='true' underline='true'>Date</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_734086793146056705:nk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:iso_code:nk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581610988412931:nk]' />
              <geometry column='[federated.1778kex0kgg0m118q1p271qx5l7r].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run>&lt;[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>New Cases:&#9;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Cases:&#9;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Period:&#9;</run>
                <run>&lt;[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581610988412931:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1778kex0kgg0m118q1p271qx5l7r].[Latitude (generated)]</rows>
        <cols>[federated.1778kex0kgg0m118q1p271qx5l7r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:date:ok]</column>
        </pages>
        <page-trail-options size='5' />
      </table>
      <simple-id uuid='{10F84087-277F-422D-9731-2B75A622EBAE}' />
    </worksheet>
    <worksheet name='FirstCase Weeks'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
          </datasources>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Country' datatype='string' name='[Calculation_1118581610973171713]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[location]' />
            </column>
            <column caption='first case' datatype='date' name='[Calculation_734086793138049024]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ FIXED [location]: min(if ([new_cases])&gt;0 THEN ([date]) END)}' />
            </column>
            <column datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Calculation_1118581610973171713]' derivation='CountD' name='[ctd:Calculation_1118581610973171713:qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581610973171713]' derivation='None' name='[none:Calculation_1118581610973171713:nk]' pivot='key' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_734086793138049024]' derivation='Week-Trunc' name='[twk:Calculation_734086793138049024:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[ctd:Calculation_1118581610973171713:qk]' scope='rows' value='Contries' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]' value='Continent'>
              <formatted-text>
                <run bold='true' underline='true'>Continent</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1778kex0kgg0m118q1p271qx5l7r].[ctd:Calculation_1118581610973171713:qk]</rows>
        <cols include-empty='true'>[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:Calculation_734086793138049024:ok]</cols>
      </table>
      <simple-id uuid='{EE8553B7-E5CF-4D3F-9A2E-18069B50E98F}' />
    </worksheet>
    <worksheet name='Germany'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[10] - predictions_for_tableau' name='federated.0m3vwg5077pvbz1bksxis1j7semv' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='predict' caption='Prediction' datatype='date' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='#2020-11-16#'>
              <calculation class='tableau' formula='#2020-11-16#' />
              <aliases>
                <alias key='#2020-11-16#' value='predict' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0m3vwg5077pvbz1bksxis1j7semv'>
            <column caption='new_cases_cut' datatype='real' name='[Calculation_1118581611088285718]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [date]&lt;= DATEADD(&apos;day&apos;, 6 ,[Parameters].[Parameter 2]) THEN ([new_cases]) END' />
            </column>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' type='nominal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[predicted]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581611088285718]' derivation='Sum' name='[sum:Calculation_1118581611088285718:qk]' pivot='key' type='quantitative' />
            <column-instance column='[predicted]' derivation='Sum' name='[sum:predicted:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:date:qk]' filter-group='3' included-values='in-range'>
            <min>#2020-01-28#</min>
            <max>#2020-12-13#</max>
          </filter>
          <filter class='categorical' column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;Germany&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]' filter-group='4' included-values='in-range'>
            <min>#2020-02-17 00:00:00#</min>
            <max>#2020-12-04 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]</column>
            <column>[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:date:qk]</column>
            <column>[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]' scope='cols' value='' />
            <format attr='display' class='0' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:predicted:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' value='false' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
            <format attr='background-color' value='#c0c0c0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#ffaaff' />
            <format attr='fill-below' id='refline0' value='#f5f5f5' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[:Measure Names]' value='Data Type' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]' value='Date' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]' enable-instant-analytics='true' formula='max' id='refline0' label-type='automatic' scope='per-table' value-column='[Parameters].[Parameter 2]' z-order='1' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'>&lt;[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Week of:&#9;</run>
                <run bold='true'>&lt;[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Prediction (bold):&#9;</run>
                <run bold='true'>&lt;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:predicted:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Real Cases (thin):&#9;</run>
                <run bold='true'>&lt;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.25187844038009644' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:predicted:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'>&lt;[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Week of:&#9;</run>
                <run bold='true'>&lt;[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Prediction (bold):&#9;</run>
                <run bold='true'>&lt;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:predicted:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Real Cases (thin):&#9;</run>
                <run bold='true'>&lt;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2.7292816638946533' />
                <format attr='mark-transparency' value='111' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'>&lt;[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Week of:&#9;</run>
                <run bold='true'>&lt;[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Prediction (bold):&#9;</run>
                <run bold='true'>&lt;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:predicted:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Real Cases (thin):&#9;</run>
                <run bold='true'>&lt;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.49375692009925842' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:predicted:qk] + [federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk])</rows>
        <cols>([federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk] * [federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk])</cols>
      </table>
      <simple-id uuid='{176BD3CC-3B83-4194-ABBD-6CBF19E2AE99}' />
    </worksheet>
    <worksheet name='Incidence Japan (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='12'>Contamination Japan</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[02] - Country Details' name='federated.05u4i471ywr5a811qiskp1vheq6p' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.05u4i471ywr5a811qiskp1vheq6p'>
            <column caption='JP-Departements' datatype='string' name='[Calculation_734086793217118210]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='[nuts_2]' />
            </column>
            <column caption='max_JPN' datatype='real' name='[Calculation_734086793305341960]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_734086793217118210]: max([new_cases])}' />
            </column>
            <column caption='inc_per_1000_JPN' datatype='real' name='[Calculation_734086793306525705]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_734086793217118210]: max([Calculation_734086793305341960])/max([Pop Total])/1000}' />
            </column>
            <column datatype='integer' name='[Pop Total]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_734086793305341960]' derivation='Attribute' name='[attr:Calculation_734086793305341960:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pop Total]' derivation='Attribute' name='[attr:Pop Total:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='datetime' name='[datetime]' role='dimension' type='ordinal' />
            <column-instance column='[datetime]' derivation='Month' name='[mn:datetime:ok]' pivot='key' type='ordinal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_734086793217118210]' derivation='None' name='[none:Calculation_734086793217118210:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[nuts_2]' role='dimension' semantic-role='[NUTS].[Name]' type='nominal' />
            <column-instance column='[Calculation_734086793306525705]' derivation='Sum' name='[sum:Calculation_734086793306525705:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;JPN&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.05u4i471ywr5a811qiskp1vheq6p].[Longitude (generated)]' field-type='quantitative' max='16028687.421921618' min='13668122.533477323' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.05u4i471ywr5a811qiskp1vheq6p].[Latitude (generated)]' field-type='quantitative' max='5988748.8580266945' min='2396371.607427855' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='text-format' field='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]' value='Contamination [%]'>
              <formatted-text>
                <run bold='true' fontalignment='1' underline='true'>Contamination [%]</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[none:Calculation_734086793217118210:nk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[attr:Pop Total:qk]' />
              <lod column='[federated.05u4i471ywr5a811qiskp1vheq6p].[attr:Calculation_734086793305341960:qk]' />
              <geometry column='[federated.05u4i471ywr5a811qiskp1vheq6p].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Prefecture:&#9;</run>
                <run bold='true'>&lt;[federated.05u4i471ywr5a811qiskp1vheq6p].[none:Calculation_734086793217118210:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Cases:&#9;</run>
                <run bold='true'>&lt;[federated.05u4i471ywr5a811qiskp1vheq6p].[attr:Calculation_734086793305341960:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Population </run>
                <run fontcolor='#787878' fontsize='8'>[M]</run>
                <run fontcolor='#787878'>:&#9;</run>
                <run bold='true'>&lt;[federated.05u4i471ywr5a811qiskp1vheq6p].[attr:Pop Total:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Contamination:&#9;</run>
                <run bold='true'>&lt;[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.05u4i471ywr5a811qiskp1vheq6p].[Latitude (generated)]</rows>
        <cols>[federated.05u4i471ywr5a811qiskp1vheq6p].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.05u4i471ywr5a811qiskp1vheq6p].[mn:datetime:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{DA90F943-8E45-4492-9CBF-ACA179D28AE8}' />
    </worksheet>
    <worksheet name='Measures'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
            <datasource name='Parameters' />
            <datasource caption='[99] - Measures' name='federated.1tqx0su0ika3du183um0b12cwg8m' />
            <datasource caption='[01a] - owid-covid-data - original' name='federated.0bdudug06c89yc164m65t1pbh640' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='New Cases' caption='Measure' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;new_cases&quot;'>
              <calculation class='tableau' formula='&quot;new_cases&quot;' />
              <aliases>
                <alias key='&quot;new_cases&quot;' value='New Cases' />
                <alias key='&quot;new_cases_per_million&quot;' value='New Cases (p.M)' />
                <alias key='&quot;new_deaths&quot;' value='New Deaths' />
                <alias key='&quot;new_deaths_per_million&quot;' value='New Deaths (p.M)' />
                <alias key='&quot;total_cases&quot;' value='Total Cases' />
                <alias key='&quot;total_cases_per_million&quot;' value='Total Cases (p.M)' />
                <alias key='&quot;total_deaths&quot;' value='Total Deaths' />
                <alias key='&quot;total_deaths_per_million&quot;' value='Totals Deaths (p.M)' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0bdudug06c89yc164m65t1pbh640'>
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Measure_by_Selction' datatype='real' name='[Calculation_895371954178236418]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] == &apos;new_cases&apos; THEN SUM([new_cases])&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_cases&apos; THEN MAX([total_cases])&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_deaths&apos; THEN MAX([total_deaths])&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;new_deaths&apos; THEN SUM([new_deaths])&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;new_cases_per_million&apos; THEN SUM([new_cases_per_million])&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_cases_per_million&apos; THEN MAX([total_cases_per_million])&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;total_deaths_per_million&apos; THEN MAX([total_deaths_per_million])&#13;&#10;ELSEIF [Parameters].[Parameter 1] == &apos;new_deaths_per_million&apos; THEN SUM([new_deaths_per_million])&#13;&#10;ELSE Null&#13;&#10;END' />
            </column>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
            <column datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
            <column datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_895371954178236418]' derivation='Sum' name='[sum:Calculation_895371954178236418:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1tqx0su0ika3du183um0b12cwg8m'>
            <column caption='Event' datatype='real' datatype-customized='true' name='[Calculation_895371954195169286]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF NOT(ISNULL(MIN([measure])))&#13;&#10;THEN MIN([federated.0bdudug06c89yc164m65t1pbh640].[new_cases])+100&#13;&#10;END' />
            </column>
            <column caption='Measure' datatype='string' name='[measure]' role='dimension' type='nominal' />
            <column-instance column='[measure]' derivation='Min' name='[min:measure:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_895371954195169286]' derivation='User' name='[usr:Calculation_895371954195169286:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]'>
            <groupfilter function='member' level='[none:location:nk]' member='&quot;Germany&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:qk]' included-values='in-range'>
            <max>#2020-11-22 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]</column>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]</column>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[sum:Calculation_895371954178236418:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.1tqx0su0ika3du183um0b12cwg8m].[usr:Calculation_895371954195169286:qk]' field-type='quantitative' fold='true' max='300.0' min='0.0' range-type='fixed' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.1tqx0su0ika3du183um0b12cwg8m].[usr:Calculation_895371954195169286:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1tqx0su0ika3du183um0b12cwg8m].[usr:Calculation_895371954195169286:qk]' value='#c0c0c0' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#d4d4d4' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
            <format attr='background-color' value='#c0c0c0' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='8' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-weight' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane id='53' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Week of:&#9;</run>
                <run bold='true'>&lt;[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Measure:&#9;</run>
                <run bold='true'>&lt;[federated.1tqx0su0ika3du183um0b12cwg8m].[min:measure:nk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.33983424305915833' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='54' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1778kex0kgg0m118q1p271qx5l7r].[sum:Calculation_895371954178236418:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Week of:&#9;</run>
                <run bold='true'>&lt;[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Measure:&#9;</run>
                <run bold='true'>&lt;[federated.1tqx0su0ika3du183um0b12cwg8m].[min:measure:nk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='on' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.2853591442108154' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='55' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1tqx0su0ika3du183um0b12cwg8m].[usr:Calculation_895371954195169286:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1tqx0su0ika3du183um0b12cwg8m].[min:measure:nk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Week of:&#9;</run>
                <run bold='true'>&lt;[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Measure:&#9;</run>
                <run bold='true'>&lt;[federated.1tqx0su0ika3du183um0b12cwg8m].[min:measure:nk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-labels-show' value='true' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-color' value='#ff0000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1778kex0kgg0m118q1p271qx5l7r].[sum:Calculation_895371954178236418:qk] + [federated.1tqx0su0ika3du183um0b12cwg8m].[usr:Calculation_895371954195169286:qk])</rows>
        <cols>[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:qk]</cols>
        <table-calculations>
          <partitionable-measures>
            <column>[federated.1tqx0su0ika3du183um0b12cwg8m].[max:measure:nk]</column>
          </partitionable-measures>
        </table-calculations>
      </table>
      <simple-id uuid='{2C53DE37-A85A-4B87-B8E8-FD64D017589A}' />
    </worksheet>
    <worksheet name='Others'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[10] - predictions_for_tableau' name='federated.0m3vwg5077pvbz1bksxis1j7semv' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='predict' caption='Prediction' datatype='date' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='#2020-11-16#'>
              <calculation class='tableau' formula='#2020-11-16#' />
              <aliases>
                <alias key='#2020-11-16#' value='predict' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0m3vwg5077pvbz1bksxis1j7semv'>
            <column caption='new_cases_cut' datatype='real' name='[Calculation_1118581611088285718]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [date]&lt;= DATEADD(&apos;day&apos;, 6 ,[Parameters].[Parameter 2]) THEN ([new_cases]) END' />
            </column>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' type='nominal' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[predicted]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581611088285718]' derivation='Sum' name='[sum:Calculation_1118581611088285718:qk]' pivot='key' type='quantitative' />
            <column-instance column='[predicted]' derivation='Sum' name='[sum:predicted:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:date:qk]' filter-group='3' included-values='in-range'>
            <min>#2020-01-28#</min>
            <max>#2020-12-13#</max>
          </filter>
          <filter class='categorical' column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]'>
            <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]' filter-group='4' included-values='in-range'>
            <min>#2020-02-17 00:00:00#</min>
            <max>#2020-12-04 23:59:59#</max>
          </filter>
          <slices>
            <column>[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]</column>
            <column>[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:date:qk]</column>
            <column>[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]' scope='cols' value='' />
            <format attr='display' class='0' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:predicted:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#d4d4d4' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
            <format attr='background-color' value='#c0c0c0' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#ffaaff' />
            <format attr='fill-below' id='refline0' value='#f5f5f5' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' value='Countries' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' value='Available Countries' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]' enable-instant-analytics='true' formula='max' id='refline0' label-type='automatic' scope='per-table' value-column='[Parameters].[Parameter 2]' z-order='1' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'>&lt;[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Week of:&#9;</run>
                <run bold='true'>&lt;[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Real Cases (thin):&#9;</run>
                <run bold='true'>&lt;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Prediction (bold):&#9;</run>
                <run bold='true'>&lt;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:predicted:qk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.25187844038009644' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:predicted:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'>&lt;[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Week of:&#9;</run>
                <run bold='true'>&lt;[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Real Cases (thin):&#9;</run>
                <run bold='true'>&lt;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Prediction (bold):&#9;</run>
                <run bold='true'>&lt;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:predicted:qk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2.5966851711273193' />
                <format attr='mark-transparency' value='103' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run bold='true'>&lt;[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Week of:&#9;</run>
                <run bold='true'>&lt;[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Real Cases (thin):&#9;</run>
                <run bold='true'>&lt;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Prediction (bold):&#9;</run>
                <run bold='true'>&lt;[federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:predicted:qk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.25187844038009644' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:predicted:qk] + [federated.0m3vwg5077pvbz1bksxis1j7semv].[sum:Calculation_1118581611088285718:qk])</rows>
        <cols>[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]</cols>
      </table>
      <simple-id uuid='{843320CD-36A1-40D6-9B76-15B60098C0B1}' />
    </worksheet>
    <worksheet name='World Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Incidence </run>
            <run bold='true' fontsize='12'>(Logarithmic Cew Cases per Week)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
            <column caption='Country' datatype='string' name='[Calculation_1118581610973171713]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[location]' />
            </column>
            <column caption='Period' datatype='string' name='[Calculation_1118581610988412931]' role='measure' type='nominal'>
              <calculation class='tableau' formula='str(DATEPART(&apos;day&apos;,min([date]))) + &apos;.&apos; +&#13;&#10;str(DATEPART(&apos;month&apos;,min([date]))) + &apos;.-&apos; +&#13;&#10;str(DATEPART(&apos;day&apos;,max([date]))) + &apos;.&apos; +&#13;&#10;str(DATEPART(&apos;month&apos;,max([date])))+ &apos;.&apos; +&#13;&#10;str(DATEPART(&apos;year&apos;,max([date]))) + &apos; (CW &apos; +&#13;&#10;str(DATEPART(&apos;week&apos;,max([date]))) + &apos;)&apos;' />
            </column>
            <column caption='Top 10 Countries' datatype='real' name='[Calculation_1118581611048226829]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF RANK(SUM([new_cases]))&lt;=10 &#13;&#10;THEN SUM([new_cases])&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Log_per_M' datatype='real' name='[Calculation_895371954159882240]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ISNULL(SUM([new_cases_per_million])) THEN 0&#13;&#10;ELSE LOG(SUM([new_cases_per_million]))&#13;&#10;END' />
            </column>
            <column datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[iso_code]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;OWID_KOS&quot;' value='&quot;Kosovo&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[location]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1118581610973171713]' derivation='None' name='[none:Calculation_1118581610973171713:nk]' pivot='key' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[iso_code]' derivation='None' name='[none:iso_code:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1118581610988412931]' derivation='User' name='[usr:Calculation_1118581610988412931:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1118581611048226829]' derivation='User' name='[usr:Calculation_1118581611048226829:qk:7]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[federated.1778kex0kgg0m118q1p271qx5l7r].[Calculation_1118581610973171713]' />
                <order field='[federated.1778kex0kgg0m118q1p271qx5l7r].[iso_code]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_895371954159882240]' derivation='User' name='[usr:Calculation_895371954159882240:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]'>
            <groupfilter function='level-members' level='[none:continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:ok]'>
            <groupfilter function='level-members' level='[twk:date:ok]' />
          </filter>
          <slices>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]</column>
            <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[Longitude (generated)]' field-type='quantitative' max='20365616.587164693' min='-19950312.117781304' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[Latitude (generated)]' field-type='quantitative' max='13313056.283573911' min='-7925763.3125894889' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:ok]' value='*yyyy\ \Www' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_895371954159882240:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#c0c0c0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_895371954159882240:qk]' value='false' />
            <format attr='in-tooltip' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:ok]' value='false' />
            <format attr='in-tooltip' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:iso_code:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]' value='Focus' />
          </style-rule>
          <style-rule element='page-card-title'>
            <format attr='title' value='Calender Week' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_895371954159882240:qk]' />
              <text column='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581611048226829:qk:7]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:iso_code:nk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[sum:new_cases:qk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[max:total_cases:qk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]' />
              <lod column='[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581610988412931:nk]' />
              <geometry column='[federated.1778kex0kgg0m118q1p271qx5l7r].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Country:&#9;</run>
                <run>&lt;[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]&gt;&#10;</run>
                <run fontcolor='#787878'>New Cases:&#9;</run>
                <run>&lt;[federated.1778kex0kgg0m118q1p271qx5l7r].[sum:new_cases:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Total Cases:&#9;</run>
                <run>&lt;[federated.1778kex0kgg0m118q1p271qx5l7r].[max:total_cases:qk]&gt;&#10;</run>
                <run fontcolor='#787878'>Period:&#9;</run>
                <run>&lt;[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581610988412931:nk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='7' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1778kex0kgg0m118q1p271qx5l7r].[Latitude (generated)]</rows>
        <cols>[federated.1778kex0kgg0m118q1p271qx5l7r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:date:ok]</column>
        </pages>
        <page-trail-options size='5' />
      </table>
      <simple-id uuid='{293BE3CA-DC7F-4449-B709-AA166CA4AB7A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Entire World'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#e6e6e6' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='[01b] - owid_clean' name='federated.1778kex0kgg0m118q1p271qx5l7r' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Top 10 World + Germany' caption='Country Selection' datatype='string' name='[Measure to Show (copy)]' param-domain-type='list' role='measure' type='nominal' value='&quot;Top10_total_Germany&quot;'>
          <calculation class='tableau' formula='&quot;Top10_total_Germany&quot;' />
          <aliases>
            <alias key='&quot;Bottom10_Europe&quot;' value='Bottom 10 Europe' />
            <alias key='&quot;Bottom10_Europe_Germany&quot;' value='Bottom 10 Europe + Germany' />
            <alias key='&quot;specific&quot;' value='GER + USA + SWE + JPN' />
            <alias key='&quot;Top10_Europe_Germany&quot;' value='Top 10 Europe + Germany' />
            <alias key='&quot;Top10_Europe_total&quot;' value='Top10 Europe' />
            <alias key='&quot;Top10_total&quot;' value='Top 10 World' />
            <alias key='&quot;Top10_total_Germany&quot;' value='Top 10 World + Germany' />
          </aliases>
          <members>
            <member value='&quot;Germany&quot;' />
            <member alias='Top10 Europe' value='&quot;Top10_Europe_total&quot;' />
            <member alias='Top 10 Europe + Germany' value='&quot;Top10_Europe_Germany&quot;' />
            <member alias='Bottom 10 Europe' value='&quot;Bottom10_Europe&quot;' />
            <member alias='Bottom 10 Europe + Germany' value='&quot;Bottom10_Europe_Germany&quot;' />
            <member alias='Top 10 World' value='&quot;Top10_total&quot;' />
            <member alias='Top 10 World + Germany' value='&quot;Top10_total_Germany&quot;' />
            <member alias='GER + USA + SWE + JPN' value='&quot;specific&quot;' />
          </members>
        </column>
        <column alias='New Cases' caption='Measure' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;new_cases&quot;'>
          <calculation class='tableau' formula='&quot;new_cases&quot;' />
          <aliases>
            <alias key='&quot;new_cases&quot;' value='New Cases' />
            <alias key='&quot;new_cases_per_million&quot;' value='New Cases (p.M)' />
            <alias key='&quot;new_deaths&quot;' value='New Deaths' />
            <alias key='&quot;new_deaths_per_million&quot;' value='New Deaths (p.M)' />
            <alias key='&quot;total_cases&quot;' value='Total Cases' />
            <alias key='&quot;total_cases_per_million&quot;' value='Total Cases (p.M)' />
            <alias key='&quot;total_deaths&quot;' value='Total Deaths' />
            <alias key='&quot;total_deaths_per_million&quot;' value='Totals Deaths (p.M)' />
          </aliases>
          <members>
            <member alias='New Cases' value='&quot;new_cases&quot;' />
            <member alias='Total Cases' value='&quot;total_cases&quot;' />
            <member alias='New Deaths' value='&quot;new_deaths&quot;' />
            <member alias='Total Deaths' value='&quot;total_deaths&quot;' />
            <member alias='New Cases (p.M)' value='&quot;new_cases_per_million&quot;' />
            <member alias='Total Cases (p.M)' value='&quot;total_cases_per_million&quot;' />
            <member alias='New Deaths (p.M)' value='&quot;new_deaths_per_million&quot;' />
            <member alias='Totals Deaths (p.M)' value='&quot;total_deaths_per_million&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1778kex0kgg0m118q1p271qx5l7r'>
        <column datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='99250' id='18' param='horz' type='layout-flow' w='99400' x='300' y='375'>
            <zone h='99250' id='16' type='layout-basic' w='99400' x='300' y='375'>
              <zone h='40260' id='5' param='horz' type='layout-flow' w='24430' x='300' y='15421'>
                <zone fixed-size='160' h='40260' id='4' is-fixed='true' param='vert' type='layout-flow' w='24430' x='300' y='15421'>
                  <zone fixed-size='60' forceUpdate='true' h='8500' id='15' is-fixed='true' type='text' w='23130' x='500' y='16296'>
                    <formatted-text>
                      <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='15'>Global</run>
                      <run fontalignment='1'>Æ&#10;</run>
                      <run fontalignment='1' fontcolor='#000000' fontsize='10'>(as of 28.11.2020)</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='background-color' value='#c0c0c0' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='77' h='10211' id='12' is-fixed='true' name='Cases' w='23130' x='500' y='24796'>
                    <layout-cache type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='background-color' value='#c0c0c0' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='102' h='10211' id='13' is-fixed='true' name='Contamination' w='23130' x='500' y='35007'>
                    <layout-cache type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='background-color' value='#c0c0c0' />
                    </zone-style>
                  </zone>
                  <zone fixed-size='91' h='10213' id='14' is-fixed='true' name='Deaths' w='23130' x='500' y='45218'>
                    <layout-cache type-h='fixed' type-w='fixed' />
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                      <format attr='background-color' value='#c0c0c0' />
                    </zone-style>
                  </zone>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='1' />
                    <format attr='margin-top' value='6' />
                    <format attr='margin-right' value='10' />
                    <format attr='margin-bottom' value='1' />
                    <format attr='background-color' value='#c0c0c0' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='55306' id='1' name='World Map' w='74970' x='24730' y='375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='1' />
                  <format attr='margin-left' value='0' />
                  <format attr='padding' value='1' />
                  <format attr='padding-right' value='0' />
                  <format attr='padding-bottom' value='0' />
                  <format attr='padding-left' value='0' />
                  <format attr='background-color' value='#c0c0c0' />
                </zone-style>
              </zone>
              <zone h='34569' id='8' name='Country Trend Lines' w='81804' x='300' y='55681'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='1' />
                  <format attr='margin-top' value='7' />
                  <format attr='padding' value='2' />
                  <format attr='background-color' value='#c0c0c0' />
                </zone-style>
              </zone>
              <zone h='28499' id='9' name='Country Trend Lines' pane-specification-id='53' param='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]' type='color' w='17596' x='82104' y='71126'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='2' />
                  <format attr='padding' value='2' />
                  <format attr='background-color' value='#c0c0c0' />
                </zone-style>
              </zone>
              <zone custom-title='true' h='15445' id='10' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='17596' x='82104' y='55681'>
                <formatted-text>
                  <run bold='true' underline='true'>Measure</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='1' />
                  <format attr='margin-top' value='7' />
                  <format attr='margin-right' value='2' />
                  <format attr='margin-bottom' value='2' />
                  <format attr='margin-left' value='2' />
                  <format attr='padding' value='3' />
                  <format attr='background-color' value='#c0c0c0' />
                </zone-style>
              </zone>
              <zone fixed-size='48' h='15046' id='7' is-fixed='true' name='World Map' synchronized='1' trailctrls='0' type='currpage' w='24430' x='300' y='375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='1' />
                  <format attr='margin-right' value='0' />
                  <format attr='padding' value='9' />
                  <format attr='background-color' value='#c0c0c0' />
                </zone-style>
              </zone>
              <zone h='9375' id='19' name='Country Trend Lines' param='[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:date:qk]' type='filter' values='database' w='81804' x='300' y='90250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='2' />
                  <format attr='padding' value='2' />
                  <format attr='background-color' value='#c0c0c0' />
                </zone-style>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='background-color' value='#c0c0c0' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='0' />
            <format attr='padding' value='3' />
            <format attr='background-color' value='#c0c0c0' />
          </zone-style>
        </zone>
        <zone custom-title='true' h='6625' id='11' mode='compact' param='[Parameters].[Measure to Show (copy)]' type='paramctrl' w='16000' x='82300' y='63125'>
          <formatted-text>
            <run bold='true' underline='true'>Country Selection</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='padding' value='3' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{0E103314-0984-450D-9216-0F2645B4D9EA}' />
    </dashboard>
    <dashboard name='Further Ideas'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='48899' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='48899' id='5' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='48899' id='3' name='Measures' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='0' />
                  <format attr='background-color' value='#c0c0c0' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='41750' id='11' name='FirstCase Map' w='49200' x='800' y='49899'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='0' />
              <format attr='margin-top' value='0' />
              <format attr='margin-right' value='6' />
              <format attr='margin-bottom' value='0' />
              <format attr='margin-left' value='0' />
              <format attr='background-color' value='#dfedeb' />
            </zone-style>
          </zone>
          <zone h='38750' id='14' name='FirstCase Weeks' w='49200' x='50000' y='49899'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='0' />
              <format attr='margin-left' value='5' />
              <format attr='padding' value='2' />
              <format attr='background-color' value='#dfedeb' />
            </zone-style>
          </zone>
          <zone h='7351' id='13' name='FirstCase Map' synchronized='1' trailctrls='0' type='currpage' w='49200' x='800' y='91649'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='0' />
              <format attr='margin-right' value='6' />
              <format attr='padding' value='6' />
              <format attr='background-color' value='#dfedeb' />
            </zone-style>
          </zone>
          <zone h='10351' id='15' name='FirstCase Weeks' pane-specification-id='0' param='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]' type='color' w='49200' x='50000' y='88649'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='0' />
              <format attr='margin-top' value='0' />
              <format attr='margin-left' value='5' />
              <format attr='padding' value='2' />
              <format attr='background-color' value='#dfedeb' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#c0c0c0' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='36' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='37' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='48899' id='3' is-fixed='true' name='Measures' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#c0c0c0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41750' id='11' is-fixed='true' name='FirstCase Map' w='49200' x='800' y='49899'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#dfedeb' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38750' id='14' is-fixed='true' name='FirstCase Weeks' w='49200' x='50000' y='49899'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#dfedeb' />
                  </zone-style>
                </zone>
                <zone h='10351' id='15' name='FirstCase Weeks' pane-specification-id='0' param='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]' type='color' w='49200' x='50000' y='88649'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#dfedeb' />
                  </zone-style>
                </zone>
                <zone h='7351' id='13' name='FirstCase Map' synchronized='1' trailctrls='0' type='currpage' w='49200' x='800' y='91649'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#dfedeb' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1EC93D55-9EB1-4DDC-947C-6F3E1A3AF36D}' />
    </dashboard>
    <dashboard name='GER vs. JP'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='19' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='17' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='90500' id='14' param='horz' type='layout-flow' w='98400' x='800' y='8500'>
                <zone h='90500' id='12' param='horz' type='layout-flow' w='98400' x='800' y='8500'>
                  <zone h='90500' id='10' type='layout-basic' w='98400' x='800' y='8500'>
                    <zone h='90500' id='5' param='horz' type='layout-flow' w='30898' x='800' y='8500'>
                      <zone h='90500' id='3' type='layout-basic' w='30898' x='800' y='8500'>
                        <zone h='90500' id='1' name='Contamination Germany' w='30898' x='800' y='8500'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                    </zone>
                    <zone h='90500' id='8' name='Contamination Japan' w='32500' x='31698' y='8500'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='90500' id='9' name='Incidence Japan (2)' w='35002' x='64198' y='8500'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                        <format attr='margin-top' value='0' />
                        <format attr='background-color' value='#f5eddc' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone h='7500' id='15' name='Contamination Germany' pane-specification-id='1' param='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306796042:qk]' type='color' w='21133' x='21934' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7500' id='20' name='Incidence Japan (2)' pane-specification-id='0' param='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]' type='color' w='19250' x='71200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='margin-right' value='0' />
                  <format attr='margin-bottom' value='0' />
                  <format attr='margin-left' value='0' />
                  <format attr='background-color' value='#f5eddc' />
                </zone-style>
              </zone>
              <zone h='7500' id='21' type='empty' w='21133' x='43067' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7500' id='22' type='empty' w='21134' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7500' id='23' type='empty' w='7000' x='64200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='margin-right' value='0' />
                  <format attr='margin-bottom' value='0' />
                  <format attr='background-color' value='#f5eddc' />
                </zone-style>
              </zone>
              <zone h='7500' id='24' type='empty' w='8750' x='90450' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='margin-bottom' value='0' />
                  <format attr='margin-left' value='0' />
                  <format attr='background-color' value='#f5eddc' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#c0c0c0' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{BB08DFD7-0D06-483C-A217-A8D46F41E42C}' />
    </dashboard>
    <dashboard name='Predictions'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#c0c0c0' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='[10] - predictions_for_tableau' name='federated.0m3vwg5077pvbz1bksxis1j7semv' />
      </datasources>
      <datasource-dependencies datasource='federated.0m3vwg5077pvbz1bksxis1j7semv'>
        <column datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column datatype='string' name='[location]' role='dimension' type='nominal' />
        <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
        <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='10' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='92988' id='13' param='horz' type='layout-flow' w='98400' x='800' y='6012'>
            <zone h='92988' id='11' type='layout-basic' w='98400' x='800' y='6012'>
              <zone h='35819' id='9' name='Germany' w='79299' x='800' y='6012'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='1' />
                  <format attr='padding' value='1' />
                </zone-style>
              </zone>
              <zone h='40919' id='15' name='Others' w='79292' x='800' y='41831'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='1' />
                  <format attr='padding' value='1' />
                </zone-style>
              </zone>
              <zone h='11150' id='17' name='Others' pane-specification-id='3' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' type='color' w='79292' x='800' y='87850'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='1' />
                  <format attr='padding' value='2' />
                </zone-style>
              </zone>
              <zone h='51476' id='16' mode='radiolist' name='Others' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' type='filter' w='19108' x='80092' y='47524'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='1' />
                  <format attr='padding' value='2' />
                </zone-style>
              </zone>
              <zone fixed-size='160' h='35819' id='12' is-fixed='true' param='vert' type='layout-flow' w='19101' x='80099' y='6012'>
                <zone fixed-size='209' h='11939' id='35' is-fixed='true' type='empty' w='19101' x='80099' y='6012'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='151' h='11939' id='36' is-fixed='true' type='empty' w='19101' x='80099' y='17951'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='246' h='11941' id='14' is-fixed='true' name='Germany' pane-specification-id='3' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[:Measure Names]' type='color' w='19101' x='80099' y='29890'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='1' />
                    <format attr='padding' value='2' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='5100' id='32' name='Germany' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]' type='filter' values='database' w='79292' x='800' y='82750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='1' />
                  <format attr='padding' value='2' />
                </zone-style>
              </zone>
              <zone h='5693' id='33' type='empty' w='19108' x='80092' y='41831'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='5012' id='34' type='text' w='98400' x='800' y='1000'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='18'>Trend - Predictions</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#c0c0c0' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='59' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='60' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone forceUpdate='true' h='5012' id='34' type='text' w='98400' x='800' y='1000'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='18'>Trend - Predictions</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5100' id='32' name='Germany' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[twk:date:qk]' type='filter' values='database' w='79292' x='800' y='82750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35819' id='9' is-fixed='true' name='Germany' w='79299' x='800' y='6012'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='246' h='11941' id='14' name='Germany' pane-specification-id='3' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[:Measure Names]' type='color' w='19101' x='80099' y='29890'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='51476' id='16' mode='dropdown' name='Others' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' type='filter' w='19108' x='80092' y='47524'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40919' id='15' is-fixed='true' name='Others' w='79292' x='800' y='41831'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11150' id='17' name='Others' pane-specification-id='3' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' type='color' w='79292' x='800' y='87850'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{21D71AB9-2291-4A51-B9D6-0FB3CA552D40}' />
    </dashboard>
  </dashboards>
  <windows source-height='130'>
    <window class='worksheet' name='World Map' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]' type='filter' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-11-23 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:iso_code:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581610988412931:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581610997878789:nk:1]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_895371954159882240:qk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <geo-search-visibility value='1' />
        <map-scale-visibility value='0' />
        <default-map-tool-selection tool='2' />
        <default-map-unit-selection mapunit='1' />
      </viewpoint>
      <simple-id uuid='{C82F291A-36DF-42AB-9E8A-73EAAF6D5B80}' />
    </window>
    <window class='worksheet' name='Country Trend Lines' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1778kex0kgg0m118q1p271qx5l7r].[tdy:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Measure to Show (copy)]' type='parameter' />
            <card pane-specification-id='53' param='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Measure Parameter]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[Set 1]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610995380228:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_895371954196762632:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[sum:Calculation_895371954183909380:ok]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_895371954183909380:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[yr:date:ok]</field>
            <field>[federated.1tqx0su0ika3du183um0b12cwg8m].[none:measure:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{C115E562-9AA1-49B5-A3D9-3825217E3F29}' />
    </window>
    <window class='worksheet' name='Cases' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E460A1DF-F399-4B33-9D8A-C9480C666619}' />
    </window>
    <window class='worksheet' name='Contamination' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2E3508AF-546B-428B-86F2-8168CD7BACDB}' />
    </window>
    <window class='worksheet' name='Deaths' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{78D9CEA4-F7B1-4D7C-9051-A710DAC29089}' />
    </window>
    <window class='dashboard' name='Entire World' tab-color='#dec77b'>
      <viewpoints>
        <viewpoint name='Cases'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Contamination'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Country Trend Lines'>
          <zoom type='entire-view' />
          <highlight field='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Deaths'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='World Map'>
          <current-page>
            <multibucket>
              <bucket>#2020-03-16 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{8E9C89E4-3012-4A5F-A6FE-6FF7DF161484}' />
    </window>
    <window class='worksheet' name='Contamination Germany' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306796042:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:Calculation_734086793217118210:nk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:nuts_1:nk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793230741508:qk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306796042:qk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:cases:qk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[yr:datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BFCFF678-AAB7-4E8B-AD22-9539D66FE4A1}' />
    </window>
    <window class='worksheet' name='Contamination Japan' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>11</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:Calculation_734086793217118210:nk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:Calculation_734086793299320838:qk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:nuts_1:nk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793230741508:qk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:cases:qk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[yr:datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0FC8A249-8D9D-4A91-9DFE-102C28D0699A}' />
    </window>
    <window class='worksheet' name='Incidence Japan (2)' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>11</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:Calculation_734086793217118210:nk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:Calculation_734086793299320838:qk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:country:nk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[none:nuts_1:nk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793230741508:qk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:Calculation_734086793306525705:qk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[sum:cases:qk]</field>
            <field>[federated.05u4i471ywr5a811qiskp1vheq6p].[yr:datetime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C426DAF9-35F4-4D3B-9BF9-344762FC9885}' />
    </window>
    <window class='dashboard' maximized='true' name='GER vs. JP' tab-color='#4f779a'>
      <viewpoints>
        <viewpoint name='Contamination Germany'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Contamination Japan'>
          <current-page>
            <multibucket>
              <bucket>11</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Incidence Japan (2)'>
          <current-page>
            <multibucket>
              <bucket>11</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{6E065582-64DD-4549-84CA-FBAF7C4B6FCA}' />
    </window>
    <window class='worksheet' name='Germany' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='3' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[:Measure Names]</field>
            <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:date:qk]</field>
            <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]</field>
            <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[yr:Calculation_1118581611130515480:ok]</field>
            <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DAE77FF8-4501-4D6A-9100-E871A0BE9E9C}' />
    </window>
    <window class='worksheet' name='Others' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' type='filter' />
            <card pane-specification-id='3' param='[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]</field>
            <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[yr:Calculation_1118581611130515480:ok]</field>
            <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5FBD9C64-D9A3-48D2-8297-CD24AA559EDE}' />
    </window>
    <window class='dashboard' name='Predictions' tab-color='#72bcbb'>
      <viewpoints>
        <viewpoint name='Germany'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Others'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0m3vwg5077pvbz1bksxis1j7semv].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='32' />
      <simple-id uuid='{1FDD80D1-DFFC-4A72-93EE-390090653271}' />
    </window>
    <window class='worksheet' name='Measures' tab-color='#17927d'>
      <cards>
        <edge name='left'>
          <strip size='212'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Measure Parameter]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[:Measure Names]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[Set 1]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610995380228:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_895371954196762632:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[sum:Calculation_895371954183909380:ok]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_895371954183909380:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[yr:date:ok]</field>
            <field>[federated.1tqx0su0ika3du183um0b12cwg8m].[none:measure:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{698ED573-2CDD-4028-88FD-3F9463813F77}' />
    </window>
    <window class='worksheet' name='FirstCase Map' tab-color='#17927d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_734086793146056705:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-07-19 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_734086793146056705:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:iso_code:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:location:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581610988412931:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_1118581610997878789:nk:1]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[usr:Calculation_895371954159882240:qk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
        <geo-search-visibility value='1' />
        <map-scale-visibility value='0' />
        <default-map-tool-selection tool='2' />
        <default-map-unit-selection mapunit='1' />
      </viewpoint>
      <simple-id uuid='{74449D2E-FA6E-41C3-B7D8-B26C061DC757}' />
    </window>
    <window class='worksheet' name='FirstCase Weeks' tab-color='#17927d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:Calculation_734086793138049024:ok]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[yr:Calculation_734086793138049024:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{56B464AE-E2F1-4714-9923-6E814F935025}' />
    </window>
    <window class='dashboard' name='Further Ideas' tab-color='#17927d'>
      <viewpoints>
        <viewpoint name='FirstCase Map'>
          <current-page>
            <multibucket>
              <bucket>#2020-01-08 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
          <geo-search-visibility value='1' />
          <map-scale-visibility value='0' />
          <default-map-unit-selection mapunit='1' />
        </viewpoint>
        <viewpoint name='FirstCase Weeks'>
          <zoom type='entire-view' />
          <highlight field='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Measures'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{B09C2B8B-FDB0-4473-A8B6-274CD9C0252A}' />
    </window>
    <window class='worksheet' name='FirstCase List' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[yr:Calculation_734086793138049024:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1B237090-B4E5-4143-BF1D-E0A0FCD9A7B8}' />
    </window>
    <window class='worksheet' name='FirstCase Days' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:Calculation_1118581610973171713:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[none:continent:nk]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[twk:Calculation_734086793138049024:ok]</field>
            <field>[federated.1778kex0kgg0m118q1p271qx5l7r].[yr:Calculation_734086793138049024:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{26815C8D-4B5C-44A8-9CFF-1353FC70DE7D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='38' name='Cases' width='144'>
      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
      Ehb/B+7BofbC09xHAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='38' name='Contamination' width='84'>
      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
    </thumbnail>
    <thumbnail height='192' name='Contamination Germany' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9SZAk2Xnn9/M19i33pbL2qq6lu4EG0AAIcIYagiCp4VDbYcx0moNkMhsz
      Heags0xnmXST2RwkszHNzIEcI0UNhzSBIEGgsaOb3eilqroqa8nMyj0zMmOP8PDt6RD5Xnp4
      LJlZ3U0U2Plvq87MCPfnz92/73vf/rRmsylM0+Qc55Bot9tYloVlWQghaDQaCCHONIZhGGSz
      WQCCIKDZbCKEQNM0dYwQAs/zCMMQANM0idJiLpdD1/W+ccMwpNPp4Pu+Oi86ZvT36HXi39u2
      TSqVwjRNk0QicaabO8c/bEgiNAwDIQTtTofA9weIF4YTXHQcwzAIwxAhBJ1Op+9cXdfRdZ1W
      q4WmaepveYzneeTz+b5rlsvlvnPlWNExo3OLE7+cr+/7vTFe9CGd4x8uDMNQxB9HGIaKoMdB
      ErA8LpFI9BFrlEgzmQyZTGbgmp1OZ4CAJycn+wS2JOooI3qe17eyyO/icw6C4JwBzjEaimDD
      UBGR/Knr+lDpH4YhnucBKFVFHhcEgTo3qtrEVxapKqXT6YFr6LpONpsdIGa5gggh1HWi9xBn
      AtM0sW2bc+X/HEMR1dcNw8D3ffXdOLVH0zQMwwCOJOwRo5imSTabxXGcsefKa8vzh81Lfmea
      5sA5QgjCMMSyrD4VSNM0bNsmmUyiaZr6/pwBzjEUvu/TbLUo5PMDhmjcmI1CqiOpVGpA0ks1
      Z5iKMkylGneN6elpNE0jCAL103VdPM/DsiwMw+hbtWzbJpfLDYx5zgDnGArP85T0jhqm44hf
      Ip/PKwkbhWQOuRK0Wq0BeyB6rGmaCCFwXXdA75erjJybdOYIIXAch3a7reaayWRGzvXcBjjH
      ADqdDmEYosd092EG5zBE1aU4ksmkIur4OEIIfN9XDGHbNkIIut2uOuakawO4rtunErVaLVqt
      Vt84EucrwDn6IIRge3sb3/e5dOmSIkqJcQQoJa5kGM/zaLfbmKZJKpVSzKPrOvl8njAMCYJA
      GcvyWqZpkk6nMU0T13U5a5wqlUrheZ5Sj+DY6I3aJXDOAOeIoVI55MH3v8uFL39dEeNpIYQg
      k8ko376u60rfD4JABp6Uzi/jBIlEgjAMFbEbhkE6nQbAcRz1+2kgDVzbtvviDkEQKIbzPE9d
      55wBztGHj3/5S25+7ZtMzM3z+PFjXnnlFfXduOCX/E4GtQBFyDII5rqusg+k7h41VHVdJwgC
      bNtG13Ucx1HennFzkJ6faBwhl8uRTCZxXZdOp4Nt2z217mhciXMGOIdCEATsrDzlq//4twAo
      l8t4nqdUh/AoHqBp2oCeP4wpgiCg3W4DPWM1DEPa7TaFQgHoJ1wpubPZLJZlKSM5n8+rscMw
      xHEcJcFTqZQykKPepkajgWEYJJNJUqmUsiXq9boywi3L6jHXZ/Ikz/Fria3NDa7rHpWDAyam
      pshkMnz/r77DtKlhzi4Q1CrYpolIJLl46w6pVErp7ZKQpQT3fV8RmQyGyXiCtBU0TaPdbpNM
      JpVqJL09juOg6zq2bQM9ZqlWq8p16rouYRiSzWaHRno7nQ6O4yhGkN9lMhmSySTAuQp0jn7U
      9vZwcyXu/b//gc78Ra5cv8FMq8LXJzL4+08xNR08CNqCx3/9GNdK0kmkmbn7BaZnZ4Ge52Z1
      ZYUPfvkev/3t36VQKJDJZBSTxGMKmUyGWq2GrutKWgdBgBBCEb+EaZp0u11F8J1Opy9i7Hme
      cq3CcdqGZMZisajcp2rMz+phnuPXD7Vul9d/7w/Rj3R3TdP4aHudsLXfI/4jGJrGrVzq6K8O
      P/nZW2i/+U9Y/uH3aWgGV0OHr9sG737vu2QXL3L5yhWazSbJZJKrV6/2MYGu6xQKBbrdrtL1
      HcchDMMBBkin0zQaDfW5pml0Oh2lEnW7XaWmScjVRqpsA6kVn9rTO8evPZx2z/+fyWSUp+bq
      13+T5e74xLcvZwz0n3yX3y5a/NMsvDGR5Wo2xR/kDa5vP2b1p29RyOdZ/eU7Q8+X0j8a1AKw
      LEsd0263qdfrJBIJpT7JIJrv+3S73T7ff7fbxXVd5fLM5XID0h9AcxxHnKdDnwNgfX2dhYUF
      9p6vsfv+Oxi6xuI3f5vN5Yfc2V9RgbFREBx5aOg/rhsEPG17zJoa3W/8LotLS2PHkcZzLpdT
      n8k6ACnlYXiiWzQt2nEcEokEmUxGxSHiOF8BzqFw4cIFDsplNh98yPWww5LbpFGr4doJHjZG
      J7FJaEf/xZEwDO7kkkwkbfYe3jtxHJnxGf8snU5TKpXI5/PKaI6nT8h/6XRauVxHET+cM8A5
      Itjb2eHBX/4Zr37r99m++zU2rn+RdC7HzvYOmS99g4Pu6BSH0+Dnm3tU9veVBB+FUekW8nPb
      tikUCn0qkvQYJRIJTNNUxq9t2+OLdl78ds7xDw0zc3M8nZxma32dG7du87Of/ITKxw/4nd/9
      XRKJBPf2dylVN09UhYZhu+XQDUIWu2cvrxwGTdPI5/Mq6S2dTvcZ16e9htbpdIQ0LM5xDt/3
      CYJAZVZKY1PTNFzX5emf/DtuZcfbjFFbQAjBw4Mala7L1xemeXhQ49a/+JdDDdLP4l48zyOV
      So08Rm80GrRarROXpXN8PiBzZB4/etQj3nff4Yd/8kcEQYBhGOgi7DM2x8HxfT4uV8nYJt9Y
      nEHXNMLkYJXXaSCEYGdzoy8Ydpp7GUf8ALoMT1er1b5U1HN8fmEYBo8f3MfzPDqPHzBV6gWQ
      Pvz+33AxZfN+YHHgeCeO814roKvpXMxnCYXgScdj+je/RXAkmc+CrY0N+NF3qP/FH/PRn/+J
      SnT7pNB2dnZElCPT6bTyA5/j84lms8nW2ho3796l2+0qQ/KjH72Fu72ONzXPpb1V5tInqEKi
      pwzpmsbPDxpYCxexm3WMThPTtpn99n9BoVgETs7z/+hHP2Bm8wnTqQQCeFC6wGv/+J98ovus
      VirHRrCU/O12m1Qq9feio53j5YRpmtT3dhB37mBZFp12m/L+HpnZOQzT4MbWE3InED8ceW2O
      fv9CIUXCOUS3NLBS7Lc7rK+tsv7zdUSnRe6V17h0+85AqoTE0t3XWUll6T58l2oIrf37tL/8
      VdJjqr1OwtbD+2hbW1sizn2WZVEqlUZO5hyfH9z/4d+SXH1EMWGTsgwsXcf8hHQhEKy1XZ5X
      G/yjhUk0NFqez7NUidKdL3Dh0qW+/j2P33sH33FwPY9mEPKb3/o25f19iqXSC/e0er66yuMf
      f3+4G1Raz+cR4s832q0WleerfKOQPbNKLD1B0B8Zlp9vNNq8MXXc9CpjmbzmN6i8/T0+Xlni
      1m/9Dp7rsvK9/4/rXgNT13nsCl79w3+OYRjMzs298H2FYcj9n7zF7W/+Z5jRoEM8nfScAT7f
      aLVbXDUFThBw4HikTV25NidSn4w2vjlbHPp5KZkgW93hoz/7Y5KByytJA45WnLYffmKaFELw
      +KMPSeaL7N7/AFMmC4Wx5kfdble5vs7x+cT09Axb3/w2m9UKxbkFlu/fY//+B3xrvnTiuRpa
      3yow6vNhqROWofO6EYAVoz2nffabiJ7uODz+yVtcaJTJej6zmWRPBYq2voguddVqlVwuN5CW
      eo7PDxaWLsLSRQB2DY2vXZg81hgQQwlYYtR3484Zh6TG0JqC08D3fZ789V9yxwzQkzbFZI+m
      lQ0wqs7TcZyhPV7O8flDuLeFZh0Tv/z5ogR9FtRdD3/p+onHyViWaZo4jsPzJ4/plvc4cLp8
      XXPRtX6z98RcINd1qdVqqlrnnBE+vzBn5nny/AmXMgmsF/QEvQjDbDse3Ve/yt3bd8bSX/Xg
      gK23vgu+R9e0SXsOFzMJbMNgpdogUcwNnKPt7u6Kk5YU3/fJZrMDCUfn+HxB9vnZ/Ms/4fYJ
      +UAArY5DMpnAcbqYhk4gAA1sw8Q0Tqajhhew2XHJf/NbLF65OvI4IQT3fvkejeX7/EaxP/Uh
      boXE2edU2aDpdHogP/scn080ajW8xSuEp8gK/fmDX5Iv3aBWWWZ5s4uhe9i5NK9eus6bl8e7
      MR0/YOfyHa6++vqJnp8wDKlVq8xZg0ylMcgEUZyKAc6l/jkAHn/wPlOP32cW0NLJE49P22nc
      oEPKSvPVu0vohsFsImC57p54rqFr+BG3fKvVYvXj+/iex9yly8wuLBKGIU8++CXb68+Zwedq
      erizZhybnkoFsm27b6eOc3w+0Wg02PuL/8DVzMnp0FLPd30fO9rY6gQXaBTltsPHnYCFN7+B
      ePQBV1IWhq7zuNFh8rf/gCAIeP5X/5H9Wp3fv37xhe7pVAygaRoTExPnBvA5uP+jH3Dj4Lky
      guN1wKPqgqM4iQmi3/9wr05Gg68szqjPvCDkHgmSbgfz6i28Jx9zJ2MNjHMajGSAaNcugGw2
      qxoKnePzg8reHvXdHS6++ppqL/Lg+3+N4bsE1UMIAyZ0mEsnME4ZHxjHJIr4Baw3WniaQQDc
      nCzKj4/O7f1e67qkTRP7FEb1MAxlACGE6uor+7TLxkLnq8DnB/VKhd1//b+Tbzdp//5/zcwX
      v4xpWbRbLcrLD3Hefwcch8MQxPQMX0pp5OzRZuVZVody26GDzsViPvY9R2MM/3vkvdQr7HQE
      symNvY4Az0FwxABA31aVruviuseGSrTP4nmtwOcH9//0j7nw3k965ZACDnWTIJEk0WlRIlQS
      H2A3lePg1Td4kza6Njzd4SwM4PgBq80ut2cmPpV7+bvlJ3S6IamETq1a4W/vr/C1W5cxu90u
      uq6rCFoqlRroriVbV8uK/PPUiF8PCCEo7+0hgOmZmb4enRKjhJnveYhH99T3tgZzwgeneSRu
      +8+badfZrlbZsQULmUFVeVhe0DCGkL9buo4fDu4R9qK4NlNi9bCOqRksLF3hX924iWWbmLIH
      o+zJKPdwsm2bTCaDZVmUy2W16UGz2aRYLJ67Rl9CdDsdnt37kE4I12/fJgwCHvzge7zx+38A
      HPXWdBwOy/u4rRbpYonSRE/Cxhlh5/lzplr1k3WLI2iaxuLKQza/9BsknCoTydFG6Xa9yXat
      yRcvzIxkQEPT8D2PjueTtMxPnGxRKk5SKk4OfG5KaSCEUM2Hstms2tjA932mp6c5ODgAeqtB
      o9Hoa1t9jl8tZNeGna0thOfRrTfY+OhDdNPkxle+yv7qCs8f3SdcX8Nu1cl0O1gINjUT43/6
      n1VZYhTNlSfMn3Ee076L/2yZx7de503nQGYx90n/Z3sV1t97gtPswIWZESP1GOq16RKPywc0
      vYA3Ly4M3rc89ozzjMKULaxlb0Up/eVWN91ul2QyycTEBJ1OR+3FKo87x98/JMF/8PbbvPrl
      LyuVZnJykvZ3/iPXt1ZJyA7KAorAdJRKjlSYReGz/IPv8cY/+y8HdoLR7F7t7VmJa25/i/uO
      j7h1EQ0dQa+DRKPrce/DZwTPdrjQDelqsLyxzytLw5lAIDB1nduTRd7fPRjYnO/Tat2gh2Go
      Ng+TLaalumMYBrZtKxWoVCpRLBYpFot9XbnO8feHZ++/x0//zf/J6soKV2/fUqqo0+mw8e//
      Lxa31xTxA6Q0sEZQsalpXH/nLZ79+C0Anv74hzz4T39GEATMvf5F3nE1HjS7Z26Zc6txwM/K
      TRw/4MnOIQ/Xdnnn7Y+ZuPecdMOh7bl4rsthow3i5H6jYsSm3MfHvDhM2VIu2nddtpsG1B5O
      BwcHdDodJiYm+vZgPcdnj74msJ7Hwte/yaXLl/vewcb77zGz/RzO+F50wP/pD6i8/gbB3/wF
      s16Xj6sVsm+8SXLhFcp/9w7a5bOt9IsEJNZX+EH3Ao1mh9zjdXaXnzGVy/DD8iH7jSradJHb
      B5N8IbhE2jwqxIp5i4QQfFSuMDmk8P2kHJ/TwgSUv98wjIGCA/l5IpHAdV3q9Tr5fP68Uuwz
      wrC+TNHl/+qbXxv43nEcmrs7JEybQuCNPHcYHAFBt0u71aI+OUt2f4uLjz6g+/B9DrNz2I6g
      IyB9BmMYYDpwKW49YzsQ/FIL6AYe650uc8kUS4kE5swUPj4NTygGiAfQnlYbLJaKTKaHN7f6
      NESwUvykVB9F2KZpYpomQRBQrVZJJpNqE4VznA3DOqvJ2uwgCGi2mljmcVfjkzxuz9/+GZff
      +SF67FWcZmPr9aVr3Phv/wX5QoGp/+F/5On/+r+Q7foc+oLuynNm55IkX/AdWxpcMGBLBFyZ
      XcQXR+5NwAgEB2sdwtfakMr2F84LeHfngLlCfiTxj8NZjGOz2+329ko6WgX6BhrSf12i0+mo
      7SjPMRrymfm+j+/7JJNJHMdRW4Jquo5tWUrwGIZBPpfv65As01I8z+vbBUW6qf2tjQHih9Nt
      Kr2wtcbqf/p/uPwH/xWhEKS9XgB01tT4velPXgClaxp3ppKs6RpeyyP0BeFEgvl9l6kA7v3i
      Y8Rv3GE+l0HXNPww5Bc7h7w6N0Uh+QkL4DmZCUzp0Rll1EYliAyWSaKX20+eYzhc18VxHIQQ
      WJalSkuTySTJZFI1npV718rnu7W1xczMDKZl4R1tBhc3ROUO6MVikdD31GfQT/gnEXBWBGQf
      fcBmeRc9mWIu8EHjhTpAj0LO0Hh1OkmrZOJpBnlD47FlsFlzuZEVhPfv8146x61b16l2PS5P
      FD4x8cMpVwC5Z+uoBxX9XNoIEvKlnXUn788D5NY96XR6wGkgCd/zPFrtNr7nqecqPXG7u7uU
      SqWB3U+i2wN1Oh0KhQLCcegKgSYEBj3D9qySe/Fg52hyn8bdD0IIQSZCJ7fyFiLX+1vTNApO
      k+fvf8QOOraucTA7w2vXLyMEdP0A29AxRqiCcZUnegtCCDarNWrNNi3XY65U4OLEcdxD293d
      Fa7rkkwmVcqDruuYpnmqaG8ikejbyubzjnGbScvvPc/DcRy6rosY4WKsVCrkcjksyxpqL8gY
      TS6XgyCgvr9H4LrsP37E7fd/+lLYZsNskFFqdvz7toCtyWnaIaQqhwRTU7x5+8bw68hzh3xX
      d7o8eP8DbiUM0DR2A6ibNnMXLrA0WTxuiyJfjNxOPrrr9riH2e12yWQy56kRQChCRCj69Pco
      5OZtzWZzbBduuX/uxMRE38Zv8jtJWLqu0+12sSyLmctXSKfTdLc3Bmy2XyUzDCP409iaKeD6
      4b767vnuDpXLS5RSg3lG8bsTQtD2fJ6sb0K9yp2kiXlkJC3pAB5Pnz0h1K73GEDupB1tWR2d
      zEkPUK4gn1fIPXCDIBjZj16mmHc6HUXA8ZqL6HhygwpAbU4hN66It7GXLe7DMKR9/8MXuoc4
      ETa8gJaAaUvvy/o8C+KMOMwolQw9bgwhBEsGrKw8p3j7xlB6dP2AD5ef4LouE7MzrK6t8/Wk
      jm1oQ64KV22dzSfLxyuA9P+HYYi0C6I3MQqyd9DnmQGEEDx9+pT5+Xll3Mbh+z7tdlsdLz/z
      fX+AaWq1GsWj/BzXdTk4OMAwDFWPEYahGkN6hkzTJJFIEHhe364up51/nAEcNN7ebpFJGCzl
      TBaTJpkXLDpR9zzEmwio9BqJvpQHOS9g6WCXdz/yuX7jKsXYSrC8vsEtrwUa+LubXEyPj1Np
      msaFpNXzAkmVJ5FIEATBgEcouuSOGuzzjtnZWRzHoVAoDHwnhMB13YEXL2Mr0eMkgct3UKlU
      WFhYwHVd9vf3WVpaUowThWVZ7G1vM92oID4FbXTa0vnPL2b4t+8+Zcmc4l/vPSVM2yxNpOkK
      nT+8vsRk4uR0mHjMY9gqMCr4F4etaVyqHfDL50l+49pFEobB8m6ZYiaF53nKc2WPIcc4o5sy
      z98wDPVvGEZJFVkj8HmFdEeGYcjs7OxIYRAtMJKIHytVqVQqxd7eHkEQkM1mlRt1YnKS7e1t
      lZclhCCZTKrvDduioxtAoGIFZxFOA23yhSAwPB51aiScgFnNxN0NcdI+jw7rfGN+ML142JhR
      KX6W6w9DAo1X9zb5we4u0xMFCq0GbcNgVgdhnE5rgWNGMKN/vMjEUqnU51r9cbpdfN8f6wSI
      21ejIAOScnPnjY2NPoGUTCZV0Gxra0sxnFRdM5ksNV2HMDgz4Q812jWd//4Lt/jJfot/mshj
      HJHw/lyCN+fTZxofxtuTp52vpkESjbuhz261SjUIsc0QO1J/cBrjXzKmeZZ209LjIOMGqVRq
      7CbEnweEQYCu6wP1EcHR52qpNc0+tWVYdD3ORIuLi5TLZZWHBWAcuacXFhbY2NhgZmZGpa8n
      EgmCZBratU/1nbwxmWbZ8vDqHoETUkydLg9slIszjmGfn2QcF3TIhgGGDk7g87jaxU0l+ULK
      wtZiK88YN6wygoeVyw1Dt9sllUqRzWYHeoVKeyJu0MTH/IfCMEIIEokEqVRqgHhrtRqe5zE7
      OwsMEnfUvSmDicPUS3meSpXQdaVHLy4usr29zdzcHIZh9Izh7qezeZy8vqZpZDTBG6UElJJ4
      CKwXiJaNk/6nMdiHfW8cfbTuh1xYnCZvm3xYrjOF4KJtqvSQceMrC0zWBo/bVlK6SxOJxNBG
      uZ7nUa/XB86TBp30NMmtOK1IDsyvIzRNw3EclZcTJeZiscjTp0+ZmZlRx8rmAp1Opy/yC4Mv
      SeZaua7bH0nWjnVpXdeZmpqiXC4zPz/P+uNl5oKz7b542vuUsIcQf7yGPH7OsL/jGGVfyu9G
      zakThpBJMZvq0ePX50o0vYAP9qt8KW2fqN4rBpCVYeMgJYL0VESJV4bmhyGq/8q8FzleJpPh
      13mj7uh2Uq7r0m63yWQyyi6ShC6DjK1WS507qtt2s9nspUm0WkxPTyviEEIgQtFnTSYSCTzP
      63ma3vpr0hoEQe+acvWIp1FIjHI9nhWf1rsbKak1jQ8DCFMJEq6HCAWXQo9DdMJijjul/r61
      WctgKpviYbvLhA5NP2TG1MjaVmxYrbdNajz/f+xkIscVCgXlxvN9n1qtNpLjxhkmiUSCbPbs
      +1D9qiGEoFarKfVRCgZN63XSa7fb7O7ucvnyZZrNpnJf2gmbdqvd23ha1zEMg06ng2EYPH/+
      nOnpadLpfiMz6iuPErOmaVQqFZ698wu++vHfYQzx6Y/zsQ9jjE/z+ZwlHhGFpmns+SFVTSPQ
      dS7PT1I46jnkh4LVRpvZdJKcNTpjwQ8Fh12PrGWyWW/RDUImRchMpHeROezm4xOPBruin7Va
      LZXh2G63CYLghR6m3I4pn8//WqVURG2e+POCXldt27Y5PDxkcnJSrZLPnz9H0zRViipjLJ7n
      sbi4SL1eVypVnNjjL1u6Xw+3n2MC4SkMvyg+CeEHbps/erjBH9y8wP/9wRMW0waOD/lMmm9e
      usCEPdyuiT6jUeiGgnYpz+1CBiOW623qGtcLx1ViI/V7XWMm1XPRXz9aJe7v15FVyEKI03WH
      HrUtjewc0T1yBSYSibFxBIlhHCtXkEKh8GvDBNHgVlzSSRVxcXGRBw8eUKlUgN5qNzU1pVaL
      3d1dEokE+UIBXdNUhi30E/kwgnYchzAMewG1dutEoopjmOAb9vmYAbB0nXKzRdayuFDIYllJ
      2k6bp9UGEzODe4mdZo6apqEdRY7jxP+i0DSNpheQCkN6+bI9DGWAuLQZFyCDYwl2GoM2mgcT
      9XJAzz74dWq5InP9pQoURa1WU5HhRCLB5cuX1fOpVqv4vk+n06FYLPZWT99HM00ODw+ZnZ3t
      k/zSZpLqpmQeKZiCIED3jgNtUZtBHj8Oo5j4JBhWin/+6nUaXZf/7kvTI8c9C+T1bV2jXW/h
      5VMvvBtNfB5Nz6dg9AsSPT5RmaAFqCqkYTcSNWYTiYRSj07zAGXniSAIBhK7ol0pXmbI5+T7
      vkpUkwiCAPeokGVtbY1KpdIXE5DP17Ztkskk+Xy+t0JoGpNTUzx79ox6va7GlN6ydruNph0X
      1ORyuV6kOAyxfG/gPZ7lXl6EWCXixuVZMMwwl/+uiYBH+/VPPD81T8ukHhynnwsherlAcaJ1
      XVd5NWSWo23bfRJeSh+Z5xLdSO8kySPTeKVrMD5uu93+tdiPQD4bQD0jaQdJv3wul+PatWv9
      rsSjLhzSPWzbNo7j4Hkulmlx7do1Op0Oe3t7TExMkE6n2djYoFgssrW1RXPlCdbBPoGmY8wt
      4Gka8xw/87Ounqe1F4YhTpynXW3i8xwW+LKBVKtNw8uSNfWB48Zda9gxSUOnS2xL4N3dXRGd
      THQSjuOoF6zrOslkss8boVxzMU/CuAnK3COZ0RiNREtmSqVSTE6enGfyq0QYhpTLZRzH6RMO
      spBoZ2eHUqnE9PT0gG0g63p3d3eV/ZRKpQaYXtM0tra20HWdTCajunE8/j/+N267PXdqCIQC
      TK1flZHnf9YYR/zjPIKjnC/D8AtXcHF+gktDNuYYdY/RXCg57g83D/hSyiKpHZ9rAsp3HeVm
      TeuF1uWyGx1MBmdk9HLUJIatLlLqDVv2AOUafNkhpb+u631CIQgCtre3eeWVV/rUHvncWq2W
      6r4tPT+Tk5OYpqmeQ9R/Pz9/3KDQNE0ajQaG0wH96PkCBr1OCvKcF3U9vghO8jCNC2JFMU7F
      yepwOZscetwoeye+ugRCMGnopGJGte55Hj/96U/Z3t5mZ2eH5eVlgiDg6dOnrK+vKz1Vlkye
      tIO81I2lhI/mrsvJDHONyc9kYtfLDs/zVH6OtIXkZ5qmKVUoevzOzo56dnJFlTEA6O2DJZ8v
      9OvD0GO6VrNJgc/++dQCwZYX8FCYPBeD7zoQAi98Mb38JKEZP25Wg52Woz6LHz/M9olfwwsF
      geez0nFVXQKAbpom8/PzTB0ZX6lUivX1dSqVCul0Wrk2pcdG6rfjbkD+Owshx12iLzui7SR9
      3+9LfltaWuLp06fqOfi+T7PZVFJerq6yz1IQBOzt7fXVZEefY/RfNpuhnMpRCQShpuGj0WVQ
      fY2iEQhWvVDFCEZBCEEgen3Z9nITFC5e4c6lS3jZPEHs3I/1JA+tdF/cIS7xhzFwbxgAACAA
      SURBVBHzOIM2qhpF77mi6WSt4S3dR60m8eskdI2F6SK5Up4P6x11ngkol1x0E4xMJsPKyorK
      ZZEXOyn3P7rkDyvtG7c8y5s/S4bqrwIyCBhVN1zXVbaAzHVqNptomqakerzQqNPpkE6nyeVy
      apz9/f2hyzj01KtsLs+Nf/mvONzf58nqU5xKBXtzjdu1/b7nHMWq0LmytMTTjTVujIn81ELB
      o0SOgmVxc6JIQnYO13V8cZx89sQNuXpplvXywfFOLTGi+yQu0PgYJQRNLyRr9x97mmtEj5lM
      9FT2fctU35m6rnP37l1arRZf/OIXabVaZI56Mb7++utK7dF1vc/TM+xC8azGuJokxGBEedgD
      eNkZwHVdtUpF3Z8yJ2hnZwfTNKlWq4RhqJwHUsKbpkmlUsE0TQqFglopdV1XKlSUCKTHTQbJ
      bNtmYnqa6bk5dF1n6+kT9v/03zE14t0YmkbOMtkrTLBZPaCgg4ZGWu9nloKukfVdZkpHxH80
      h0IyyZOaiS40NMticqJAwbbZMMyBCq/TqjZxxG3C6GfTusb2/iEHxiSTSbvvnFE2RlzoSnSC
      ECuSiGgKITBNk2QyqVKdAcUEkqtlMteo4peo3htVleI3OK6rtDQAX+Y+Q0IIlbcj1R5JwPJB
      W5aF53nq/mXMJAgC2u02vu8zOTmpxgD63KZxNSKabiFVJNmjSQjBzKXLrNpJptx231yrQci2
      neby/AympvHK5ATVXI6661Fpt7neqmBFmEDTNO7isbO9zs78EnPpJAhYSCeZv3y5j9AfH1ZI
      tWpoer/qEn9WcUSlvPw+avRHHS7RcSw/YLvhMBEpwzzJAB/2mY7opZTLa7fbbRXICcOQWq02
      4IWRgS6p/kgPSFzHj9oLw9yjwNC89+iNJhKJl8ILtLa2xqNHj+h2u6ytrfHkyRN1T5ubm2xt
      bWGaJru7u8BxurOU/vv7+zSbTSqVipLcssePjHSvra1B5IVLgo4Tjiymie7k0+12lTt188lj
      Ft3+TNwtX1ApTPHa4iKFiNAp2hYXcxlK6TTP/GNHRRSzps5es0Uv91oDjt7h0Wt73mwxWS2z
      FLON417EuK4+TvJHnSbDjqmjcanY3yX6JHsi/p2maRx0PUpmJBVCttrodDp0Oh1qtRqu65LJ
      ZMjlcjiO05fjI1cD3/dVfrv8XF4kKqlOq85IZnlZKswODw/Z2dlhbm6OcrlMOp2m0Whw//59
      tY/as2fPaLVapFIpDg4OSKfT+L7P1tYWyWRS1QSUy2UuXrzI5uYmjuNw8+ZNlpeX2d/fZ35h
      gbXVVVKpFBcvXqRWq5HL5ZQgidpFmtbbsTMMQxzHUc/XaTVxw5BVDASgGybzCzNcGtNecL9e
      547ZL2XVSgAEwTBHhAYI6p0OphDkRhTGjLJFTvp7HPK6RsVxyWZPX347zGVa7bjcimSQ6jKY
      s7m5yfz8PEIIpqamWFtbU7pnXCJHg2PDoGkalmWdWZUZdq1fJe7cucO9e/cA2Nvb4+OPP8Y0
      Tfb29qhWq8zMzJBMJllbWyOTydBsNqnVaty+fZswDDk8PCSRSNBqtRSD6LreI/z5eaanp9nZ
      3kbXdbWS5PN5nj59qhhQriRRNUWuNpZl0Wo2cTbWaU7N89rlK3zh8hVeW1piKk78UoJrAAIz
      DFQXhTghuqEgYdk9GyD+D7g7PUWzNE03llYQR5Sp4kZydEUYJvXjxxcMjUbbidyO1qduj7rG
      wLix6+nRkyXBS2+GfNBxA+akVuqA8oScFvGb+VVD0zRKpZLK+NR1ncnJSTqdDnNzc+RyOVX2
      WCwWCcOQ+fl5tZmIjA3s7u5iWZbqEarrOtlslrW1NarVKsViEcdxVOlkOp3m5s2bTExMMD8/
      z+zsLN1ul4ODA7a2tqhWq2har5Ao9H3WvvddvtKpczmXPUWhotajAAEZ22LfHaxRBrA0jWaj
      PnYDina9hq0PZ6D4mKdxgY6DEIJNL6CUTQ1VpeKxplFz8kKB3nX7VbO1tTVhWRbtdlvl4Eip
      lUwm8TyPVCo1UP0Vv8g4rovfjGS0uASQG/S9DJCdHuTDdRxHFb9Ij5jjOKTTaer1Oq7rMj09
      rVqbyBfV7XZV5df29jaXLl1SaqRc7eSYUrB4R82toiuojA3IQvhOu83Bj9/ida/dF9gBjsPC
      mnb8u/y7dwBCwPt7+9zt1BRxbvohaU2jrhtkpueYz6T7mSpynR+tPqcQ+iwQUDDO5pKMrvLD
      JHbcHQrQCEIOSwVulgbpI85YUSaJfh4CD3ar3E5EnDOyOa7MOJRejlQqRRAEym15kjojbYJx
      DCBErz2glKipVKrv5guFwkvZY0hGcaM1zXJlSCQS1Go1tVlI1COkaRr6kTsxkUhw//59stms
      YoK40SdVwLhgiRKGaZr89K+/y52d50zYFpY8dtRzH8IAfhjycHeXdLvJBVMjCAXPQli4cIlO
      EKADc0N6cEb3BxaiFzC79+wpt81jIRaV9qMwTIKPMpIBPN9nOZ3hi7PFsQ6UUQZ49Ji667Nf
      bXLZPsrdkh6gIAiU6zO6ZdKwjgfjLn4SpFSNvlTDMF7abZd832d3d1e94Lj3Syaqra+vc/Xq
      VeC4CZZpmuhH7sogDLmwtETrqDRSCgEZUY4HDCWi8QDDMHjy8cdc21pjNp2UB/RPOCr95U/5
      2dFPQ9MQocBF42Eyj2UYzGazlBI2pXHvMeL017Teni5GJodw6icauONshPix235I0zB6UWbD
      wLNNloqDJbPPtncw0jm8Vg3NSlDtuL1daUoFJrLD+xblbZNWNsXzeosLttFbAeQWqTIGEOdg
      GeX8NPRz+fIlseu6TqFQeCl3nYxmbMJo9a5er2OapspglYFDmRkahiEcPdNatYppmmqlk+kQ
      khDibemjDCCdC6vLj9Df+Rk3rKPj5LyGqjsMMgk9dcAPQ2xd75Psw44dQGTs+3v7XG9Xj3vz
      n1ItHhUjeNT1SU4WuHak6khGG4a/W13D8wySusfT7QOCfJ5C6NHWTP6bL7wy8poCqLs+641O
      LxAmiU8+ZKmjmqap9g+OLsWfBNEi+iAImJiYeOmIX8ZDZFsS6OXsy8ovaRdIoTA7O8v+/j71
      ep1Op4PruszMzLC5uam8YVFDLWoXaJqmospRB4T08du23adW+b7Ptdt3eGdjnRvlrdE3IcSg
      DSChaehC9Ii/98HxOWeCwDZNPtIS3AwcUmdonjssIAaQMnQmUvapdqhZyufYb3exrQTffH2a
      arvLUjFLudkeerykbQ0o2CaFyVx/V4ioD1/qt7LiKb4fmDQM44GrOKPI8WSODBzri/Fc+ZcF
      YRhSrVZpt3udG6R9E29vGL33TqeXYCWzZh8+fMidO3fU/closGmaOI6j7J+oOmRZlrK9pDEs
      7SrTNPE8j9WnT0ml0+g/+C4X7ZhdFifgYQwQMYSPVZoRjKLOOT4lPoYQ0PB8Vp6vccsUfYQ7
      zjMTXdmiaIaCw4kSN4v9KkzcyH0RDIsLqCcYd4fKcj9JtHEilxVN8cnIneUlZApF3KPxMld8
      SVel3MlF07ShZZpyb7WoQS+EYHd3l0uXLikilpFcudJlMhnFEFIdzOfzeJ7He2+/jf5smcyX
      vsqFpaWjFThk+6MPMZ8uc9nUqfkBcwnrWMoPwzAbAGI2QpQJxkAeM3CchqYJ8rZJaX6Bw63n
      TB5lbZ6GSONxAoCMrrHtdBFiMCA6Sgs5C3PEx9A2NzeF1DujOlvUUJUJXIAiZvn9sJZ/wzg9
      Or48V3ZHeJkgo6yGYdBoNFSWbDRPPwopuX3fp1wus7Kywpe+9CWSyaRaOaQd0Gg01PGyQ5xt
      26TTaR6++w48WSYMAqZdh6mExYOuT8W0ue53WUzawzeqGPbZOMZ4AT98//UGfgEETS9gs9mE
      7XWupPs9SOM8N31/A8teyN2r8+hH2sg47WLcWKMYJW54m1JFkV4IeVEhxECyl0zoGqYSjYK8
      mGyr2Ol0em1AXsLOD9JNK335svBcFqxIPV4+BykoyuUyAPPz89i2TbVaVcluMtVcxgwMw8Bx
      HFqtlloFfd9HrK3wBS0AQ0AqAZrGG6mjl28P8fiMMnK1fsIcENuj7IL4MfFxB4aMjq2RtUxe
      KRb4sLwXG+p0BCsRHqV8xFWkaMxomJ8/blOcZiUAMKXLU54ogzDRVh9RD4T8Oy4NwzBU/Syl
      RJSxhXQ6rc6VHeBeNuKHXrrDzs4O6XSaMAyZnJxUGbLRCi8ZL3Fdl3K5zOKFC4pJpqamMAyD
      +/fvKwPfcRzm5+dV0mGhUMD3fSqVCq7r0mg0qDpuj/ijiD+jUdI+/rci4KP/DTDFEJyGMSDG
      T6Lvw6eVKpeGJMiNHCpK6EefTXou640OS7nUwG6P8pw4BtSayO9xhhlglJ2dHRE/WdYASAkm
      iTfqrZAei+iFZIG4XEFyuZzKgc/n8y9tmnO326XRaCiZJovaJycnsSxLbVrRbDbZ399X6c6A
      2shOCoxo1Vc0v18+F2lTRHeHKZfL+J6H+8PvcTvu2pR6OvSrH59UlZHX6GOYISvJUCM6fu3e
      sfd29rjRqY4VbvHAngyoRfEEnbsXZwZPHpj+yR0iRq0gagWIDhadYDTffdimbNKPL3sHRTtL
      y7HknljjJvgywDAMstkslmXRaDTwfZ+ZmRlarRbb29tks1kajQbNZpOFhQXlopQtXWSDLPms
      pMoonQFytZRuzU6noxgFeqvG/v4+zuJF9tZXmBll4IqBX8ai3WlS8w0mkzr1rsda+ZDpfJ7p
      bIaU7OVz0nsZuzLEIrqaxnNfMGX0jNn+YbQB4o+OcnxrAsPz6AThiW7VUWpS/LrDjlc2AKCk
      UrRLc1QtGnYjcjmXgZxoM62ohJRq0MvMAFFpnM1mFUEnj3KgDg4OmJqaYn5+XsUvpJCQx8rn
      Iju1yb8lk0i7wTTNvr1/I7ooS19+k+2dLWZU0fvRmqTxQhL/490yjitIz2R42tIQvse91RVC
      O8m379wmEQ+8j4wbqP+NhBCCnWqb0mqL52mdhKmzMJnggj3eiI365uUcQl3n6dYBAaDZFnem
      cpinaLl5Vuw5Xo8BotFH+ULihelxo0MeI20D2SNUfi6PsyzrpWx/LuMYMg0EONpmKEM2m+3V
      RRz17JEJgkBf1wcpOKRnTI4VXW6lOihtLfmspc0gG2rZts3BwQH21Rt0n31MQtdP56Icg/ls
      muf1Fqt1h1AYXJiY4pX5OdYODhBy8LjaM/CeROzncDT9gMLaATO+YKYe4BLwC02wMJfupV6M
      YeBtP6RjmBTCAE+AhuCVZE8grbk+jueTHdOFpDf1kx+UpmnUvIDNcpNKuYW+2zxWgaQqIw3Y
      0wwsjeXozUk3n23beJ5HLpcbWQP8q0Sj0VCJeXAcoa7X6xQKBaX2ZLNZdnZ2SKVSinijwSkZ
      0ZVVctKREI2wR5+tpml9W00dHByocbPZLNOXL/Ng8zlf9Ds9mvsEuv7C1Azzk4PvsZTJjDpl
      DI4VFREKPCGwIol7y6s7zEVk5rat8XuTNqOUGPk8hIB9P+SLeZsd1yet68wdnSSE4KJt8KDW
      4TXLHJkuPy42EHV7bjcdnv3dBrOdgItH55mAMnalVIzrTcMs7GHBB+nejEZIXzbCl7Btm0ql
      ou4jCALlm5dR8EKhgBBC7dgomWB/f181sC2Xy9RqNS5fvkw6nVbtT+SGI9KhIK8h3crROMrU
      1JRSIf0goPjVb1D+/neY+gQ9NyXGP38xxqsTZ7ze36uVBiv3VkmhM3FrgRtTJd5b2UYsbxGG
      2rEKaFoETofQyCjBYNu2qhR0XZetQLCPwZWjfU1LIkAXAjD6atC1bpeOY5EeUi14ksEtf2qa
      xtp6hYvOUXuYaBxASm04Zob4QMMIPwrpGqzX64RhSDqdfil9/RKJRILJyUkcp1dlJIlUbvzn
      uq6S1JZlkclk2N7eVh4fWUsNUCwWqVQqbGxskM/nCcOQ69evKxUxkUj0MUE0kJhIJGg2m6TT
      adUvNZFM4r9g06kzYaSKNfrabtejtFenlEqzuldjY6PMxFaNRLuLf2RLeZ7HpGNwaCQpHKl7
      6XRapXY0hcZaqDGdz3DHd5DpbrJJmFSZZTbCgg67bsiV1HABPApRb08QCtzK8dZUEqY0VmWu
      jkx+O0soW+rE0mU6OTmpMillfkvmhZbdzw5Sush5OY5Du91W85VEK4lSenfkptXNZlNVgf38
      5z/HNE1qtRp37txhb2+v77lICSjtASn5hRBks1n29/dVrMG2bZrVCkvxPJ/PCifaGb3VIBQC
      JwjJFzJspCwKQcD0/fVjwZlI9BX1V5IGc6JHbKtagubzGlOTKZqWxmTK5pIBJVunfSRro+3e
      ob9TRMbQ2a63uNd00JIJ5ReYSCVYHFEjHCV+AF0Do5CCqqvGhaNAmLyg9FfLVIBosCu+nMhV
      Q05UxgF836darfaVUsqGt/L7aKzB8zymp6f/XgphhOg1tJJJbtJLI1s/yk2nm82mUnl0XafR
      aHB4eIhlWRwcHDA9Pa1iIa7r8pWvfKXPLZzJZKhUKioOIp+l1PUlc8ixpfppmiaZTIZ6Kk3T
      D0jaL1gffVJQ6wyLsheGvPfxc/zDJobjkQwEi67AF74qApJdxGXQD9MgP5dk1gz50U6byXKX
      eT9kv2DwetHubXph9t63tKGkQIiW40YzY69bOpZlAoFaMXZrTe65HndLJ2+vpWkaCaO/WEcl
      w8l8f2nASR1eNmOKuvmi0eAox8olPUoI8pwgCDg4OBhosOX7vYf4WQbIpMu2epSHLzeym5mZ
      QdM0xZSHh4d9hAi9VaHRaKBpGouLixQKhb7e/9F/MstT1gUsLy9Tr9e5dOlS3zOV6SDlchlN
      08jn8ywuLvalm9S/9x0uJT6B/j/SlXnWceDdD58xt1nrz/e3+3dfjBbzSG9ZY6vNxxM2pgb5
      EAzLQjRdrPlM31Si714KwWjEPTpm3DadtQ26XZemH5Cz+mko7sJ3g4Bq02U69mzM6FIjiV5K
      R0ms8iVHO0LHUyHkuVLSSWbo47bYZtG2bX9mfYAkM7fbbRzHUSkNiUSCjY0NCoUCH330EVNT
      U6qqS0psec/VahXXdbl06RIPHz7kwoULhGGo5iyFg9R7oz7/GzdusLGxoWyFMAyp1+sqSU6q
      ibIlTTKZJJ1O8/hHb3H301B/4tkPL+BSXak20CttnMkMVNqkzmCXzDgCtrpU9WNCnq35/Gyl
      xqXZNBcyx0w0LDg27O84hBCYAtp+SG6IvIhKe0vvdYaOR49VHCBq/EYTiuTLjac+yJuS6b6y
      R0284D3KifEx4LNphCtEb/dGWasr5ypXIF3XqVQqvP7662q5dV2XJ0+eKObNZrPMzMwQhiHN
      ZrO3E8vRfXS7XSX1JFNLhpdjSRshm80qG6BUKrG8vIxlWar4X646vu+zt73F5c0VjBddEfuc
      N5FUirOfDMCVUo75f3yXhK7zox/f43Jj9B7E8UivRDFic1qaxuUDl3I3pDKf5pV8Akt78XTm
      sh+yohn8VnKQ+uOErmkamfk87Lb7xlIMAP0bWkcvFg3bxycjm77KScUDavKYuJojVahP00sk
      pX6z2aTZbPbNA3oPQib7TU5Oqj79hmGQSCS4e/cu7XZbeSx6u7Z4SnWRFWJyHKDPaSDVOvkc
      pqamWF9fp1QqKUFw69Yt9vb2WFtbo1arcePGDfL5PO12m2QqzaMAbuOTfREmOF3GwplOThq9
      gJxuGQjhDj0mev/y73HHTbcCxOM67y8keXMhd5rJDb3WtGWQC0KWa21eiXSNi79zlb3QdQfm
      pvYIkwQZVYWibTvi1VASUWYZduMyCBSdiDxedo/+NBAEAYeHh+zv7ys3rGxEBaiglTSspN4u
      V75qtcrh4SGapim1Rbo5O51OXz2ANOLjz0l2zJMMI71g0Qiw3AnzypUrXLlyheXlZUzT7LmN
      i0X0yWm6L+oB1Y7cI6eWKSdJ297PR3sVpivO2GNPC/n+3ysYuMn+NpmnjeZGYes9ddwNBtu/
      x2luppjhIGH0MasZJ9pRLtB4gywJmQA3CjIdOjoRz/MolUqfWP+XTHRwcKD+ljW0UTVMehQA
      tra2mJiYUGNEtyWVmauGYagiIHn84uKiEgJSSEhGkONHe/1blqWuI/t6Sm9QdH80mR5er1bZ
      +5vv8GXhgfWiNoAY8ftpju9Hxw/44MHznu132GI2CE9OnDtC3AU5cFUhmNZ0vlJKDnw+Lqor
      x+67Fhpm12Ntt0LbDzBTCe5OF4aOcamQYv1ink69g1V1yXn0b5I3igOHqS9RLhqF+IOQRui4
      BrknQRJQlFgPDg64cOGCUk/iLdjlriyapjE/P8/6+jozMzMkEglV7C7nK20eyVyZTIZqtUoq
      laJYLKp6aRnplRmkiUSCcrnM4eEhi4uLKgocVZfkmHIum5ubLC4s8Ff/9t8wY+h8RR+yochJ
      Ls3PEKLcYLHjH89jBOLvchjxx2nBCAQHbshM4nR0EGeCYxqEy0c9TjXLouz7fLh1gHGUOnG9
      lMGMqGbTk2ku5E2cBdjr+v07xY8iSun1kWrDaYhfQkp427bJZDJnIvyoatbtdmm1WiqJDHqr
      i/TcRANNwwxtuYIJ0dt3S3bBjkcGZXG7vL7UzzOZDE+ePCGbzapj8vk8h4eHTExMsL+/z9TU
      FJlMhnK5TKvV4tq1a31uYcmIsq+nYRik0mnmRchdESLEiBYgp2UCwYh8/bOj4/ok/ONmV6eJ
      vMLJEdqyAZ2Chdv0qHU8pm19gJ7i3qH4+PLzqBtefjdl6kz1vqXlB9zbPOC1xSlVTlpI2rS6
      LkUdcimzVxAjBxhHnOMeQtRrFB0jahDL8sLTQPruozW5cFySGfUXS9fsxsYGi4uLQ9M45EZ/
      ciXb3d0ln8/32QPRSLhkqEQiwcrKCteuXetL+ZbpzDKNQsIwDGzbZnt7m6mpqQGXr/QeyVXh
      4OCAGzdusPzoEW63S/pnb3F9REOnU2M4ByGZwgsF5pHkHCy04eiYkLd//pALleN9ucYR9mmN
      Xw9BxYClV6eYso8FEgxvlxjV4YUQuE6TP39a5p/dnOFPP97mSs7gsOMzU8jz5cVZDPrPgV7/
      o8e9FFPaaCRFyB37WJ0345MchZMeQNS4lZOQLkiZBHYayJ48rVZL6dZyXlJqxjfeaDabY3sL
      yXTtqDeqVquxtLTUF8iC43iG7/s8efKE+fl5tQKWy2UKhYIy6iXiu+KEYUilUiGTySgVKxoY
      zGQybG5uMjs7S6fTYX5hgVQqxXs7W8xsrZF/YRuAIavA8Ty7QchHjRYW8IXioDASRzliz6tN
      Jg7boPV79MZedoSXMCoUK4bG05TGdX2wkmuU1I9+LkRA3XEpt1o8r9SYSeTIJhNsHpTRTJs3
      Z4sDc9GBm+aRFgOEItoCiMGSyGE3Il2BJ22OB72ostz3atyWSsPg+z6tVqtvd/qTlkZJnO12
      m2KxqIhNiOPuc1L3luPqus7m5mZfwlo8diFbIs7NzWEYBqurq8zPz/e1kZfH6rpOOt0vuXd3
      d1UquOy16nketm1Tq9UwTZNisajSLvL5PPt7exh/9ecsjOnrfyr0PfPj91l1PeoIdtsOd7IZ
      0oahal3cIOSDlW2sXIrg4RZTzeEuz1EEO4oBoscAVHUo3J1gcaAaZ/Aacoz+1SDkoOUwmemv
      PoweN2yu8bmEAj7Ya/VWAFmiJyOg0riUvUGl5IoGvaQHRBKabduq3ceL9viU7sdhNyXnEN1m
      VEL27DcMg0KhoDIvpbEqI9TRl1QsFmm1Wui63mcw7+/vq/MLhQKGYajkNnkty7KUWzSTyfQF
      BaNtUKIrQ7Q2OJoaIe0i3/e5/6d/zO9MDnowzgwRT3PuEfi60+WN6RJXc2keVBuYjuBqNo0Q
      8P79NabXKyPz98Mw4NDzyBk6610XPfSwDYuinSRrDl9948KvqQkO59LcSRwLppO8PoPjaIr4
      o8eexiEDUPND1louta0WU92wZwSn02mE6GUmRlWBuMSXklbq1NB76RMTE59KMlvUuo8iepMy
      6zTafMs0Ta5du8bu7q6Sxo1Gg+XlZRWEunjxYp9PvtXq7bSeTCY5ODhA0zQVuJKeokKhwJMn
      T7h8+TIPHz5kamqKdrvN9vY2c3Nz7O/v8+zZMyzL4rXXXmN3d5d2u61sBhljSEQyJVutFtVq
      lVqtRr1eZ3FxESEEKysr3MqklMdixAOSD+RMzzUIBc9aHa4Vs0dDaLxSyPLooA7AvY09ShsV
      NHFUJzZEigZC8KxV443CBGvNKp12A91OY+oab85coBSr3x1GkLWSxW8u5tT8o86Xk9Ssk44d
      xzTR3x/stri43WFGCrRkMqlSgE+C9LrI8L5MLfi0MjmjBeVxSFVD+uijjCJ18kuXLvHgwQMl
      wRcWFlhaWgLg7bffZmFhASF6yWiyUZXMApWdINrtNnt7e0xMTPD48WOuXbvGw4cPgV7blHQ6
      zd7envI4dbtd5ubmWFlZUSqT3GBcqnSyhWS1WiWXy3Hnzh0ePnxIrVaj0WjQarWYmpriwLSY
      D8NeOSScPZshApm2s91x2HE9rhezFCIFNqauY5oGDc8nnUn2KrxGPHdN0/BFQBCEPG7UmUqk
      wTSZyxRpe52hq8ZQgrSM4aU2Z7Ax4urRuL/jCIWg2/L6SjQ1x3HEy7It6ebm5oB6E0XUqzRM
      95REt7a2hhCCmzdv0mg0SKVS1Ot1tf+WNM6l6hFV2d59911u3rzJw4cPMQxD9fLf3t5WLQ3L
      5TK3b9+mVquxtbXFrVu3yGQyPHr0iFwupwJdMho9OTmpYgnS6JabkG9vb6sYQ7VSYeWjD3lt
      /UkvBaEPkRcbJZgRXs/3aw0SlsFiJtW3tWgUgRD8YucQr9pi7sE24xTXYbr/aV2jHE2xe7vI
      xYyFIcbH1E5D2FI9jqfeDOusHZ37/cMO5lqTfPASMsDBwUFfQ67oxIcxE0m9mAAAIABJREFU
      RTTvJlqHKyW63PhP0zSKxSIrKytcvHhRpS0PkxaHh4c4jsPk5CRbW1vU63WuXr2qbJ96vc7q
      6iqvv/66un6lUmFhYYHnz5+jaRoLCwuq/E/aSMNcptIlGrVzDMPgoz/697yhhQx2BRmvAgl6
      Uq7hB6w7Dl+aKZ34zIWAH/34Pgt7zRHfD9exhzHAOKZYzxjkFzM015okFtK8Pjla4xjGZONs
      haiNOM6h0woFLT9k9VmdS+2eTfhSdaqKFz2fZNhIwzyVSinffJQZJNHJYJocP9p6PH6NaJqE
      3MiuXC6rVGjHcbhz547q77O+vq6CX6VSiVqtpmor5CozTK2Les2kF0qIXnbp1G99i7/9m7/i
      28kIB4ij/2nacWDsSPq3goBdp0tb9LozFxIWb0yfTPy9ZwyJ6Rxirzm0E1v075OYYNg58rjZ
      TsjBswYlAYHZ73EbP7/TRaDjbnjoxQAeVjpMJU0wNB48rjLjCZZ8gThimpeKASQnRz1M8vNh
      kKuCzMiMZrNGg1DSdpCVbtFtSEcl+QFqj7TFxUU2NzfV3DKZDHt7e9Trda5fv648Q4AqjZQl
      jjK4JqV7fOVRLytSTljfWOfr8TaJfTgm/sfNFqZpMJdLKx1fhQJOQCgEta6HqZ2tr3/UrXja
      c+xQMB+CCxwKwWrLJWcbTJgvngs2CnJu96sOudUW9ycsdC/gWjvANgyEdnzMS8kA8nfJzfH+
      jhKSaKLJbNH0Bll8Llu9zMzMsLGxoSq25ubmmJqawnXdvixOCRmRht5eBrLkb319Hc/zuH79
      unJ9ymvats3Dhw9ZWlpSadW2bfellMu0iGhJaZTZu0LgiRA30LGNo3uO6fpCwEHXJZeyWcqm
      +77rl+QRZojR7AdPtnAebZPww6PeW/15YdHV69MqWvI1wd6TOlYzZHUmwWs3CpTMk9Nx4hDA
      x4dd0AR3SoN1wb6A/QOHUii4feCB6En9OOO+PJvycrz/lnzoJwXoogZzNOdGHi9ba0j3abFY
      ZGZmhkajwZUrV3Ach+XlZXWerBeWu7xEVReZj6TruiqMlzq+7AAtW6q89tprVCoVlSQXTyaU
      q0FU6sv763a7vP7Vr3H4j77N+7MXCMI4ZQvKXZd3KjW2nC6TMmimRf71DlOmwihh3ai0mO4G
      FMLjeUVxklcljriQGia0yrrGpWZIUsDsnsujt/d52vKGXn8UQgHfX6nTul/lYLd/72AJS9f4
      2uUCZVtTzB2fqxDi5WGAYdE6+fkoyCDWsOBb1DByHEe1ORFCqK7Nk5OT3Lx5k+3tbRUMi6oq
      0Vz/qH0SrZOOqjWyviAMQ65cuaJ6BGmaxt7entofYBii8/V9n8ULF3jlN77Jx+3BPPyK63Ot
      mOVyMUvajLdjjoxJZDUQ9C0NAkinE8TVmVFEOE7XH4euBrt6Tx/fMkBvhZiR00se7DypU/HF
      wFzkfAbnJDDqHllfoDc8njT6Oz3suQG+ELxfaTHhiZHj6Lr+cqlAcRVEYpwkkoQnDchoobo0
      fqFHtFJdgeOGtbIThGVZFIvFPgKN7hUsd3QBVLfoRCKhxpGeNBnlBZiZmeHZs2ckEgm1Gqyv
      r5NOpymVSn0rTDzgCNBuNuh6Hm6QQADrbYfLmRRTCQtPCOZGuDcHntGwPwSk8ikqCYMJ9zhP
      adjzj3tjhhnDw/4WQrBjapiNgEeWRrEdkhvcY4Ri1ednjyt87XqRCUtHo8cwy/Uu5XKXdNbk
      9ek0ptZz3Rqahpk14dBjohmw/rhOeSGF1glxvQBjz+FeyaZw6PE4pfGqPrxazddfIiM4qg7A
      YCTvtKFuTdP6uk5IL4ssVo/m/sufYRhy7949JfVl94irV68q+0F6aqItQOKlo0DfSpRIJFQH
      OWl85/N5XNdVe4jVajXa7TbZbFYFI2VqSTqbY9lKEdSb5G2L2WyS9+tNUrrOK6UTMmtPCKJp
      Gty9OMO7fkDw/vpYQhgVZT3NSuCGgrwnyHqjjzXRuLrr8WH7gNlrOe6WUvztao2Z1Q5TAgLg
      bwstMmkTLJ1vXC2gRxhptuZBze/vXLHfW6XdZsCziQSLYc/gNcIjr6Cu8/zV6y8XA0SJc5hb
      6yTIhrWJRELtzhjfm8xxHNXtTRK/bIg7NzfXtzHdhx9+yMLCAlNTUziOw87ODp1Oh1KpNDK1
      O5qABz2jeH19nVwupxjcNE3m5uaoVCp0u12mp6dVHfP/39yXxUiWZmd998aNfc2IjMg9Kyur
      upaurume8XRPu2fM2BZjjBAGyfagwZaxkBdksYgHhGR44gUhxCMgJAQPfvEC2MLMYBsPeMaz
      dNvd0zXdXXvlFpWZse97xI17eYg8f577x38jIrN6llMqZWbEvf96/rOf80ejUfj9fnTabRz+
      /u/gMz7gRiolFNlM8II+GxdHGcGdKyt4e6+ArdbsfN9ZyO72naVNLuFeVItYa1k43W/j5R8J
      4lY6iGy+j6WuBR3AVn0M1McoZHzIDcYYDc5PgCqLgtY6AR1WfYz3ViNY/snP4KU//DPomob9
      q2v49D/8tR+eA0AlWKhKAncOAe6eP344qA1VnSF6V85IG41GojRKt9sVwYCBQADXr1/HvXv3
      MBwOsb+/j2vXrmF9fd1RCl4FHCFqtRoMw5i6FJBqk1KUKkWN+v1+FLJHqLz953gt4odXXxR9
      zkD1uEsTXXOMP/3WA6wOTCX35USIz22el3Zg2/DqGj6wx9hqux8AlUdfMy0MLRt+Q0fwdhwn
      T5rYaJ1X1lsuj3BUKyFkLyYRAIBhA9H1Vdz9ic/j3v3HWMsWcPWXv/TDowOQrB4Oh9FsNqeo
      PzeJztoMQnAVUHI+D6KjNshhRooulTwJhUIIh8NYW1sTtUETicTU+xQLRVYngpOTE8TjcUf4
      NEEgEMDa2hqAc2sWFe/KvfcO3lowVfAyYNs2PsoWUT4oYrXeRXI8/T3/XXUgZnGFe7aFhKlj
      vWvBuGAxolTPwtv3axhpNlLlIdbPuqD+PDawRMivGIObx3jpu3t48NWv48qXfhYf/dbv4Geu
      XEGvp45j+r4DFY2iwrokb8uJ7Yu4492AO8Z4vgG14zauSCQirE1y3STbthEMBlGv10WsD4fN
      zU1H5KxqrNT24eEhms0m3nn7bYTazYXmdFnommM0HpxgqzKN/ATznJCCOOka+rpTygrawGrX
      gn8B5Jf78VpAujTARmmEgK1Bx/S+z9IV5Xbp94hpw/5fX0csHsfGW58RuPVDcQA4QpIliDK4
      ZODeYmBxk5zf7xfUn99p4LbRpET3+300m01omubIP7btSZpnuVyGbdsiZ8Dj8aDZnCBwo9FA
      r9dzpFPK/QQCARwfH2N5eRl3796FNh7jdvjisVmD4RCmZWNkmpNCtsMR+qMRxgox7XGhBnuG
      B3ye0cEGcOLV8VgHHtoWjgc2Hls2npyZO/2KfBC+byrRdp6uJ78nxrKg6dy2bdgeHaFIBJ/+
      6z8lvPM/UBHItie1czqdDuLx80QQCl0gZJtlAr2Io4ZAFoNUbZClh0ocbm1tCc5EHud+vy9u
      gMxms4J70X0Cfr8fOzs7rgeZ8hK8Xi/i8fjkkPS78M+5G0sF7zx9BG8gjeC4BjuQwDcfP0PY
      b+Dm5jbe2t0Uzz3JV9G7d4TVoa0UIQB3mz+tU8nQ4GmaWDGdelnLAzwO6AgNFxNL5L5V/V50
      f93MuACQavTx7r/5D3jzN/8R9DNDxw+MA9j2JJaevKgUw09Ah0B+5+MAWa/g7csL//jxY2xt
      bQk9hcZJPgC6PZJKoRweHmJ3dxeJRELcHq9ywNABKJfLIhwDACJ+Py5zNUDEH4A57qNrAf0x
      cHNjHX/t5ZfQG0rWHctG2DqX4U0A+YAHp2txtLyLpSkaAKoBTcyFIDoG1jsWEjNMnvPaXvT5
      yxA+3QaSHx7gnX/5b3F6lJ0EQ/4gwqFt2xaZZfR3Pp/H0tKSkKNVFglObRbpYyYbl5CdcxtC
      jlAohHv37uHu3bsipoeywXK5HPr9Pq5evYpsNovd3V30ej0cHx8jEAhgaUkdjUntk4n20aNH
      uHXrFrrd7uSesGIRxp/9b2yFpfgWyZM79R2AwdiEf4GSiveOCmh++ByIBbB0NYOdlSVEvV48
      K9XR+tYTRMxzsclN1n5oW1htTWKIFvXROIassPTJfc5rw+3ZeWPRNA2VkBfmZz/x/TkAfLLy
      7Sp8AtlsFul0GuFweEou5JYHqtrmlqRPJcxn3U2mYr98s0nG73Q62N/fx+rqKnq9Hmq1GuLx
      OLa2tgQlL5fL6Pf7uHJmWSgWi4jH48oYIPoZDAbx6NEj7O7uAjjPaguFQvjO29/GraNHSPES
      6QscgEUNLmPLRsccI+r1TNnQv3XvGdJ7Zce6qCxxjzUdq835MTwq2dztQMjv8T1xI3zzdDk3
      0HUdVf/3wQxKqZMUccnDETjYto2trS1Uq1VhGaHPAScnoKtK3RLwqfCUqg9qaxGqRRXmgsEg
      kskkdF3HlStXhK+AEu0zmQwePnwoOEmr1UIikXBYqVTWCsptpvxky7LQ7Xbx6utv4OHRHpbs
      yc0mk5dmDRYznV0yeDRtUnpF4S32RZyWLJWlTdM0QJttClWJlxcBFYGaxSk4cVm0v+TQ+vh1
      gPF4jE6ng0ajgVqthnq9jm63K0yIRBW5Vs9NnqlUCtVq1UF5OMJSDjK/2lUFqowvivJUAR8H
      /4yufaKwil6vh36/P+UEoySYk5MTbG5uikp0qjmQskzRpNQntxbF3/or+EZnhMpQUT5etbeL
      isSz8EIDMqko2h5nYypTtG9sYnSBU8ep+SLI6WbtUynP8jjl393GM/g4Y4HIdNlqtWaWPXdb
      BDeHBlEZbkakArgXhUVFPZly80MjbwrFCZmmiWKxiOFwiGg0KoLvCMHlDSTHH/3u8XhwdHQk
      Dm6z2cRrf+cXcfz0MbLHWQTyJ7gdC16I0qsnB2cbUnsr8QgOIn5EGs4wYxkRdzQPHgQsbPbO
      G7AAWLoGzZ78hAb4pG3iYtQiOp2sA6ra4Z/xd+R2ZAmgnop8PBxgPB6LpHO+wW7Abb984Bxq
      tZrjWdWELgpyVTk3IG7AKTYfJx8TXRBOZVdWV1dxeHgoAtps2xZVo/mamKaJtbU1FAoFUZpl
      Z2cHGxsbIt9gPB5j++ZtXPuJL8DW9YWR37Yn/90nCFeO4dd1rL2yjaLfGdMkg65pCHs1mGfc
      IpcOwPrRDXg/t4X+p1fh/bEtVNcj511K1Pkyyus8osk/n8clmgEDG3//5y/PAQjJyRYupzDO
      G4CbY4jkYKqXI8t5sqx3kfECE8RbtDq1pk3KLnKlnLdF3IgKhlEyfiqVwr1793Dnzh2EQiFR
      y4iLRKPRCIlEAvl8Hu12G/1+H/F4HJqmoVar4ebNm6KfaqWCFCdVqqFfUBGenuykDdOy0B2O
      pq5DUsn0UUNHz2PBGFvQuyPUNeBzyQi8mgbTtvHYqmCU8sMb8CB90oEuDU4lr8+THGRKLr/r
      xhFko4p3ZGLs9Vz+ANAdWrzDRUyU8xCYiuLKz1+UYnCgyZMirmnnl/nNOgi9Xg+dTgfpdNqB
      /Pwdnl/Aq9bduXMHuVwOw+EQGxsbjvvRqK1+vy8KbN2+fVvoKNQvXZ5X//qf4kqQZX5NTRDu
      380D6Z0npTo87x4gLMXgcOSinycWcGU0+S7Zs1A4rGOUjsF3FmT22U+sTypVADgt7CFkXgxX
      HMNUGBTcOMI8XLFtGwETaP3r/3z5A8DDCfigVANWAcnF8nOGYSCTySxEFdyAn3Yuqtj2JHCN
      e3O5vsIpdD6fx3g8FpxInpNsptO08+rTVEt1c3MTrVYLjx8/xo0bN8TdA3yckUgE1WpVrKll
      WUgmk9A0Da1WC91WC+vjITSp+JhtA43hCNlSHb1mFztbaaQjQeiXEA25aLWxFMV9nwf+/oRQ
      lAIeBPsmYprumOtQA8KjSaRny6cj9uYmPhcPIaSfF59dPzu0lm1jbz2CULYl9zxzn1XUfBHg
      h1b+nH8fMS9ZFsW2JxGU80xdfMFITOCDUSE2Vx5Vg19kbPTucDgUHmXuWebhzIPBwJE3QO97
      PB4R+bmo/MrXg9qOxWK4e/eu8BADELkI5DlOp9NCNKNCXaVSCYlEAs//5Mt4K+RE/sHYwsNs
      AcO9HJYHJpLQkDutYi8Zwdq1NayGgwjKqZILQtznhXVrDaWTKtLlLobX0xhUO4jlO47nPLaN
      RtiD4VIQ/qUg7qSirofPsoG8PUYEtmuA3DzRh/89CxcW+Y5ziksdACr5R9d8cmpIZkNZ5nKr
      wiwDycyXFX1IN6GfhNjyla0EbpXogsEgGo2G8EeoDrqKYvE5a5omEnCWl5dRLBZhGAbq9To0
      TUOv10O9Xse1a9fEoRT37LZaiEWjqDw5wl8EfQjEQ/AZHjRKDVilBjbaA3hwpvDCxvLAhH1a
      Q63YQO3uFXxqI32hdeMQWwpjIxnC/Q+PERzbCK8voVTtIdE3Re3SsaZh7foy3lxPKhNSODRM
      E5+6sYKsVUQy10Eu4cNWZeBKBOfBIiLOIor2pQ8AcF7ao9/vOwpMUWVpeoaCyug+XKqhM+vE
      d7tdFAoFZDIZx+fcbDbL5MUPIgeZBdq27Vqnp9VqOYpkcSDxTcW+VRYI0zQRiURQLBaRyWSw
      vLwsgv9KpRIODg5gGAa2traQz+fFAckXClgu1rBqadBtG13Y2LBmH74l08JJowPQAZBwwAYw
      D+dSgQCG/S4++er2JP9WBypvXsWTQgPdchten4FAMoxPZmKzPdTUns+LlM+LbMSH4rYHVzZi
      GHwjC9+cF1VEkCM3HSD5+wuJS5cNhTBNE4PBQGRR0WBHo5EjXxY4RxgSm6iUOlFpmRIUCgUs
      Ly870gsHg4FIZZQVUv4umSXpMg3Zhs3zDVRAn2ezWaytrc28eIOHRsubIW8UrxhBplEAYk7Z
      bBadTgexWExkndWqVVSOTzCqVKF9+U+w0uoqRQDeZ1fXYH36Ol7OOA+vjBKOJqQvTdvCN57n
      8WYiPCkkCxsaNLyfr6F8WMGnP7WDpUtc5j227bMCdzb+7NuHWCn25ryhRuhFuIZMIN0I5aV1
      ALpHV3Z6EYLKHXMzKf+dKi9wZKUKbhwIMfm7dPs7AYUouLFWXtuHRDcZyuWyMG/OQn6am+ow
      qnQjshLJQIn629vbgmN2Oh0MBgPEEwnEzmKKPtQ1DH77D+C3gEa3iYOhjW2/B+/Xaih22wgZ
      PuzGk7ixlECp1IC5vASDpVOS/2sRgcPQdMSCAdjsBRs24NGxe3PtUsgPQNzTZQPQMyHYxd6F
      DVezEHuWVODWjk6mQXLU0Imbpei12200m02HrM6BKKxcYkQWYwAoKXU4HJ7yvtJ9XjIQ0vOD
      qKoRRJ+7yfy1Wg1HR0cC8bkp1g3cDpr8OR0Kfng52LaNVquFer2OVqslOBgV3xoOh7j51o9i
      f2mSV9wfmzhuN7HXrMPwGDDHNnZjCRw2yuiMLKSOSvjzdx+hbZrnTi/tjOornGCqnbbGY3i0
      M8Q/g9eWY9hNvOAdZgAa5hjjg/pCz8rcWiWuyn+7rbEKt41ut4t+v+84UbRhPp8Pkci5N48u
      yOA3NbqBTBENwxDBYzwgjp7hg49EIuh2u0IhdGOBmqYJSw/V4aR8Xt4mL+8ni3vdbhe1Wg3L
      y8uOEGZyfi1CTWQz6qzP6XeuyxBRIMuQpjn9FFSHyLhxDeN33kcmsoQvBMIYawYCugakVwAA
      L8cnAXiwbPg7AwcHmDl+9ottn623ZYkvtPNfPhbw6zo0r47JrV3noCKQYmgunJV+zvMruJlF
      Dd4QVw5t20az2US73UYgEBBKLz23CMiIy6nvYDAQyrPcf6lUgmEYDoR0O938DmDqgz8jlzeU
      xx4MBtHpdBwHg0QlLga5sVdZv5gXtsuf5XOQ/RHD4VCEUmjapKL167/0C/iLVhs37z+Fz/A5
      nueHvuH1ILi7ioDuEeTdVfmViKUGIN/rI32WHDPPwnMZCOga/CsR2PXaVOtusrrbdypQPe/W
      ri6/RL+bpikiIElEehGgevjECehQyXXza7Uaut0uVlZWHIMnSk9/k9OIqsJxBHA7LPL3NC5y
      RNF3PDqT2pHXh8IbOCLLbFYlr8ol4GncPAfaTX+BpiH1+c+hZ41h6joOkjE8j4YwlgoINDMx
      vHZldc6OKOBsiieNFtYXrDp3GdA0DcP2UIn8s6xpqnb4T/nzRcChzXA2wT2Wi15zqmJP9Dmn
      9ERtZW8yiUexWAwHBwfiEjlicfl8HslkUhwmWZFVBeCpRDv+nWVZSCQSOD09dXh9eWaaPEb+
      U2WRkfskH4hqYygRhmqM0sEizsPfGQ6H2Hn5Nt5dSyNRrSP+pZ/D1s0b+O7v/ndc++a70M/m
      Fys28W65AS0SwRbGWAnMMzieQ20wxDIrWU4WoI8brt7MIFs5RLK/eOEsDvOQX95rtzamrkml
      jaJKbWShWcS2yt9VDUhGUEIu0zRFbZ1CoYCVlRVHmALvu1qtihIlVKfH6/WKy/C4AkwHStO0
      KVGG4OTkBIFAAJFIRIgc8py4vC6LOVzP4LqGbCGi92YpzsQFVPoM9UFttOp1JFIpGIaBgydP
      cPA/v4KlVhuABss0sfSln8POy7fx3d//XbzlUeQUqMAG7tea2NTGCF3yps+LwEf1DjpfO0Ro
      gcj2y5hC5fdUZnPHAXDbGHp5UZbEn5U9v2S1IfmfxKxOp4Nms4m1tTVx5y69R1SRfiektKzJ
      pdqUIklci652bTabIrssGo0iHA47FkXTNBweHmJnZ8dxQLlvgv8nK44sxtA79F/TNIdoRgsv
      r4lsKBgOh2IOhmFMXT7ILwLh/hCvYcA6MzToui5MvQDQqJRR+fpXsW2bSHg9orismz7w3VIV
      N/0eYbJcFC7DKd49rcL79gn0C1zQcaExKZCfg1CCZ71ID/KNmmUilf9Wae6ERESxyfGVTCbF
      9UX80PCKEdQHJZFQLU3DMNBsNoXi6vV6RVCdbdviKiPgPEbI6/Wi1+uh1WohEok45HGVr8Ct
      ejVfI7e14ECUXOYQJAaprBr0GXmuOTdttduOIr7E+QAgupTE8hd/EY/e+TaOOy3Y4QjMfA4D
      w4totYibId+k/KIN1IZDRG0LHu3idv7LiEm3M3F8e6eN+FEDgTmpKYta5OTnOb6qcHFKBJJB
      tbGLiEO8Q5kD2GfUitrJ5XJYWloSF1DzzZfFJjdtXtMmJQ1JXCNkoH6Oj4+RyWSmqCpVo6Pa
      nTLV5+PgsUWqMRB3kokFX3jZ4sXDKnifi8iwfGyqPnlflKsAnPtJOu02Dt75Fpbzz5HwaMi1
      O7ji0WbWIyW/wMelF1i2jfv5OrrfySM0nF9rFZheGxk/a4M2fN4w6r06LN1A2zQR0HUs+4KI
      ep2Wx7m8R0XVLwJkPuXyMVExGrjf70c+n4dhGBN7N8v3dbMJy3oLFyH47S0Em5ubyOVyDh/G
      eDwWUZd8fiplmjjRvPnLyMc/p7HOg4tQOmD6ckGV4j4YDNDv98XPXq8Hw+vFnZ/8AsJ/8+fx
      dneEDQ/mFuPVzv59XKBrGu6uLUG/m1HeH6xa73l7YJo9VEwL9VEf2VYNe90mTroNvN+simcI
      hxbidRdlP6qBqhRH+p5EDrI2EZUlRCTEc0N8Ah4KweONCK5cuYLj42NEo1FEo1EcHByIEGUu
      kqjm6vF4hG6imqebvCnPlfch90Mh49zcK6+hmyFh1s0zsh5GnIp0q8LRAd7EEMEZlr7vlTWI
      YCMTxTNfAUvDixFYYJq49Gwd5U4FKX8Icb8Hy5aFzUAA5eFgilAYKvOgqgOZdbuB6nuVkk3P
      VKtVGIaBRCKBYrGI1dXVKXbO79xVtSl/zkukc8uJbdvY3NzE4eEh9vf38dprr00dKMA9W8lN
      /FLpOhdZHwKeqKN63g353frl1TaIs5HpmQLzAoEAWh/eQ/gS5Rg/ThhaFrzj2aLOorAdSWEb
      0/sVMZxRAJqmwbgoYssWDRlkZJStJjwXmChQOp0WyjBvQ76ojr5z23BeD0hFcQnC4bDyVkj5
      OTeQqb3qvVmU3q1fqjdKiLuIuCUD70+Ox+LKsWEYiEQiODk6wnq3AdvLDp2C0n8vqT8AtAcm
      Qgpfq8xB+eduBPEiIEQgQm6yQauAOuXKHgGX8fnz/JlOp4MHDx5gZWVFfM5zAygTjJDc5/OJ
      EGoVcCTnXGowGAhnG4VJ8INTKpVw8+ZN5fwWWUCipDxalPdP4hxfDz4GWWTiijCZMfndw3x8
      fN5uHInGKHMyqqlEBbkevP1tLD94D2v+y0V3ymLRi4hJpWILKdt2iddwIrxKklAdlEX20jFz
      okIq4HKmqmH+Ht9Q256UDqfamq+99poj/ZCbOMnxw82gpDCT6VLFEQCIYlkkAtFcVGLCzZs3
      kcvlRNFbefyquctrxH0CKh3ArfwKX0eOrMPh0MG9VJWxORK4IYMsrnIgC5vP50O9WkX64Xew
      6Z8d8u0c/BjvHuXw2tYavnucQ9ADtEcW0rE4NpZi8OqLHwKyJg0tG35dx+5GAqX9Bvx995Ab
      eT5u3GHh6diKfIBFEGHWyZIR+OjoCOvr68LxxQdN5jnaNB4yQM8RBfd6vVMJ5TRe7oACpqvP
      0fMqsUSlXKuAt69pmvAR8M94yAin9LIYIq8jOfJ4W3KyDUd8N3GLr70q043WcWyaqPzpl/Gy
      72Le3lG3geNGF5vpEfrmGOmgH/XhCO8dHqAzvoJXMuqCwLPgD9/PYn09jmqrh3XDA9t2XmK4
      CKj0uEVhCttlKsKBu/tnIQ2PHKWUSN62XEOI2tnc3MT+/r44CBworVJGJq7kcWSeRRnJN0CX
      ZC8q96v0Gz4Xt0s9+DsqKk6VKmie9Cw5BYlTyusmrykv4GVZligwwPv3er04+oPfwW2ze2Fx
      xRtK4GoygmazipFlwxeI4M2dNXzu2g6WAhfLKqS+1xMheP/iFFvsk9klAAAXJElEQVT3a/C2
      3ZOZXNu5wPMqnJ7pCabNGg6Hk3r4liUy/2XKxgdE31vW5Iqher0+dbeW6h2v14srV65gb28P
      N27cUMrLROE8Ho+jFo8qOYdTS3mhfD6fUL5Vi6Nit6qEfvIut9ttoXfIB3IWyGOk2Cuv1yvm
      J/ctv68iWLT+AESYiMfjwcn+Hl4a96FfJtZH0/Hq1joA4Ab7eHXG3s5sDhpiy2FYVvF7rmSr
      OK+mnV2QoWKVwMRRdHJygmq1ilKpBF3TYNk2zDPH1iLRl8vLyzAMA5VKZaoPmYrZ9sTkubu7
      i3K57BAn6H8gEBBBa2TupHfJVMopsyyb27aNWq0mENa2J7nKqlIs9A4wLRrS2Mm55KaMzTsA
      qu9JXOQ31pMHWzUf1bh5gk2/3z+vYToYXPzmSQXYZ/9eBMa2jf7YgvV9RH4ZdKrBmcvlMBgM
      UCwWsbe3h2q1imw2K24zJLOhBsCj6/AYBnq9HkqlkoPNAtObSimOKoWOkJXubAIg7P6EBPw9
      cpoRJ6CUSq5Y008SxWREqVQq2NzcFAF2FCbAxRO3ucjAb5Cfx45VYhS3Dqm4Dk8XlYkG/ym3
      yZX0QCAg7kgbHj6D94JysgpexCM8tCyMLAvfPK2h9+3nQg7n+yT/f6GxKtaPwAgEAnj06BHC
      4TBOT0+xvr6OTCYDTdMcJQH9fj+ePHmCmzdvYjwe4+mTJ0in00gmkygUClhdXXV14MxdEIWT
      KxaL4eTkBMPhEFevXhVKMiEEvz+AxBgKfZYvx5bH4vP5HMo3AFfTL43nIsAVV/l31TP8b/69
      W99c1nfrH5iOOh2NRgiUctC8Pzin12Gnj72/fI6x14N0qQePNf8mH4JFdTXVs27vGqFQCLdv
      357aKJnCJJNJ9Pt9cRkcVUMGgGg0in6/j1AoNKXckojBc4vlQRF754OMx+NIJBJ49OiRCBHw
      er1TJRVlRZQ4Fc8Tps0nMadUKolL79zGNG+BuYytEudUSrhbP259yoq9PAb+vuowUAoqEYnT
      o0Osai9GTV8EbNtG4Xkd6eo5t581GhXBWLQf4AJ+AFWuLAGxUwAiYpOoLA0qHA6j0Wg44vjJ
      inFycgJd17G9ve06mVk2842NDeEY0nUdxWIRqVTKQflpk0l25oknx8fHItOKojmvX7+OXC43
      8y4vjuCzTMNuiCkTEBWSuok+vF03BZez9FmIwvsfmyY8Ly79XBpGto12tYOApPi7wUWkCDf9
      bd4hMOadFpJDbdt2BIPxjfN4POh2u2i32w7n0snJCba2thyhzxeZFABRnqTVaqHX60HTJkVj
      fT4fwuEwlpaWpmRemjxZr1Kp1BRSRKNRFItFUf5cXgO6wZJMlDRmVbKMG9XncFk5Vhaf+MEg
      Lud2EOiKJ9rDxuMHuLZAauv3Cny6jp276yiV9hAaXyzAchaX5D9VetKsfgy+cW4Kh/yMqlGq
      hFwsFmGaJkKhEDKZzNQdwBdFhNXVVVGhQabERN1jsZgQc7i50DAMUV+IFGIu66dSKRwdHYmI
      UC7S0HN0eMksKSfBq0IiOHAZnH8/i/rzd1UHm4DMpDzqVW6P/DD1eh3rpRMYF/H8zoDLhj3s
      RgJ4vhZB6Li9sKjitk5u+LqIeEmgu2nHvBPA6dzin3OdIRKJIJVKYXl5Wcjt7XZ76nRe9OTz
      ZA4Om5ubaDQak4mwDC5qP5/Pi/qimqaJco4qxVeW7T0ej+NCbXJy8QAzmfKqqBBv3424zALi
      ZKr2NU2bSvChfmj8lFp58uAjZGbcA/z9Ak3TEEgEF8IBLs5ykPVU1Xf0/jwQWOVWtczx8JzE
      C+C8/Ek6nRYXaNDNj/IBmDWRRcC2bQfVH4/HePr0KVqtFvb29kRqJPVJDibev2EYOD4+xsnJ
      iWM8XAcgUHFBEg/lRVc55txEp3mHQx6Lm/zP5WpaE4/Hg0a9juSTD+H7AYo/HAKJgPOasjlG
      AkjP8p9uz8xbWwKxIouw41kyrmqQmUwGfr/f9WbGee3MA8olOD09xenpKUqlElZXVzEcDnH9
      +nV4vV6USiXRB1mROGxvbyMajcK2J1WpOWLxu73cENQtrIOHLsiKuZtCrCpNSRxQJePzRHze
      /3A4FNX+PB4P8g8+xMbHTPxfxHO7sxRGLbqYKPYiBFJuRwUGV5bksACu3LnJYPM6zGazeP31
      16c2j+TnRe/r4ohByJRKpZBKpRzP9Ho9keC+tLSE4+PjmWO2bRuxWAyJRAInJydT94EBamrE
      x6O6bolzmotYOuSgO/4MRdS6vcs/59XmrGpZ1PX/YYCE1wBWwkDTSRhV+hL/2+0ZGVSc1w10
      AK6Vkt1epkFQrL6MMPT3eDzG8vLy1HcE85CfbnynynT0040qU1wQP7Rra2s4ODiYQjL6m2zl
      JE9TzjBRbVWJddM0cXx8jFwu5ygSzKm4nPe8CAwGA3E1E42Bi0oqMUgGTdMcRcNs24blMRxh
      Cx9HGMOLwnioDhqch7zyvFXEYtb7Mui0ycC0fZmn1BHwzaDEEP45B1VtG3p3EeVb3nAaC/Ut
      y+v8Fhpqw+PxOEqoEwKrsqX8fj/u3bsn5qHrOkajkUByKqHy/PlzxONxrK2tIRgMYm9vb+pA
      zpqfLDL1+300m02Uy2WkUilUKhXxHg8zUa2l29+0p6ZpYvNHfwzHgwWLY7mAzf69KFSHJqxK
      dwrfZFDpSxzRXxT5AUU0qLyJ1KkslxICqWLv+QHiZdHdlDa5f0JS2nxOzfh7MgLwArf0TLlc
      dnihKTZGnhMw8WhfvXpVXHjt9XrRbreh6zoqlQqSySR0fXL5HR3GQCCAnZ0dPH36FFevXnXE
      JM2aH4dCoQDbtnH16lVYloVer4dcLidMsD6fD8FgUORMq8I2ODHgVbU9Hg9y+3t4iVmALiO/
      a9A+tsT4Un+IeE8dvSv6k0QdAq5XqQ7GRcGgzuTGuB5A38tWEfl+MPkAPH/+fKrGJX9efocD
      /5scUrICOWvitm2jXC6L4lkqaknXOXFOsLrqLCrL4274IafqdsBE3o9GoyiXy+L9WePikM1m
      sbKyIriUruvY2dlxcKFcLofRaITNzU3k83mkUqmpdaXxkdhInF3XdYyP9hD4GCxAH1fIst/Q
      ocOdAMp/u3GHRcFNl9X1yThg27aIxlTFvHOqpaJgbsrwaDTC2tra1HMqkcqNuxAV45/zPF8e
      7SmHaMtzUSlYsxJY+Ly4OKhpmuMiQGBycEKhkEjxVK0Th8FggIODA4TDYeFhV+lTlmVhZWUF
      y8vLop9Wq4VSqTRFfGiNiHOKUI5mzXUcPwiIGh40/GqzlEocUq2jjDMqcMNVTuTFAZDv3nIb
      HH2vEiH4+9VqFclk0oGQvBo0P2y8XS7fk3NLtrUDEMoxVzxlFtrtdh1hGCoEm0VJVMoWBz5W
      at/t8hCu0+i6jmq1iq2tLWHFmqcT8T4TiQSCwSBOT08d7wIQOtlgMJgU/ioWkRoNXNtzg6Ft
      4WFngA9GNprmtP7wQXeIjywPrBmH3A2avRF8M2R++TMVzCMwMsj57KLSH324aGNuGjj/vVKp
      wLbtqUAzHjKgEn0onFl+RuWQkjkBh5OTE2iahkwmM9Un5wJuN9Co5quiNvLvtVrNwfFmtUnX
      IC3Sv+r7cDgMv9+PSqUCwzCEfuLz+UTUq+AKc0fkBAs2Hq7t4upnP49iPo/v7O/hztFDBD06
      Ih4PqiMTNwIG9gF8zRPCJ4YdpIzFe/H7DIxdfCuymCvDRZBeBl3X0TI0RE1mUr9oBypll7Pf
      4XCIZrMpIjZVbbrJfnKoxayxkFOLi0bULnEO1SV3l1GWOOeQWS/fsHg8jqOjI9RqtSnRigLX
      CoWC49JwFVfi45QPHp8vFQDm9VQpbNzv9yMYDKKcPUTygsnvT3U/rn72ryASjSKVyeB5sYRv
      1Tv4Pwihb1k4GlnY+9SPIWiPsaEDlZufQG88u8Y5cYr6yETSZ8COB1yf5XN2OyQXBU3TUF5f
      QvbOFnKpEEpBD7p+45wD8I5nDYwrZwSUgE2lyuXbXfhkVOIHiQeydUOcUkmBc1NqCLFWV1dF
      CUSOaG4m3VnKmJtSJptQNU1DMpnE0tISHj9+LJRV4ghPnjxBMplEIpFAvV53xCgtMmd5zcgf
      QoUCKFkIOPev2LaNSGIJPRvwXQBnfKMhHnznPQwOnqERSeBHXn8d/d4ryOVyeL9RQey127j2
      8h1Ul9Mov/cObn/qdVTXNtA7ycKulpGuFpBgleYOm108/m4OS5sxdJ9VMYx5Ea6fi2UXkUBo
      jRYBGT/Gmxn81G/8PYTOCqN957/8NrRCoWCratu4dcwRbzgcolQqIRQKoVarYX19XSTFuJ1c
      jli8TLlbQVp6b5EJcmQulUqIn10xSqBSilXv8r5V/asiM/m8aFzVahX1eh29Xg+3bt1yzXvg
      bZBeI3Mv1XqORiP4/X58+OGHuHr1qsPcS2MIBAL48I+/gu3nTxH3eqADGFg2fLoG/cyq0zRN
      HEWSGAxHeHXchaEBf2l7UTCC2Lj1Ml755Cdx7949pFIpLC0tiQNGhgrLshAOh0Wu9v0//gpW
      nnyAvXILo4GJ6tMKNtpjMQeVt9sm7s3mK9Z0gYrUmqbBAjDyaBjpGjTbRv+VXfhvXcWo04Nd
      qqIb8uPH/8Evi/gxw2NMDoBjIBc4iYVCAel0Go1GAx6PZ27Ys3wA+Ga7cYZZ4KY01et1UWKQ
      lEw5NZLHz8h9LaqI0Xtu49R1Hc1mU5RenwUyd5WdgPw5lTkvn89jeXnZoex5vV40Gg08uH8f
      uaeP8ZlhEzVfEJG3fgLVb/4/RMcjmMEQ/J/8DF565S5GwyGefuNraFTKSN35BDqDIV5++WVx
      iUk2m8Xu7i40bTpXW9cn11kFAgGMhkM8e/QQp//1f6BWqSL+xZ+G9u9/D9HRGLqmntvzkAd+
      GzCiYWirKXgeZxFn5dJVBJK/b3o0dH/1b2Pt+i78oSDMwRDrV7annK5UPZze1QqFgk2IQSZF
      usROxf5pspqm4dGjRyJHeJ7FRAUqCiq34fYMtyLx74jyBoNBRziz/Jxbu7zsyqJzUI1dxSXk
      /uT5zJN3CfmpiAD5H0qlErxeL4rFosifpvyFd955Z5LvYFlot1uwMFHANzc3kUgkxGHr9fuA
      PYk3arfbyGQy6PV6oh1SrJvNJtbX14XI1e/34fP58Ed/9Ed44403EIvFkMlk0O/34ff7US6V
      EI3FcJzNonhwBPM//h7io2kvf25zCbf/2a/D8Pmwsr6Gk6Ms9r78VZiJCEL/7f8iOlbjSDMW
      QCeTgBGP4kf+6a8KIwBwfsnhrIw+Q958bomhxXaTU2OxmNgUeTMpLmcWuFHfeUgzjyInk0mc
      np4qfRCygqWi/NxaNKu/WaKePC8CXld0VvuyjiW3T4e02+2i0+lgeXlZmIuDwSBs28bXvvY1
      kTl3cHCAeDyOdDoNn8+H/f192ACCgQCgaRidFSImhO50OkI3I2uZz+cTGXoffPABNjY2hOHj
      jTfeEFl0T58+xfHxMW7duoVwOIxer4fM6io2t7fxJJlE8T/9NtK5usPJmMzVAV1HNBFHv99H
      aiWD1V//JeRPTvEsm0f07YeAxP26OmD9zOfxkz/7M7DPDi8vsCAbKVTg0DoNw3AoU8DE3q7i
      BvweW3lzKIyB8ng9Ho/DO+kmYsiWFtXBo58yAvNnOdvj73GxR4X8sqLs1v6ssQPOu4tV66Na
      A7kfeRPlPoLBoKjU8dJLL4m1zWaz0HUdz549QzAYxKuvvor9/X3EYjHE43F4PB5RJOvw4ADX
      r18X60Je80qlIrLsqD/S0zqdDur1OlZXV5FOp8V+kxRQLpdRKBRE7nY0GhVJSOPxGDc/8Qpa
      X3gL+K2vOFJNRwEv/D6fUO6BiY6TyqSR+ie/gq8//E1s1Puori2hc2cH2l8+wPV//mtIZNLi
      4Mp7Iq+tCgy+wJqmiQvmaPIUN0PfkwOh0WiIAyDLpcSCeAiDqkqzjBg0UF7+ZFHlXEYeuUan
      mwzJN2HWos3jPMB5nAqvyDZrnHI/bp+rxuf1evH06VOEQiE8f/5cVOmg9M719XV89NFHuH//
      Pl599VWcnJyg3W6LMvTpdBqxWEwQMjLTUuYfjYU8y+RQ3N7exrNnz0QlkX6/j2q1img0ilwu
      h+3tbQwGA9y9exfFYtERakKHQA/6cXpjHXYkhI33nmGgA75f+BuIp5Iij4HWezQaIRQK4fq/
      +A2Ypom7a6vwGAYGX+whkUoKYkuiHL+AfR602+1zKxANUN4kTk152G8+n8fq6iqoDDc/AHTJ
      tioDaxYiifh1iVLLYNvT1Zc59a7X69A0DYlEQiAkb4cjvcw5VAeanpslCtH7nAXLqZwXEfU4
      qJ6ldbUsC9lsFmtraw5rGhkmut0uavW6oPS1ahXxeBzHx8eIRCJYXV11cC4AwoQbCoUEt6AQ
      D5/Ph2KxKMy4g8FAZPxlMhnhBxqPx9jd3UW/33f4RHRdF6EfX/1X/w7r7++j8uOv4bP/+FfQ
      6/Uc+MH3gvabEzJeMZwMKZS2qtJJbdsWHMzn8517guUH5Q2hQQwGAwSDQeRyOVEIi3MHAsMw
      pvJtZykiBCTDynf9EhLLiKDSP2x74pBqNBpoNBoLWWBkuKgSL+sVMveRRStVP3TrPHfquelX
      JO+GQiE8efIEq6urCEciePL4MUKhkAiXaDabaDQaWMlkUKtWRUJNrVbDlStXUCqVhLg2HA5R
      KBSwtbUF0zQRDAaFMcQ0TUekLRlLgMlek8Kr6zp6vR663S6uXLkyhfwAhLjSbDRQq9WQ+OJf
      xaf/1k877oHgdyXT+posHIPnhBCQxCATRlrjvb09RKNRRCIRR+WSqbhamQ3zS7KJtdCGEpXn
      MS6qA8EReFZ/bgoLyZB8E6g/uQ2CeDyOQqGgLMglcyE3MWQRkMcqJ9OrqripZFQqBanyXqs4
      NJWLp1gpQn4qE1Or1eDz+XDt2jV0Oh2Ypon19XUMBgPs7+8DmKxRqVRCu91Gu93GK6+8gnq9
      jm63i1arhW63i7W1Nfj9fhwfH6NSqcDv9yMejzvw4Nq1aygUCigUCojH46hUKmi1WkilUlMH
      gLhWankZL//q38WtW7cmNwGx0vJuxEImMDzvWV5bTpx0XUc8HhfRCXxMM68GkZHEMAx0u13H
      6Z/HsvnAZds7tSs/L7dDRWxJdFFVZOPA25KVetUz83SMRYFzKTdCwIF/RxSUi4By2wRUC/Wj
      jz5CJBJBoVDA5tbWRH63LMCeBOXxUpHtdlvIx+l0GktLS8J2z7nzcDgUudzhcFiUp9za2kI4
      HIbX60U2m0UwGBTh4OPxGOl0Wogj6+vrKJfLosSman1HoxEikYhQXvkhV82ffz+L0qtAWCQZ
      vohD5PqW1DhtTKPRQKfTQbVaFQ15PJ4py4bKcsH/noW4MrXkihTPYJNr9PBkCWASMMatA/IY
      5LG6fc8/czssfGHlsbiti6xzyDqYzFE1TRMK68HBAfr9PlbX1qQ85snPcDiMQqGAfD4vdCIS
      I6hSHrXL5xaJRJDP50XW3MbGBrrdroivokPTaDRQrVbRaDQc+mIgEECn00EkEhHvqdaR/A0E
      pHy7VeLga6Kyoslryz/zer0wx2MEzuLDdF3H8fPnyOdyEz8A73Q8Hos7e0n2Gw6H6Ha7AIB0
      Oo1UKoVWq4WjoyNsb2+71th3GyD/W6bEblRSfpYUbUokUSlPxlkF68tQeS67889UFJ1kVJ4j
      wBGfb7qKXcv9ymMgoLCDo6Mj3LhxA8PhEJVKBbquo34WikJ+hmazCU3TRJ4CIQ+BnAYLTKh/
      MBhEMplEqVQSIQ87OzviwNBdDJlMBoZhoFwuT3E90zQRj8cxGAyQTCYddVnpuUqlIpx2RFxV
      +g5fQ84hVfoRcO5FJ8mBiGez0cBzZrDZ3NoCAPx/ddCvKrlGxdkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Contamination Japan' width='192'>
      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
      /8X2fGYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Country Trend Lines' width='192'>
      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
      BsEOowAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='38' name='Deaths' width='144'>
      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
      RsEKiMUo/gfR9K4PGvSPAAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Entire World' width='192'>
      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
      53i/IgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='FirstCase Days' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='FirstCase List' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9Z3BdV3bv+Ts3J1zkHEhEggTBHMUgiRSVKImSaFFWq6PUDnK7PK/6jT3z
      /FyvPFXzYV557Ge3PQ7d7Za7LbGVJVJMYs4ACSIQIHLOwL24OZ84H0CxuxVISQQbbPH++IFF
      8Oxz99m46+y19/rvtQRN0zSSJLkHEQRB0M13J5IkmU+SBpDkniZpAEnuaZIGkOSeJmkASe5p
      kgaQ5J4maQBJ7mmSBpDkniZpAEnuaZIGkOSeJmkASe5pkgaQ5J4maQBJ7mmSBpDknsbwyR+E
      w2Hi8fh89CVJkt86nzIAk8mETpecGJLceWRZJhAIkJmZOW99+EwDMJlM89GXJPcYkiQRiUSw
      2Wzz1odbvOo1FFlCkhUAFFlGUT95gGz2GlXTkCWZr+vxMk3TUFUVDdA0FUVVb+M+GmgaiqKQ
      PJA3tyiKgizLaJp243d2M25hAAk++sf/g1f+7gNU4MSbP+XCwMwnronywb/9LV3jAX70d/+C
      /7a6f/eiyjKtzc0ogOgZ4kJr/1e6jzgzTuvQOKoc4dzJ80TkpAHMFZqmcfz4cd544w0URWFq
      aorm5uabtvmUC/RJjCkpLPX7qJ+8vjBW4vT3DlNSUcL04ACphVlz0vnfRTQlwUBnOz7FRnV1
      Bcb4DEOTPgLBOBW1tTiFGH09PYRUA2XlS8hMMc42VCX6W5soWL4eu0FjcqCDMZ/IgspqcoxR
      ese9BH0BckqrKMqwMTHQybgvQVZhGWUF6fP70HcxiUSCeDxORkYGkUgETdMYHBxkZmaGlStX
      kpGRwdWrVwkEAqxduxb4AtuggmBk1WMbaf/oNHFFAznIuVMNxICrF8/jiop3+rnuEjRGO+p4
      9623eO/QCdwhCXfXFUYkO06dlyvXRglOdNHnhSyzn47hIEPtTQQEB2niBO1TH++syXRfPk2j
      y0RZjoXIeA+d0zHSU/Q0Nrah+IdoGQ6T6oDuwUli011cm5TIcap09E3N6wjc7fh8PlJSUsjJ
      yWFsbAxN0xAEgfz8fI4fP05zczNTU1Pk5ubecD1vOQMAGFMXU6A7R58nwkoAVUXVFERRvoOP
      c7chULxkI0tXr0aZGeDSmIjPlaB0YwXFOicT51xoaVbKFy2mzGzAPawhigYql1diHZ1h/MZQ
      GVi07gEcwVE6Rvxk+aNkl5RQlmdlYugqCayUVC6hIjeApzNE3OehuGYtJaZxutzJ7enPQ9M0
      WltbOXv2LFarleLiYrZv386CBQuoqalhYGAAj8fD4sWLWbhw4Y12tzAAAUHQIQgCWzZW8vb/
      vZ9Vj1txxPv4l39+FdUfZhkg6ITZq6///bVF+PXnM1C8pICD+97hEjoq1j6IiX6ujwQIAilO
      laNvv4NdFyFl1fIb9xB0RsqWr+fSqXPkLK9mou4sHTGFjPKV2IQQCL/6PEdBPu2H3qTHoiPh
      rP2tPu7vEqIoEolE+B//439gNBrZt28foVCIM2fOcPr0aVasWMGiRYvYv38/AM8++ywAQjIv
      0J1jovsKbUMeNDFB1ZadlKXpv/Q9JO8wJxu6EJQEjrJ13Feddwd6Oj9IksTMzAz5+fnz8vmC
      IAhJA7iDSIko0ZiIYDDjsFv5KhOkpkiEwhE0wYDNbsOo//oEKe8GA/iUC5RIJJAkaT7687VE
      bzAACtFI+CvfQ6ef/TUlYlESc9SvuwFZlhFFkXD4q4/N7fIpA1AUBVG8V3Z2bk5yHO4sH3/X
      7ioDsNls8xqavpuIRqPz3YWvNbIsoygKTqdz3vrw9XEokyT5CtxiGzRB64nDnGztJypb2PPd
      l7C4mzl87BR5W17myVW/uSOhDJ7ilR+dpKrASVblWnY/vpUU023a2EQDPzov88d7NvJFJHoh
      Vw/73j3CdDhG0crHeHpDPvvf2MtgQGHxxid4ckU6x44eoqnXwh/++fMYJlr5xZtHiWFm/aO7
      2by4gM9aq2qaykRvE81d4xiceSxfsoBIRKOidHYBp4oRXCGZvMzU23veJF8ZTdO4ePEiHo+H
      nTt34vV6cblc1NTUfG6bWxiAgbK1D7H4/sc5/fO/oXcqyoacEpYsSGck8RlBMDlO0dpd/Nnu
      Kg7+4sdc6Kxie4WVgZFJrOn55KbqGRseI6FCWu4C0o0xRidmsGTkUZxtYXxgkpicwOxIRYkG
      0TtzKZHjuKZd9Hb3kJFdQF66lanhfgKSieKSIrSIm4RmICrqKczLQG9J56Hf+y7ppgn+549O
      MmDOIZBzHz94Jpt/+I+j7Fj1+yxaupj2zl5UFPovHiFry8s8WTjMj9+uY9mi3aR+hs2qcoih
      SYVtjz2BUZOJhj24Aj7GRmXsGTmk6GQkWUGTY3h9EWKJOCkZOThMKp7pGRIYycnLwaz/msdK
      5hFJkvD7/RiNRmKx2A09kMFgoLCwEJvNxsTEBPF4nOLiYuCWBqBHiA3zk3/dh9+8kJdKU0h3
      ZJJuNzFyk1Y6s5PF5YWcHxjkyLV2fNiZnDrJzmcexzfczenDR1jyrf+G8eqHzOjseF1Rdv/h
      Dv7jf73F2i35nOuLs2VpDmd6QvzN81VEvNP0X4uxb0jjW0+W8NZHvTg1P+aaRyifepcjM+Xs
      3L6VgrwMbClZoExx8K39LN76LNHABXJysrE70siKxpixOCnJy8AgCICOhau3cGTvj/lpuhHX
      qI5QAlKtn34mNe5Gl1KC1ahHQI9BpzA5OowkpRMe9rNmcQqjLpVc4xRnLrooyVXpmhTZssTB
      UF8/0UQIt7SVVQvnz9/9uhMKhbBardjtdlwuFxaLhcnJSURRpK2tjZqaGlpbW8nMzCQjIwP4
      AmsAe24Nf/xf/5wt2ZOc7fjiWhS/P4jNKnClrRVFksjNLyEtI5e8FI30jd/gmVqFxkvDxBUd
      eQvyMGgCqXkVbN+6jrSMYrZuux+HcXY7NqN4MY888zilkpv6uotMhhWMzixynDY0vYW1DzzG
      hqUL0AsQ8w3x6o9/Tsbmb/Lc/RXYrTpisQSqLOE36fnNr59AWulG/s///t94ZfdDpGRnYfsc
      P0swpyIk/NxQgwtGFlQvY83ajWRbEigf/1jQUb50DWs2rCBNEBADHrxxCVmOMjHl/cLjl+TL
      09HRwblz5zh79iyNjY0IgkBNTQ2PPfYYDoeDkZERNm3axEMPPXTDAG4+A8T8HDtxAl9UwT0u
      snS1nqYThzlf3864WaMicxcWfzeZi9ZQkGoFNIZazvCG3Iwn6uD5F5bhHDlPv2Yi32LCP1jP
      j189zaqHttA0VEZNbSpuDNgsls/0u2cRCIxf481XO5nOquC7m9Np/kUdFttCTHoBnV6H1Wy+
      cXVf/RF6ggayr11g/3QZ22s3cGLvAX7WbyK1fAXCRCfvnz5FV/8wRw8WsGN5AUcvtuAf7WfJ
      1udJ/5xgrd6QQYquldNn3FhsDhYU53yhX4oiJ0Bnwm6xkbjJUya5PURRxOPx8MMf/hCj0cjh
      w4cJh8NcvXqV3t5e7HY71dXVnD59GqfTyX333QfcSgqhKYT8PgLhKHpzCtlZKYTcbkIJaVan
      kpaNTgxhdmZgNerRxAijUx4EnZG0zCxSrAbkeJhptx/BZCMtxYh/xo98va1dn8DjDYLRRnZW
      CuFAglSnCX9EIi3Fgj8YIcNuYtobQJJUUjOzcFj0+FzTRESNlIwszGoUzZyK7fpiOx7y4vLN
      7ivrLQ7ys9KIBjz4YwoZWdkYlQjTM7Nvcr3BQlaWE4/bDQYb2VnpvxFp/c1tUA1VFvEHQggG
      Cw67BU0Fk8mAGI+jN+oRZbAYNETVgNmoEY+rmIwaQX8QwWjGYLJgtxjn/rf/O4osy/j9frKy
      bl9Sr6oqsVgMm82GIAhEo1H0ej2BQABJksjOzsZgMODz+RBFkaysLNLS0pJSiJuRjAPcWebS
      AL4Kdrv901IIVVVveYzsXkFRlFtflOQr8/GR0Pkc508ZQCgUIhKJzEdfktxjqKpKIpEgFArN
      Wx+SLlCSeeNuUIMmpRBJ7mluEQhT8U8OcPrwfpyb/4BtVVY6LnzEiYYeFHsB3/rmc2RaP2lD
      bg7sbWLLc4+QOocbHpGZQQ5/+BEjPpENO19gdaHMwXc+YDxu46Fdz7LQ6Oa99w/hihm479Fn
      WFUo8O7re3GTzeNP76I8x3Fbn+/pv8KJxh6iEYWU3AJWr65CL6ZSXPzZga1ENIJmtBAcaSGR
      vZrPuewTKPT1DbFwYSkGQ/Ld9GXRNI3m5mY8Hg/bt2/H7/fj8XiorKz83Da3zAsUDSVINUeZ
      DMwGpXIr1vEHf/InrDN3carns2SscUYHxhEVlUQ8RjQaQ1ZncwclEnFi0RiSoqLIEoqqoaoK
      sqygKhLRaJRYXETVNCRRRJJERElBA8SEwvIde/jj72zkxFtHaTpxFHHhVp57sIzDh04RDiXY
      tOs7vPDQIk6cOUvvyTcQlzzH7jVODpxu4XaXWZnla9izZxsLClfy1OPbSTOLhIJR4vEEsqKi
      qSpiIkE8Mdv/qN9LJCERD3qIShqqIpOIxxGl2Zw1siwhJn7179n/T+Dx+mfzBiX50siyzNjY
      GJFIhFgsRiKRwOPxEI1Gbyy4E4kEsVjsxkbPLaUQBVU1RPs/YuL65QY8vPOT1xmIFPOn3/j8
      11rcP8nZYx/OhqSX7GGlUM9HnXHsigt96WNsMXXhXfokixIdnB8xsqUwzrvn2vG5I+x86Tk6
      /v1nTBeUsHL9o2ypLSC9sIKUmI8j/3mCsi27mRk+xoJleaSnpxMJ7SO79CnSIy7e+6CJqsUP
      MXh5kKUvFVJAEPlUKyEgba5GGkBO0NXYTG+Pgq1gHRurTFyubyQkK5Qv24HJO4HZkHY99KUx
      3d9KY9cYmjmFDatraaw/i4yBiGLmkW0b6W44z2RQxBU3smLFXHb03iEcDmMymbDb7czMzGAw
      GLh8+TJNTU3k5OSwevVqDh8+jNlsZufOncBXkEOnZJbx1O//Phuz3Zzu8H36AllB1iAenGZi
      0k8kFmKwZwQFPVVrHuIbL+xAdnk+2Qj32AjeYBTP6CiTwQiCwcSGR19ga20BOiDmHeRn//JT
      zGue5/mtFVj1AqKkoCgJDDoDCd8A//JPr5K98Tme3rQIs1UhFleQ4zFEq+ULKUm/FAYzi1Zv
      5amnHydDixKPR4jHJWIRH4NDU/zGRrKmEYmGEcUEU5OjePxRUouqeXznkyyvyCLu8WIoquGp
      XU+yuvKz1ahJbk13dzfd3d309vbS1NSEIAhs3LiRV155BbPZTGdnJ48//jgvvfQSubm5wK1m
      AFVkpLeHawPTjHha6M8pY2Z0DNVoICRqGAWNsYEeHHkLSbPpmRrooau1HsrKUXwTyM4FbCnP
      56MOmM0wIfDxH7NVpau5iYg0RMRWycDAOJUb7yckxxHQ0BvspDqtN74MnWcPM6rPY4UyQ9eA
      kcolZRw8f5qoM0pe+UqaDr1BMK0Ga2yajkEDyzYt4xcH9+GxTFG6ZBufoW+7bfT62YwZggDR
      SAhnXhlFFi/jgU+4MJqKPyxSXl2DY6wfHaDT6dEJs2NitJjw93fToUQYdflZegf6+nVHkiRG
      R0d58MEHMZlMNDY2Eo1GGRkZIR6Pk0gkqKys5OrVq7hcLqqqqoBbbYMqCfo7rzHhm42IZi2s
      xplwMTTlw+TMY0VtBeM910gpqiTTbsA92EP3dJya5UtxEKWzvQPBkYbVnEWWPUHckE6mTWRs
      SqIoE5rb+7GlZZOemUmq5udqn5v01FSySwqQpt04F5bhuG6i7uF2ukZmxWS2rCKWVxYy0tWG
      W7RQs7Sa8FgnfeM+NMCSvZA1Vfn0X2vEq6ZSs6QSu+nLZ2T4NAlm3Akysp0oUoREwojDoSPg
      i2G1wsjgCEJKKqmWNCxGCZ0lBSHuQ7FmIYQnGZwMkJKeTlZqKqKikO50EA4FMFsdRL3jjLrC
      WNOyKC3IRvd1TzHD3G6DKoqC2+0mNzcXQRBuqEH7+/uJxWIsW7YMq9VKd3c3oVCIpUuX4nA4
      klKIJPNHMg6QJMk886k1gM/nm9fQ9N1EUgt0Z/lYCjGfFYmSLtBNSKpB7yx3gxo06QIluae5
      ZSRYjHo4s+81roxEb/zMN3CJf/jxB3z2+9HP+Y/qCc9x4mgpOsNHb/2Mv//Hn9LjjqPJYU6/
      9wt+/IsPmA7LqDEP+1/7N/7pJ6/TOx1GVeIcf/Pf+MneQ8xEbj/BlarINJw+ifd6MoCYf5Tj
      567eotVslZLkFPvbQdM0ent7aWhoQNM0gsEgY2NjN21zCwNQGG7vJOjppXt61k9T4x4+OlzH
      yPjI56TpC9HW0EF8jt1n7+Qo2csf5w9+v5Y3/u09mo69z7BtKY+tsLP33eNM9PdStvU5dm/M
      450PjzJw4lX60rezfWGEN442c9snHDQQEhN0jYTQ0Jjp72TIH7tFI5Gh9n5udVWSuUFRFHp7
      e5mcnCQejxONRnG73Tdtc8u0KJVrNyPMXObS9Z8MtF7GXL6OgvCVm7aM+yd46+A7jLkDlG75
      DovES5xo9yGHXOSseobVQheBRTsoE3tpmDCwNjvI6x81EJdsPPudXXT+8i18OVkUVm9l+8pi
      cspWkClFuHKomdyla5l0XaJiSwnZ6TlETh2gsOaPyE8EOVnfR0FhLb0dvaz+VjmlWpzY5S7C
      rOd28zGYc8pRZwaJFZUyHndSlKYHLUHH5Xr6XSGyFtZQmRLBYyrG6B8ltaQAfyBKrpLg6sXT
      DHoTlC1bT0pwgNahafS2PO5/YC0pxrmIUSSJRqMYDAZSUlLw+WZVCvX19Vy4cIElS5awZMkS
      Dh8+jKIoPPXUU8CXlEIo0XGOH2vBbFHweGYYn/R/+s2qqqgaSPEg0aiCIgZoutJFLB4jb8lW
      vv3iNjz9o8jxKAlFRZUTxOJxwsEgsiLg6u6k3+MnEvJTsOJhHlpZjA6QIi72v/ZzBk3LeHHn
      Kow6AVXV0DQVAQElNsNb//EqgczV7N62HJ0OVEVDU1U0vW5uUuAJVpxOmBx148jJmJVXBEeo
      bx9DkuKM941gLirHf+0EM8Y80u1GxISIFB0nYK7kySefYEm2xlDUzmNPPMW6/AQDnnupyMid
      ZWRkhEAgQDQapaurC0EQWL16Na+88grhcJhr166xefNmvve9790ozXrz74WmEPZ78YVihAMe
      ghEdy7euxxDxEImGCYTiRIJ+ErICqIR8HgabrhLOzCE02kE0vZbnHtuIUZv9KKPRiE43+2XU
      GSTck9MMDw4TScRpPN3KmqefY8OSInRoGE1pFBdm35BC9F44Qg8L2La2EjEaoXRBNj2t7fRe
      ayI1t4r2o68zlbqa+2oXICY0Fq8s4PL5BpqamkkvXchcZTvNT7XTOzZGmvP6zoXRQkFxJZsf
      2M7WDdVosSDm7FJ0wWli0uzrQWdMgZgHf8BHWBIwiWHcPh/TPhmH5esf8f1t8LH743A40Ov1
      TExM3FB+fpwMy+l04nK5cLvdJBKzDrz+r//6r//68+8a52rdGbr8ZozhMRLOUjavWU55WSnZ
      OfmsWFZJ75ULkJaP06JjqrORCwMyu57dQXFeDqGxLnzGXJaUl1FcnEVqVi6ZqTYs9jSqFpfS
      19qEkFFKdWUZtTW5tDS0k1exmIqyhWSlOskuKsB23TuIRXz4Zlz09/XhjulZe9994OpiIOzk
      qUe3oCRi+FyjDPT3MZWwsm7T/TDawJhWwhPbVmM1fvk54JNp4nV6PWk5WegUC/lFWZgNRlIz
      C0nReenqHUI2pmDVNPLKF5FulJF0FhxWK86MHFL1Ia51DWFKL6Ei30J3ezfGgkUsyk9FEO5N
      I1BVlXg8PifJmBVFwWKxsHbtWsrLy3E6nTgcDsbGxhgYGGD79u0sXLiQ0dFR+vr6KCkp4W//
      9m//r2Qc4CYk4wB3lmQcIEmSeSYphbgJyfQwd5aPpRDzOc5JFyjJvJFUgyZJMs/c0gDkRJDW
      iyfocc1uG80MNPPOO+/wzjvv0uv6rFhwmPbGLmJzHAlWEkEaz3zEex8cZjwgoilxrl44xsFj
      F/DFFVQxSN3xg+w7dIIJfwxNFWk+c5BDpy4TiM/dXrvf5yYuJl2ju5WxsTG6urrQNI1IJHLL
      SPAtDECmv7mR9qZjNAzPZotraziNmlnJ2rVryHV+ViDZx9nDF4nMcXzHPdKNV8hmyQKFvT//
      iK66I1weU8kWJnn7UD0TXa3EU4optPh469BZxi+9x9lJB6mhDj442zFnehzX1CjRRFImfTei
      KApXr16lra2NRCJBMBhkZORmlSy+gBRi0YYH0fuar0shZHweL/pcAc1gw27+/BB+IjDFe4ff
      ZXgmwerHv0NhuJGLndP4Z9xUbHmWarmXUOlGisURrrn11Di9vHaoHmz57H5uB72HPiKSbsec
      t4ptK4vJLV9NdqnE4JV+9I5MBvq7WbTp96jNiHL8tY8oePr7FKgiLaeuYTLp6LgyxLo9e1hH
      Guff7ify8DJuLzPQr6HEaas7S/eYn+Ka9awphJMNnYT8IXKr13DfolTOHDuFJ26gZsNmynVj
      HG11E/fNUL5hOysWZMxVT5L8GrFYDE3TyMjIIBAIoKoq9fX1nDt3jk2bNlFZWcnBgwcJhUI3
      KsV/6TXA0nXbMQZ62fezf+RMX/DTF2igaaBqEqoKcniMo8ea8HumMOSv4oXd6+i50kVkZgp/
      TEaM+nF5AsiKgqDBYP1FWiddjPd2Es1YxrbrUghNiXLhw70catfz7W88gE7QMOgEdIIBVVNB
      S3Dy7Z9xeSaNPY9tQJZ1GI0COoMBvSTfdl6gXz3frLpTr9ODJtJ89SpSPIIpr4anntqBPDVC
      HA2DzoAcmaKpcwQtEcJaspJdj64m7E/GFu4Uk5OTWCwW0tLS6O/vRxAEli9fzg9+8AMGBga4
      fPkytbW1vPzyy6SnpwNf1gCkOMasKh7Z+ST3L7bTP/nribE0RFEiPDKI1+rA1VmPL3UNf/DC
      DsyaBuiwWi3oDQZm5w2ReFzG73YRE6OceOc0m779x2xfVYoODZM1i6WLS290sL/uMA3hYn7w
      8rNkWXQU56TQ3zfGzHgXlpRi+k78J52mdbz0/ONk2e1ULnbQ3DTIcG8nxqJCUm5zcBVZRlHj
      uCa9iEEPM4YcnnriMQpSDWhomEwmNEUkoWjEhrrQVW1i5/b7sBs1EHSkpaZhMBox6pL7DncC
      VVVpaWmhq6uLhoYGrl27hiRJmEwmJElCFEVMJtONBFkfb37e3AWSQ5za9z6N/SKK8CoHtCcp
      FXv5yb4+zPmr+MZ9+Vw48h75ax6mLMvCYP0RDrd52POt36NQP0PXewc41lXE6ppKMvNS0Jmd
      mOwCSxY7WFhRwLl9bxIoKqOyvISi4o28vfc1irLLKUtNI7qshrRfS+YjA/JkC//wd61kVq7l
      +YeeZPLD9/hwPIXnn30Sb8P7xAfO8E9/f5a0RZv57sPfpvetX3BkspA9u1bdthgu7u7l8IUu
      qtfdT26BFffoeQ6enKSgpASDINDXfJqJThvL120mPVMhcfQMddYMCorL0TkSZOoBg53s9KQB
      3AlkWaaiooLdu3cjCAJtbW3o9Xq6urq4dOkSzzzzDFlZWRw6dIiGhoYbLlAyDjAXBMfoCqdS
      XXC788y9xd0QB7jFIjjJF8JZRHWy+OPvJEkpRJJ542M16CdVt79Nki7QTUiqQe8sSTVokiTz
      zC2zQiTCM1xraaStZwRRUZFiATpbm+kedn1OdDXO+NAkc60WUKUYQ93XaGxuwxeT0VSJ0d52
      rrb3EZVUNDlGX8dVmls78UdFNE1muPsqrZ0DxKTbjwJomkbIM0l//wDT3hBfJoW/FA19Shqi
      qSrhcBgNiIb9yejyHOHz+ZiamkLTNERRvKU7f4sjkXGunjnLwLSfKwd/wYU+D5cPv0ldxzCn
      3voF7d7P0ju42f/aYYJz7NZNDzRTf3WAmdErvP72BUaunWX/qSYGrp7mgzPtTLRforFnnJH2
      87x19DLejpO8eaKdrvpDHGkYvG0phCrO0NjYQzQaYnx45NZap/AkfdOz8pHwSDcTn0gNocoy
      g/39yHEf7a19JJKe6G2jqioNDQ2cP38eSZLwer309fXdtM0tdoHMrH70aXSCxonROoL+EVzd
      Ao//110YGl7lrSsj1Dxc9pn57MWQi/1vv8uAV+DhPd8h1dtKU/cIY+MeVj2ym+L4INGCWnKk
      SQb8ekrNbv5z/zks+UvY/eQmBs/XIzsEgpaqWSlExXr2VAmEhk5x6T0v11qmqXngGdZlRPjR
      3pPk/eB77FmmY6TxIG9ec9Nytov7nv4LNtDC3+zvIH5fxW2lSNcUkXBCY1lpNWl2EygJuq/U
      0zUlsnrTFlJUL3HNSXaawNCwn9DQaerHDAyW17AsU6Gv+SztQYk1mzdRkGoBQNVU+jo7yKpc
      TpoJxrqu0Ng9TfWaTZTYYSYyw2jXDLX319J1/hxe0lm/fhXKdDcXr/aRVlLD+mUVmPT35pHK
      T5JIJJAkabZoSiRyo2RSfX09jzzyCEVFRRw9ehS32/0Fs0IIOlTRywf//vcMZj3Iw9XpSIIF
      k0nAmZpOKBD63Hw7GhpWexpObYJfvn2eqZEu/JYqdu9cQt3xRrxD3UwEE8T8U/SPuFDQk56R
      yfDZY1waGqXj/EmuRXNuSCF0gkzb6ff553f6ePmPdyGgYjYa0BssSKqEXq/RdOQ13r7s5xtP
      byMe1WOz6jHY7JjDsc/JYfTFMVgLeGDDQprOHeN0fTvT413MGMt5YsdaBlqu4PJ68QXjqGqC
      qckZlq5cz+qtj7Bj81KMmkJqUS2PrM5jzP2rBGOTvU10TIhkOK1E/BMMeE088cRDePqbcbs9
      dHUPUblhFd7mOobCArJniCvdowhGI05nKqO91/AE5y+v5t2G2+0mPT2d/Px8hoaGAKisrOSl
      l17i8uXLXLx4kYKCAl588UVSUmZjNjefAZQYZ978TxLVT/K9TZUYhCAZZjdj4yx5+vMAACAA
      SURBVEGU9l4qFj3waxakIcsq8swkAaMFV1cd/bEcHtti4RfnNEBPSooDoymGgSggI4oKkWAA
      UbJx+t06Cp/5FmaPCwENsz2bVWuW3rj/cONxjvbp+NM/e5kUs47pNBv9Yy7KZR9Wey4jF9/h
      jCuf77/0AGkWAV+5idauSQqs/VCQd9tCOFWOIJrz2PZwPl1XLuGPODCYTAg6I0a9OlvnS1UR
      I2Fi1z1DMZFA1TQEnYns7HTMoged/uMnEiisWkNhloXuzkEqigwYDGYEQYfBoEdT9RQvWky2
      3UC3pKdq6VIWphqQNejp7GPJiuUYm5uQkqfWgFn35+rVq3R2dmI0GsnIyCA7OxubzYYgCBgM
      s191q9WK7tfkKDc3gESYEU+ISfcBftQAqx79JlsfW88Hb/0UMhfzzZp0Lt6QQpjpu3CYA1eG
      2LJrDwtsLuoajnLRkENJQSH2dI1MqwWDKYX8PIGCSiuHD7zOZF42OWXFlKws48ODB8gyZVBi
      tWEqLMRu+NXU7nVN4Bt38ZP/b5DMyrU8u3k7ve/t45etVnY8+QzjDXvxj4zws39uJW3RZr61
      fQ/N/7mXN8jksac338rXuzWKROels8zEVPLLaqhdmEF7Qz37e2WqVmyg0BGnrq6OEYuTtIxi
      cGShXLnISd9CVhU4sOgBgwWHebYngk6HzW4nraCUvFAHYaWANN0Q+/d3U7RoBenp1utFMgRK
      ly7izNlLjAgWqlasIS9V4+LZOhzpmZiT1SSB2S3V9PR0fvjDH6LX66mrq7shj7506RL3338/
      hYWFHDlyhIsXL95wgZJxgJuQjAPcWZJxgCRJ5plPeQahUIhIJDIffbnrmM8Q/b2AqqrEYjE8
      nk9WDf3t8SkXSJblZDqQJL8VJEnC5/ORk5MzL59vNps/rQb9eLWcJMmdRhAE9Ho9JtOcV3H+
      wtzi264y3dvI/iMXkFNL+b3dj2OJjnPm9BkyVzzJxsrPOtvq4dh7bax/8gGcxrnraNw/ztED
      h+j3yDzw9AvU5sgcff8DhqIOHntmF4UGD/ve289EzMIDO3exNE/PgV++xriWx5NP76Q4/fYq
      BctijEjseqENnR67zY4hGYC660gkEiiKgtVqRVVVVFXFaPz8L+ItpBAi3oCep1/6AavNXZxo
      deFxuRAkH0Mzn7dDEqWvY2DOtUDhQIDyTU/zR99aw4GfH6DpxCF8Oet4+r5c3t9/Eu/0DCse
      fZHnHyjl4NFT9J14jZkFT/JEjYH3T9x+gYzw9AD19cd4/RcfcKmlndAntDuB6VFGpvy3+SlJ
      bgdVVTl9+jTvvfcesizjcrlobW29aZtbSiGqV68k5u7nQo/Mg1tSWVhQSHSilVsVB4r5xnjj
      wLuMuzzkrv82tcpFProWQh+bJmXp09xn6MBX8wRV8S4ujBnYnBfm9WNNhMLw7Pf30P6z/2Am
      v4CqlTvYvrKYzJLFpCWCnH77HMXrH2V66jSlWwvJTM8iEthHbuXjZMe9HPiolbLyzfS1DLDi
      eyUUaxHE89cIAalfajh/k7TiGh4pzuSUMMPmLUsh7qf5YhtBzcbKtSvQmy3YVR0Tky7y83MY
      7+vCVlCGTQkQ0ZwEhpsZ8cgsrFlBQYrG+OAgYy4feZUrqChI/Uw5SZIvx8cVJzMzM29IIbq7
      uxkcHGTTpk1kZ2dz6dIlvF4vW7duBW4phYDpngv806uHeeSlH1Cbb791LxQFRQMx4sUfFNGU
      GN3tA8iqQPnqHXzvO4+RmHCBqjG7/FbRVBnfzAwJBQIjI4z5ZyUWtQ/83o0CGYngGL/8958R
      LX2YFx5ajEUnIMsKqiKi1+mRQ+O8+q+vYlr8KM9sXYLJpJJIaKiiiGw23n4g7BNoqowkSiS8
      PTR0ewh4Jpj2RAgP9TKViDDa1c2Ay89Ebw9RdIiJBLIU4OrldoIRL/1jASqry5jq7r5tmUaS
      WbxeL6mpqeTm5jI6OgpASkoKq1at4uTJkzQ0NNyoGq/Xz6ZmuLkBJHwcfucIxes2oQtN4QlG
      mB4eYHhihumxQSa9UdyTY4QTMqDgGR+m8VQdUlExcdcQYlolj9y/8nqBjNkFjyAICAgYzQpD
      3T10dPYRSYh0NvazdNsjrKjMQ0DDYEwhO8t5483Yfe4IA7pCKrMMTEzNUF5VROflSzRcqiOr
      ZCktR/biSaulJFVj3BVh6fpKLh07zukLDRRUVc5ZgYyPibqGCVuyKchNJxy4nh1DMFC80MHA
      5auYl6xCG+9nXE4n2+JhYkZPYUEeulgYUWekoGQhebnFpNqScci5QNM0rl69ysmTJzl8+DCN
      jY2oqkp+fj4lJSVYLBaCwSALFiygqKgIq3V2TXjzF6NgZtmD25jyTdLfD6ojA3VsBDWrlkqC
      uP1RTKEJ0h1ZOMxGxNAMLor55p51pBIilGgimlLCsw/nke+Mk23MxuZw8tA2idLcpYw3dGBf
      uIotuXlkrMqhrn2CxQ8+RkFBAdLOh0n7tXVrTtVK1gjTDPT3k5IH963ewRbdZSbj+Ty/dgXB
      AQO1g26G+vuxFRh4YPVT7JDP4lLX8sya6jlyMXQYjXoEQGey4B1uR0w1YkrXo9Mb0KsCpqxS
      po8f4f5165gZvUo4swSjYEGOjNE97MRodKATdOj119NyJHfd5gRRFFEUhb/6q7/CYDBw+PBh
      IpEIFy5c4MyZM6xbt46Kigr279/PsWPHklkhksw/d0NWiKQUIsk9TXL+vQmKkjymeCf5OEvb
      fI5z0gBuwseVBJPcGWRZRpbleR3npAuU5J4maQBJ7mmSBvAFUSQ/l+vaUADRO0X78OSnromH
      PEx7I0hBL/6bpjmR6Wlu42PR+XRfMwf272PfgcP0T0WIBP1Exc+SYiv4Zrwka8t/NpqmcebM
      Gd59911kWWZ6evp2pRBJbqBpyLKCBjfO/0phP65giGhUJreoCOP1qPZQ62WGrcVUlxSTmyIw
      PjaF3plNYXYqieAMEy4PEzNBCq7fesbtpmrdNsoyTciSSFtDI0pKFgsWlpOmjzE27cXizCbd
      Eqexvo28ReUsWFABoUmmfTEy8gpIs2iMDY8hGR2UFOZi1N977zZRFAmHw9jt9hvFMiYmJpBl
      mfLychwOB4ODg0SjUSorK4GkAdwWoZFrNPvtFGseugQn5eZJpiI5WBUVVVFQVJG+tk6mIgqx
      4BCmbSsYaOrEmpWGKP9qhigur6Sp5SwDxmw2rluMqqgoioKqaYR9biYm3QQHJ1hVswBVVWZ3
      TyQvzVeuoZkFBsaCrC5TaemPkJ+fR2FeDsbPL97ztSUYDGK327Hb7UxNTeFwOAgEAtjtdo4e
      PUp1dTV9fX3k5eXdWHjfe6+Jr4qgBxTQNCQxjiwr6HQWqpetZPnihTcyDQg6E4VFRRRXVFOS
      oWN4wo/BaCQ104ku4MVQspTlSxdTnP2rdNKOrAXcv+MxNi5x0t0foLC4iLLKKgrSTEy7vBiM
      BuRwEMmaRmFBEZWLqkiJTTAS1jAarWSk2rBklZBtUfBOThIU7z0nSdM0Ojo6OHnyJMePH6ep
      qQmAqqoqNm/ejN1uZ3JykjVr1rBhwwZSU2elkckZ4Aui09ux4+bo0aMokkbthq0w4/rMa012
      He3nThKvWUpZrpVOb4QUixXVkU2srY5jQyYiQT3Fa2avH2g5x4BHRFBl8pdswip6uHjxLGWL
      V6AoEtGIiqA3IKBHiE5w6qSXtetWUaDvIRTRIRhlYuEgUVFGlfXI2r13ou/j02V/+Zd/iclk
      4sMPPyQUCtHQ0EBLSwsFBQVUVVVx/PhxLBYL27dvB5JSiJvym1khNFRZJpZIIOhNWMxGUGQ0
      vRG9piBpAnpUVHQYdBqxaBzBaMak14jHE2iCAavVjColSEgKOr0Ri8WEACiSSFwUQWfAarEg
      aDKxeAK90YwBhVhCni2vZDSCIhIXZcxWO5ocJyEqGIwmTAaBeDwOutn76oS7X2A9l1khPs4F
      ajKZEAQBURTR6XTEYjFUVcVut6PX64lGoyiKgt1ux+l0CkkDuAnJtCh3lrshLcqnXCBZlpMS
      gOtIkkTy/XDnUJTZBb0oivPWh08ZQCwWS775kvxWUNXZ3a75lEIkXaAk88bvgBxaI+Yb5/yp
      45y/0klcnt1diLoHOX62mc+euKL0tQ8w1/UeFDFMe8N5jp04x3RYQlMTdDdd5ExdM8GEiiaF
      aak7w8mz9biCCTRVorPhDGcvtRFOFp9I8jncskBG++UWFHsmk5ff40yXF00Ocf7APva+f5zP
      zh/n4dj7pwnN8Va0e6idAY9KmnGKva+fpO/KcU61u1BmOnj3WCMTnU1MxIzog/28deQC080H
      OdwRJjZcz4cXu2+/QIYSp+XsEd55513OXO4kJor4AsE5ebYkc4OmaVy6dIlDhw6hKAozMzN0
      dXXdtM0t4gAWVu54DOQ4B68cREPD1deGy7GIJXm9N20pBqf54Mi7DM7IbN71HXKCLVzqGsc9
      PcPiB3dTIfURLl5DgTRG14yBRfYZXjt4EUNaKc8++wD9x08TTzWhptfOFsgoX8POCo3Ja4cR
      VY2ezhEW37ebtRlRLr1+jPzHXyZfU+i6MIESitNW38WG3X/Beq7yN+/2EH1wCV/gSP/nosTG
      mZIK2fV0NdFgCE2WCITCpKfYiMYSiJKE0WLHZjaQiIaISSomiw2rUSASiiCjI8WZAkqCWDSB
      gg5HigOdKhEOR8FgxmG3IEsSmiyi6MyYdDLhSAKTzY7VZOR3YGdzXpEkiampKWB2LStJEm63
      m4yMDFJTUzGZTAQCgRtFNOCWZ4IFlKiLt376M3RLHmd3lYlDP7/Gykd38dHAzQ1AEzR0gh4l
      2Me+A5d5pmoCKX0Vezb42Xu4jZwiN96M5WQmPIxPG6mq0KEXBHrOnqBp3SI8VxsQtn+HF65n
      hUCQaDjyNqf74bvff5HGt/8Vk0GPXm9CVmV0OpXz777KlUAmLzy3mSs/vkamWYceC4a4yO1m
      +dRb80lXjvL+viFW3Hc/JboYY5OTLEyLsm9/B5kZEDItYNeadI4ca8ZmUwmZK9m5LouWy23E
      5Sg5tdtJDTTRNhhDr4bJXHw/6aE2eqcToClUrdpMcOgSbrdEUe1ytJkRXIEICVMGD29aieEe
      1Pd8GcLhMBaLBZvNxszMDEajkba2NgYGBrBYLKxevZqTJ0/idDrZtm0bcMsCGRE++vmrpNz/
      XZ5anofkGyFEnI9++TMaWzopOtPFs/dXX7+JhiQpSNMjeE02pq6dY8qynO9/YyH/dGi2QIbd
      bsNgjDArU5FIJGSCXg9xMYWje8+z7pUfstD4E/RomG05LF1eecNH6687yOnpbH74p49gEASK
      shxcG5xgYdyDNaWQ/hM/p0Gq5ZXvbsCiUymvtnLx6gg59i4MxYXcbh1rnc7Kuh27WCOGaKpv
      ZLqq9sb/lS7fxPolRi5dGic4Os7iHU9RZRjjWFMEKeTDEwoixj0EhlxsKHSycsN68pwijU29
      zCREtu54BHwjdIyOg2pn0yMbsISHefN8DyazDcxG4pp220U+vu50dHTQ0tKCw+FgamqKTZs2
      sX79elatWsWhQ4fo7u7m0Ucfpbi4+EabmxuAGCesNzJy/Jf0n5wtkPHtP/gzECPsP3iGbfdX
      c+lGgQwLA3WHONgyxRO//xylJjet7x7io2sFLK6oIi3XjGKxY7QqlJVZKK7K4OSHb+ApKKK4
      vIDi7JW8t/c18p151KQ4cVSVk2L81Zwfi8WIT/bxo//VQWblWp574FGG933Ae/12du3ahb/h
      bWJD5/nnv68jbdFmvr3tRTp++Rr7tFye3rXitkVPSnSSuqYRbDY9YcVA8a/dUGA2z6UggC0r
      jZ66c0RSRUKJPKRYDGtmMSVGM6MIqPEIfSMtjBDAXLQKh8dLS0MDJAJklq0k7k1g1gsY7OkU
      ZuViyc7FqLOgT/o/N0WSJCYnJ9mzZw8mk4mzZ88SDofp7u7G7XaTSCRYtGgR9fX19Pf3s3z5
      ciC5DfqF0VQJ18Q4oYRKek4B6VY9oViCVJueUMJAik0gFBKxCWHqrrQhihGkjFoeWp7H5NgE
      gtWO1ZZGZPIqE2EnubkZFBXmghhmcsIFFif5uZnEoxFsdjs6AWKBGSbcAYz2dArzMr52RjCX
      26CKouD3+8nIyEAQBLxeL2azmbGxMRKJBBUVFZjNZkZGRohGo5SVlWGz2ZJSiLlGjflp6+xF
      0tmpWFRJmvU3E7NGwz4wOLFZ7kG98ie4G+IASQNIMm/cDQaQlEPfhKQk5M4iyzKSJM3rOCf3
      1ZLc0yQNIMk9TdIAviCyb4h+VwINSATcDE64USQR5RMrKE3TkGWZ5Mrqt4+maXR2dnLx4kVU
      VSUQCDA8PHzTNkkD+KLYHLgG+lA18HimUDQ93rFhAp8IMWuKTEd7O3LSAH7rKIrC4OAgHo+H
      RCJBLBbD6/XetE1yEfwF0RvTMOr6EWUR/0yQnOWL8dR3kV5awWDrRTqGPVjSClmQJnH5cht9
      02E2VObT1t1CIi5gza9m6+IMLtY1EEjoqVq5Bqu7i/YpP7FoHKcjlXg4QPUDT7Moaw6Lq91D
      RCIRjEYjTqcTr9eLIAjU1dVx/vx5Kisrqa2t5dChQwA3KsUnDeALIgh68s0wOjVK0FRAtRnc
      ioKGn5aGHtSMNBIzE9iWPco61cri2uXEp8YpXLSKxUX5tF7rRBQlNEFAiQYZGJlksd3OugfX
      I7r7kCkg3z5Bpz8BSQP4SgwODjI1NUVKSgrRaJTa2lrWrVt3QwrR0dHBtm3bKC0tvdEmaQBf
      FEEgvzyXA0d7Wbxp7a/5jlayigrIX7wUq07GYYCRkJdJl4cUBUxmE4KgQ68TCHh9pBVVUlIQ
      YSisgs6AUa9DNhgwoUfQ6ZI+6VdElmUGBwdZuHAhRqORgYEB4vE4Pp+Pnp4e4vE4BQUFjIyM
      AJCbmwskDeBLoXMUUbNUJC/NAejIr67EjIUVq5fQMzBGNCWHrHw9FQsKGZh2k7agkFyjDkGn
      p7CoiFS7EX9nD1FLBkvKU3HowKzXYUrNRRAs6PV5FOnN8/2Yv7OsXr2a4uJiBEGgqKgIu92O
      xWJhaGiIHTt2YLfbaWlpYXBw8EZx7mQk+CYkA2F3lrshK0Ryxk1yT/MpF8jn8xEKheajL3cd
      ycnxzqKqKvF4fF7HOekCJZk3fgfEcBqaqiLJCgg6jAY9mqogK7PZIfQGI3rdJzXqGrKsXq8J
      PHed1TQNRZZQNTAYZs/HKrKMymypUQGQZQlNE2b/LTB7PbP9Fr5mWvokc8MtDCBB4+H3Odfr
      JuwPsvP7/wXp8k94u1ViYZaNzU+/zIoi6yfajPGT/+cYz/35S2TN4YaGq6+edz6sR5RDZCx9
      hieXivx871EUQc+Sh15gtWWAN441I8YiFK1/il2LZP7upwfQG41s3PUdHqiZi7eMTHtzK0XV
      taRa52avfmpiGGdWMTZTcjk2FwwNDREMBqmtrSUSiRAOh8nLy/vc629uAKqRxfc/xYpHrVz6
      5f+kfyKANRDn6W/+CZsrUm/aVI4HaWpswBUWWLZhC9bwKMOTHjy+MKXL1pAhuhHTikhRArij
      OrIMQS40dWNKL2Ltikpm+vpRzBDV57FkYQYZRcv43g/Wgv8y/++/t3PFF2TJzm+xMTvEv757
      iu3fe5Y/+pPN+LpP8R+Xu2geHmDdi/87m/XN/OPJFjbW5HO79qj4Bxge8SFnBlhecvOdi9hE
      P0O6TBbnpd30uomRAfQpucz09eOsqCHNdJudvIeRZZlr164Rj8epqqoiFAoxMTFxGwag02Mx
      Q9uZ92kIl/LCkjRa2vWceufH1Fky2PO9b7Mg9bPfhLIYxT3twj05wOuTVrbn9nDZm8+KPC8H
      DzXyYOYo3qVPsijRS8OIkfvLBNweL0Nn6hEyX2T0zb0Elj3ArgcXAGC0mHH1NPPhwToeeeFl
      Zs7uJcNhxWLRkZAimG02Rq9d4MMzvex47AmmPxgkP9OKTcjA6BslBrdnAJrG+KCX6o0VjPe7
      kYtT6LzUSfmGFYS6O4llZRPtvUr7qJ/S5WuIXT1DW9jI8JJ1bMxK0O6LEpcdLMqSudTSh96R
      x/Ydm6/fXCUWTOA0yLTXnaBjLEx+5Uo2rChLBmq+BLFYDEEQyMjIwO/3o6oqdXV1nD17lnXr
      1lFdXc2BAweIRqPs3r0buGViLIm24+9yeszO919+nlybha0v/G/897/4Lzy6wM/h5ulfv3g2
      12M4TEzQ4xu5RveERE5uGlF/CA09eSXlLFq0ECEWB1RUVUOWJFQ1Qdu5OmRnDg6DQEyUMNrS
      2PzgNgoz7AjAzEAjvzzYxPYX/5D1pWmkWo34AxFiUS9mUwq+3vPsPdbLw89/izXleWRkw7Qr
      QtjjRspIxXabg6upMgMePybVjD48hCuiEA6GUQApFiEuJQgGY6TlF5OXns6qDZvZ8shOHl2/
      CDnqJWwqYMu6Gow60OvAP9TEoO9XYxcNhpE1DQQdgibR39b6/7d3ZsFxXeeB/u7t9faG7sbS
      bACNjQAICCQBUtwskiK1UJIt0pZGsmVP4mQcR5PJzCh5mSq7yi+eZ6dSUxPPxFHG0WQURZZs
      R5Ipk9RiLqLAnSAoEFxB7Es3utELeu+7zQNIaKEEkQFpKOL9Xhpddc6p0+feH+c///kXZheb
      y+UuY3x8HE3TsFgsXLp0CUEQWLNmDc899xyTk5OcPn2adevW8eyzz+L3+4HP2wFyUfa93U0m
      sILn/+Y8ax/ahTJwjL6RaZKpPE//eQXd81khbFw89FveeO8Mjdu+g9c2RSIySNjuwSQAwlzm
      hOuf3gqJf37p55z3WXA3rccsqgwOXEZSBQQERNGK1fKhfF488g4XxwuIL/095S3reXzTev7p
      pRc5q5vofOw7nPzd3zIW8fCbF5/Hu2IL397xGP/j737CaYuNrU98j8VqFqocIzaZQBH6yWYK
      OCNxBG0uomk6EsFSGWLF+s3ImRlO9vaypbWcTL6IoqoIJonGUB0WUWdyLMaGR75G6tSb5D7x
      gqvKLLGCj8cfX8fRA91od1+di381mqbR19dHLpdjdnaWXC5HfX09ZrOZQqFAPp+nqqqKfD6P
      oijzRhHDDHqTKIkRxrQgjeVW5Eyc8VmVSmZ4+9glqgJ1NK9qIjd4jt7BKCvWb+eegInj7x8m
      42nhvpCVrLeeShvMjPZx5Mwo1TUVBFo3IiQGKFtWR2p4HG9LPWOnDnA5aaex2ktT20qcX2Id
      6HaaQUulEpcvX6ajowNBELhw4QJlZWUcOnSIRCLB008/jc/nY9++fUQiEZ588kkqKiqMoHiD
      peOLcA9g2N4M7mq+xBvs4lnKwg13A9erES3lOhsCsABGqag7i6qq81VilgpDBTK4qzF2gJtE
      1zTGrp4jmQfJVUlDUxAjcPGLRzQaJZ/PEwqFKBaLFAoFvN7Pvo03doCbRNdUJsansDud8/V9
      Db5YqKpKT08PJ0+eRJZlkskkQ0NDC/YxdoBbwOYqIxAIYDFbKSXHGYmkGZ4p0VUvcerMRQR3
      Nfd9pYvpq2cZGQsj26r4yqa1yNOXONJzhUDrvTT7S5zuOY+lqpXNa1sxG5J02ygWi6iqis/n
      I51Oo+s6PT09HDt2jAceeIC6ujrefvtt4vG4kRXi1tGJj18hlsrgW9ZCY9kMl8ZEHtjeiZIY
      wWa1EI1c4sp4E0oiw+rNj5AZP8tMOMrIaIqHd+1ClDN07/4NSYuHUu8hri5vZcXCvnIGt0A0
      GsXn8+H1ehkZGSEYDLJixQo2bNjAG2+8wdTUFI2NjXzta1+b72MIwE0jEmhcRXtXF2YgFc7Q
      3NaIZBY4PzLK8nu3EJrsJSXL2Nxe3HYLRZsNBQGT2TxXFUfQsLhr2XrfRsrEAqqx+rcNTdM4
      c+YMAwMD87mBKisrkSQJTdPQdR1RFK/Finy47RqP4GYRBNwez7zub7a5cZnncvxXVvg4efQw
      7gof1T4bos2DKIBdcqPbvbRqEfbt3k2gZS3LV5Rz+sDbiM4KNm3ZvHS/50uGoigEg0F27dqF
      KIqcPn0agP7+fk6cOMGOHTsIBAK89dZbHD9+fF4FMlwhFsDICnFnMbJCGBgsMYYKtAAWi2Hp
      v9OYTKYlXWdDABbAEIA7jyiKS7rOhgpkcFdjCMBNousayViMkjZnM1DlPNGZ2U9pJ5PLljAs
      C0tDNpslmUzOFyrJ5/MLtjcE4CbRFIX333iR89ECOjrxwaP8w2vdN7RTSpOcOjlySwKQDI8w
      Ek7evsnepWiaxuHDh9mzZw+KohCNRjl//vyCfYwzwE0jUHtPK4mBYdTKBkbHFRobfIDCpVNH
      GIwVWb56PY3lc61L6WlOnzpDTihj3YZ7ycTDBKtrkdMJMppIMXKVD4aitHRtIWCz4xSsZCJX
      OdpzCXtVExs6V2Az/CRuiWKxSLFYxO/3k8lk0HWdvr4++vr6eOihh1i2bBmHDh0iGo3y2GOP
      AcYOcGtYA/jsCWITEeTyZZRdr3UtiljEAqdPnke53lYDk8VKMTXFuSsTyOExxtIyU2NXyBeK
      XBicIFjbiNdlYjYeJhrPoms6ZpuNqUv9jCczS/Qj/+0Si8Xwer0Eg8H52mDBYJDHH3+cQ4cO
      cfToUWw2Gzt27MButwOGANwiApVuF5fGx6n0ls/dCuenGEtKNC2vR1JKlK61nJocxeappiFY
      iVws0tDRwPiZ40xl3AQq/XR2rkQoTPPB2UHmkkOUGBiYorqxmaDLRkFVPmsSBp+Cruv09vZy
      4MAB9uzZQ09PD6qq4vf78Xq92Gw2isUiVVVV+Hw+rNa5PCGGANwkgiBgtdmoqi6nkFDwVnmR
      JBtYPIjZYfoujWKWJETBjF2y4HFJjF7pY3gmh2S3IEpBHKVpHNVBLLrC5NBlrgxHcPu9WC1W
      LGYr/jKRs6dOk9IsWM2mz5+UwTylUgmr1cqPfvQjfvCDH8zHAxw/fpyf5D1CwwAAEXZJREFU
      /vSn1NXV0dnZSXd3N88//zyxWAwwXCF+T2iM95+gNyzwwNZ1OK3Gyw1fjKwQhgAYLBlfBAEw
      rEALoCiGHn4nUVV13l6/VBgCsAClUunzGxn8q1EUBUVRlnSdjUOwwV2NsQPcJB89KgmADrdc
      deb6GEa1mjvHpx1pF1pvYwe4SXRV5jcv/oyriSKU4hw4eu6Wx+jrPc5Mysg2d6fQdZ39+/fz
      yiuvoKoqkUiE3t7eBfsYO8BNI9DQ1sJE/wVq7g0Bcw5y0bEBImmoX96IvZRgeCpOQTXT0tKE
      UIgzNDyJbvfR0hxa4vl/+SmVShQKBXw+H7lcDl3XGR8fJ51O09HRgdfr5cKFC6TTaVavXg0Y
      AnALCIjWCmodMhOxuTKycvIqJz8YxSmViGRFurzTjGeqqDaFOXPJwcqqIvFEgsLsAIKveonn
      /+UnmUzicrlwu91MTU3h8XhQFAW3283+/ftpbm5mcnKSUCg0n47RUIFukdDyeqJXh8lpOvno
      BDmrG49vGTUVTkSLlVDDclruaUGcTRObngKbC4dVZSa1sFuuweLQdZ3+/n4OHjzIO++8Q09P
      D7qu09DQQGdnJ5IkEYvF6OjoYOXKlbhcLsDYAW4ZUaoiVNVH/8VZnF0rsJ49zHjRyTJrOX5T
      lmOnfku/RaV908OYoxGi4QQek7boCjUGC1MqlUin0/zwhz/EYrHw5ptvkk6n6e7u5siRI7S1
      tdHa2sq+ffsQRZGdO3cChivEgnw0K8T8MgkC6Dq6riMIArquoesgCCLpkdOE3Wto9guIwpyt
      SNP0a6WhhPmUKoYVaI7bmRVC/8gzEQQBTdPmP3Vdx2Sacz/56HeXy2XcBN8sH3tpry3y3J8f
      +vW4a1fhEE2Y5hVLAZPh9vN7QfjIM4G5WGNg/sW/zie/3yAApVIJWTbKE8JcgMWtb5B5DAeK
      m0NV1ZsKW7yT3CAAsixTKBSWYi4GdxnX1Zal5AYBcDqdOJ3OpZiLwV2GLMtomkZ5efmSzcEw
      gxrc1XzOIVjm8tF32XfsAkUcPPndP6Ys2c8vdx+kZHGx6w/+E8t9n+wT5uW/7eax7z+F7zba
      /pIT/bzxxu+IZgrcs/0Zti2X+eUvdhOXbWze+Qxt1gl+uXs/ibxG54P/jm2NOi+88AoZ0cuO
      J5+hs/6Gid4Suq4xdaWHE33DmMuq2XLfBryOW7chxMNjZHESWuZf1HwMbkTXdY4cOUI0GmXX
      rl3E43Gmp6fp6Oj4zD4LP0FNxxXs4Hv/+RHO/fon9AyMYz79Lise/VO2tzpRPlV9k0nOpJDl
      IuHIJFlZoKomhKU0SyqTJ1co4a2qRlKzqHYPNr1IVhZwiEXGpmYwSW6qA35y8SS6WUcWXFR4
      Jcw2Hzue+RO8ej9/9bNuXG0Fyu7dyc5Akv/7zgFWfGMjX//DP0MbO8oLx05SeXWM8u1/ytO2
      M/y/989wT/2DiypppClpLo8W2LHrSSy6DIJKfDpKQRXxV1Zi1mWy6TS5gozLV4EkysQTSTST
      nfJyH2atRCw2w3QkisVvp5RNEUtlsDrK8Jc5r5lNDRbD9QAbk8lEPp9HlmXC4TCSJBEIBJAk
      ienpaQqFAtXVczfzCwuAaCVYV0Ps6kkODtn55jadN36dxvTeq5x7z8u3//gZqiymTy0XVMrE
      +eDEEWai42SrHmOj4wwHhizU2GPEpA1scw4QX7mLFcXzvD9q4f56lSOnrzI1OMH2736TKy+8
      QKShne3376DcK+EqDyImJ3njxXfpfOyPmO3fzbKAH4/PST53Cm+gllxsmFcPnqFr0+NMHhpi
      +cMVVAgh2HuWLLCYWhRqIYKprBGH1YSAiVI+wcCFfmZLOZzBjbR4YhzrHcJTZke21rBuucTF
      8wNkFZnl7ZsxRXsZTIGSz1HnrSERHuH80DRZzcz9992Hz2VclS2WdDqNJEk4nU4ikQh2u52h
      oSGSySSyLNPZ2cnx48cpLy+fvwn+nDOAxtDJ3fzv1y/wH//bX9AcKMPnD7DzO8/yrZUlXtjT
      j/bJLrKMrEM6OsTFgSky+RxTYxE0zDSt2sQjj2xET6Q+3keXGek/x8RMhlQkykwuj8nuZPvj
      32JNUwUikJm+yN/97CWaHv8zvrEuhMMkUigpyEoeq8lKPnKev/nZL1m58z/w1XWNOJwqmayK
      nM1QdDuwL3JxRVsZQiHJtcRwyLkE8VSOfCHL+EgYxSTRvmYjm+/bRrk1RyoZI5PNk0klmArH
      SOJg2/1bWbe6FUlQiMXiFAsFEpNTxPOGh+jt4Ny5c3R3d9Pd3c3JkycRBIE1a9bw1FNP4XK5
      GBwc5MEHH2TXrl3zl28L7wD5KL957SDlq7bx/r7dLF+7jfUbl/H2r36BMxeh66EaLvccw9fc
      xTKPmeHeExw9cRz76i1YSzPIZiftdU6mxz85sIDDLbDv3beYFGcoVq1mJpLEW9OGIzaNAIii
      Hbvtw0uL/gN7mMBJ+Fw3B+IttK/r4NW3XmPMLtOw6iGOv/kyGUcLE2ffJxlrZ/3Dm/lfr/w9
      l+1ZVq5/CtsiF9dkLsct9HLg4Ax2h4tQpQUsTiq8ViKJG9sXSyXszjJskoAoikilJO8dPoxe
      LFDd0k6+pOIp81EqKkbBvdtAqVQiGo3y3HPPYbFYeOutt0in03zwwQcMDQ1hNptpb2/n0KFD
      +Hw+Nm3aBHyeK4RaIjw1SaYwd7XjDYTw2XUiU1MUBQeh2gCp6Uns3iqcNpHMzDSRWZlgTTU2
      oUR4Moxgk7CYnbhsCrLoxGlVSM6qeJ0wNhXDKrlwOJ1I5JmIzm1hbl8ZajqD3V/BdRnIxKcI
      x7MAWF0+aqvKiIcnyagWgsEAxWSYaDKHDlhc5dQFPMQmx8jqEtXLKrGaF2vw0tHkAtFYAsHq
      wOdxMBuPoVrsSBYHdruIjojFbKJQKGARdWbiKUyShMPmwGZSiM4kES0SHo8bQc4wk8pjdzhx
      uZx3ZRqU2xkUr2kamUwGt9uNIAik02ksFgvRaBRZlqmpqcFisRCJRCgWi1RXV2Oz2YysEAZL
      xxcyK4Sm3aDVGxjcEa47pi3lO3eDAMzOzpLJGHkpwUiLcqfRNI1CobCkWSEMFWgBjCJ5dxaj
      SJ6BwRLzOXf5KpMXTrD73eMozhBPPbGZE2/uZiA2S342yb1P/yWPrfyk9MbY+2ovm598GM9t
      LP2Ui4/y1u69DMVltnz939O1TGbfv7zOaN7Jo088Scgc4/XX3iSct7L1q0/QWS3y+j+/RJgA
      O7+xk4aKxTn4qUqGK5ejtNzTiJZOMJnTqA983IlLlYvImgmrqKGIFqymzzJwqowPjFLR3Dh/
      P5EYPssHKQ/bOhsXnEcmMkDa2UzQ9ZHR8rMcObyfmRxYvDVsv+9enNYb/7dpqkJRVpDsn30r
      oiglwIx50Vaz3z+6rnPu3Dni8Thbt24llUqRSCRoamr6zD6f4wohkyk6eer7/4XB3X/NwUub
      +PYfPYtWSvOPf/0/qQt9mn9NnuHLo6zT9Gup7wREk4ig62i6jq7PBSsI6OjXoqTmIqp0VFVD
      EEREUfiIm6yAIArks3naH3iax1xD/NVP96B3qWRq7uOp6jgvv3mAP9jWwIad38Ux08M/7D+I
      ozpMuvlJnnCe4dcHevmv39zMogyNmkx8JoUOaKUCszlt3p137jcJlPIp4kUJT+oqY9422vy2
      uQAyTQNBZM7bQUfTFGYTqQ9vpvUik5NpVE0lrzcioaPDh1FnmoaOgCgKyLkkGbOG6gDxevST
      ouKuX8XWFcvnhrt2sPwwak1HEMU5M+5MhrrqwI3jC3NRbJOTVzGba1i2zI0gcC2ySrwWCKfP
      V1z/Ika1KYrC6Ogouq5TKBQoFoskk0kURflYRBh8GDDzOa4Qdlq7VpGNXOa9iwqP3j/3yBKj
      PYw42vhe2We/UoXEBL/e8xqT01F8a/6QTv0o+/oz2EoRpBVfZ4vlwsdcIbZW5/jF/rMkkyWe
      +P636P/5C0xX17Jy3aM80FVLeWgFZfkk77y8n/rN32B6/Hc0rqrG7ysnO/sGgeU7UXMxXt/d
      Q3PrAwyeGqLzT0LUkkE59AFpFucK8WkkLnTz9mAaezZFzYZHaLKEmc74GDh7miFhiNSqdYTE
      KOcGJlDN5Wx9YDVXut9nPF0knbVRt35uHGV2hll3NV2WCAPREqvMI+zrDWPWFVavbqfv+Eny
      ik7TxgcIFHOcef8d+tUMTesfZlWoDNCIXP2A/RMjWDxVrKpxcfh0LygqMjYkcwnR18GWe3xM
      RmPUmcK83pfFbTezsqmSs2f6Kck6HZs20HfyNLnSRVas24CvNMGFoWksngBd7SHOHj9CXrfS
      tfWrhLxfvHuLbDaLzWZDkiRmZmYwmUwcO3aMo0ePEgqF6OrqYu/evZjN5vmY4M9RgTQmz7/H
      P+7u55t//pc0VTpAzXHi4Ek2P/r9T++iqig6FNMxovE8ipJn4OIwK1eItK5/hO1NMV7aHYPa
      j3ViJjJFtqiQGhtncjYLZjPrHvk299U5EYB8YoSXX/wVwY1P8J31LRx8aT8lRUVVS5hFM6Xk
      CD//P6/S/OBTbOsM8t65tygUNVQKyJJt8UHpggCCDvqcKqGqIIg2urZsolUdoic19x9RNDm5
      d916Ar422tw59r7eTd5sQ8tGSUUmUKrXsqvVx6XT/fNDR6fGmZnIcLVMIRYZpGOVCbsvxObV
      dWjJYRQdlPwMV8fiVFc4WLNlC8vLYpw4GUYNlQEi/ppmWhvqEEwWLLk4dfesp6PGT9/5S6zu
      auHcqeGPRap5gq1su6eC9OR5VF1HyYUZStq5d+N6zOYaKn0ie/7lt8j2SnKzSUpqPZLdjmj1
      IOgKLG4/vSMMDAwwNDSE2+0mmUyydu1aNm7cyJo1a9i7dy8XL17k0Ucfpa6ubr7PwgJQTLDn
      V29Tu+nrZKeuEra04kxfpHe2nL9onlN/wqODOKpCeOwi0ZEhrvQfRatvQJ4ZQy5r4sG1Qd7s
      AxDmt04BAatdY+DcOYrFAbK2Jq4MjNC29RFS6j4EdMxmF36vc95N4NLhvYyIQdba8wyOhmlp
      r2ff0feRPVmqGldzZt/LJL2rqDClGRx3suor7fzT3t+SkiYItd2PtMjFFUUHQmmaSwMDZCMT
      uBtWIWQEzGYzoibwUX8Gk1VjYnCQsoZyllVVQlU9HpOG0+Uif3WQq2Y/U7E0c6myVOKJWWob
      m/FaVRJDk5TUAG6vF6tJJJmcwRFqo0kZ5aoAuqYyPTmMPDyGubwDE6CgU8qlicfjiDYnFabr
      W7yI2Wy6IV4WoMznwywK5FIpyhva8aZFxnQds1JidGoYwVxDeVUdZfUtWEQRh81EMNRIOjXJ
      WDhNrW+xziW3F0VRGBsbY926dVgsFvr7+8nn80xNTaHrOsVikVAoxMWLF5mdnaWhoQEA049/
      /OMff+aoOpjdLsRSjlwuh+SvxuswU9vUTtA/d6iMjA9j8VTgsIpkYpNMFct45OFNBAPLsGsZ
      BH8jXe1NhOprqKqqxFtWRmVVJfWtzRSSUbyhNu5paaR9VSPxcIKmlV0014eorqmmsqp83hVC
      MFuwmwVyuRya2Unbqi68QpaCvZYHt3QhOdzYhBK5XA7F4qFt9b349RiqbwXbN7RhM936oe6j
      sdGCKFJV7iU+M4Ozso7ltZVYbA4kScJqsc55ITocOJ1O3D4f6mwMzeZjeUOA2XgcxeQgsKyG
      CodKfLZAVU0t5V4XIjoWu59QKIjf68PvcWF3l+FyOJCsJqzuMorxKBZvkFCwijKXi9xsHFzV
      dCxfhkkQ5vT7QoZUJo+imyivKMfllLBbLUiShN0uIUkSDqcDl9OJw+VFkuxIFgG7y0UuEcdR
      VUd1lZ+KMjeF3CyCw0tLXSUz0TiC1UWF30MhnaQgeGlrrV3ggH/zXL8HcDgct2Usv99Pc3Mz
      gUCAiooKPB4PsiyTz+fZvHkzNTU1lEolMpkMwWCQn/zkJ//9/wMv4c7B3FNBPAAAAABJRU5E
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='FirstCase Map' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9V3McSZbv+XOPiNSZSGQCiYRWFKDWpaurqrure3p67p0d2737ug9rtmv3
      7e5+gv4+u9M9azMtaqa7dLGqWNQSgoSWCSCRWkWE+z5kAgRBAARIsMiemb8ZjQAyw1UcP360
      i1ujo7rqOGTGxjg6MYkNzJw+RTCZBEBpTfazz4h8+CGGlGyHSj6P8e13GFpTODRIZHCQypUr
      4PXhO3Ma+/ZtuheX+MbvI6w1Acch4bhUNSREvY2J7m58x4aeaNeu1XAcByeXw7n/ABGJIPv7
      6bh2jfC2I3k9oIGZaJRie5Kmri6EED9q/5ZpEgsGCXg8KK1ZzGap2jZCCJr8fhAC13XJVyo/
      6rheJjRQyGYJNzXt6zlzdXUVGQhg9fZyo1BAJJNEW1ooO069Ya2p1WyWb92i6dSp7Tv3+cie
      OU0wGkVqTdlxWKlUCE5No44fI+PzIaanOWKYLPh9NJXKlIBbPi8Jx0EnEgQ62tGNPtexNDlZ
      79+2sdoStN69jzk2hr9Uhh+ZqPYDARhLKXLKxbUsAi0tP2r/LhDwepFCUKlWyZTLG5+VbBuP
      aVLbstb/HmAEAht0uxm5hQWCra0YpvnE37XWmKGmJtZyOVzHoblB4FprAIQQCCHwvPUmmdlZ
      Ilo/xc3KxSKFlRXcuTnMU6fwh0IAeI4dw/PGGxSnpmm6fYegEMS0JlGqv4ya1vysXCGlFTPN
      zbiu+9TA2wYGSH/zDRcfjpNHE0FgCfFaEz/U16+9VqPt3gMe1Gz4kTdAzXGYXl2lLRKhus26
      vs7Er7WmWi7jVCoEm5v3dXpu913XcUhnMoQbEs06lFI8+uYyxv/+3//7b2b/8Ees9nZ8wSAA
      drXK8s1bhDs7ADA9HoLx+MbDpWyOcqGAx+dDSsnqJ//K+yuryJER0kphJZNIIVi5foPm69fp
      q1QJCrkxQRfIa01QCIJCkF9chEoFq6/v6QUJBnm4tMShag0JyNec+FdMk1Xg/hsXKZgmdjiE
      b8vi/xiouS5Br5d8uUz1NSb4rSjNL5D40yfER0ZI9XTj9ftfqD0pJdHW1m03hy0EZimXI3ju
      LJEGgWutydy5S+vsLPriBYQQaK1J/ekT/MeG8La1Mf/9d7QVioxoRezkSczTp1i4eo12LZi5
      /wA1NU2qXCZtGuQcB4FASkFSSK4rl5DW5KSgXxh0aggYJvmurm0nEIjHqbz9Fl/cvcvA3AL9
      mz7T25xIrxoVj8XC8dM09/Wx5jiEurtf2VjmM5nXnmFsRiGdxrp8mYTrUgWcWu2l9ZXPZChk
      Mpih776HYpE116WpuxutFC0PHxG3bWZyOUJNTXUii8WoXvmBdKIV03WRhQIfIZhcXMT7wQeM
      ra6Sz2RxvB76F1NYWhH0Rym9/x7LrosrBMXFJVRrC268hYiApVSK4u27lN9/l/AOGwAgEovR
      VCjSpzXLaFwpyQHlWIxApUJHsUSA7Y/AHxudpTLzk5MULQsZDFIuFgntUzE7KCitUQ1x9nWE
      UorCw4fYUuIpV2h7MEyyUkFrzXB7G80v6eTUWuPYNn4Epk8I4pks5hdfce3EMWIXLpB5923C
      n32BPb9AdmICX38/nqYIq8UipXKI88urjBkGp5VGVqoAhI4fJ1OrEW1pYen/+UfGa1Xyra2c
      GBxErluPjh4lsGkQWcNADQ6Sn5gksgvxmpZF9ac/5f7Vq0y7Lq0dHfg62vF4vRh+P/dnZghd
      vcbhXB7zFW8CAVxaSTOdvUb2V39DNpN5peN5XeE6Dg8+/YyLy8u0Oi4G9bVLGZLFoWMEz53d
      V3uObZNPp4nE408pu5tRKhQY/+xzugsFIq7CnHVdjlOXrZvv3iM/MIBQCun1EPnuO2pCoLI5
      wu+8zVJqmejEBCHgsOOANKgJKKXTBEIhUqNjWB0drA4OcGp4GPVonNmebqIN7q6VIjc+jrWy
      gpXNont70Z1dBJujz5ygNxyCjz7kyDZiT7y7m3IsxtUvv+R8agXPK9wEboPjttds0mtrdPb3
      P+OJ/3go5fOYf/qEX5bLeKkbNTJaM9fdhfH2W4SeQ+5XrguGsfPnSpFPp1EjoxxJr3EUSGuN
      2WNarKHxa82gkIx89TX4/BSl5LBhorXmbihIOZOh9/w5yqEg39k2oeFhurVmPrVM4fJlul1F
      EnCODWGWy7RKg6xSlL/6Ch2OIJJJapOTnC2V8TcINLe0zL32WVp+9tM9T3QnMccfDOL5+GMW
      /99/pKdm72ftDhx30JxGIFbTVJPJF1bk/j3BdV3Ul19xtFRGCIHSmkfRJgpvv0VkB2V1T+3W
      aliwrakzNTxCbHiYnlyeWMOyqbUmJgSmqxRXPBZHajYV0yBcKNKbzaEaDztCUInFaP7kX8n+
      4mNi58/jKxTw3R/GkaDbkyQTbZy4cZMAcPPhIwL5PABNUvKeo2AtQy29hsmTVpyIEPSupsnW
      ahgHQCRCShxpAK9uAxhCcEgafJFoQeRyBP7wR/jbX/3nJgByKyuo6zcYWFndIP6bHe1EfvZT
      mnZwsu4V1WLxqRMgn8lQW1zkzJUr+GnQndZs1orMhWNH6Th9ktTIKC2ZDG3pNaY9FqmjR7Eq
      FdxwmGhPD3mfj2jDnu0PBMheusgtrenu6SY7O0dRSoJKIR2bajJJfm2NEIIVrWkR4gmxZEUr
      WoREac1dKehU6oUmvw4pJaV33mLx68skX6IF4VkIui5qLUPLxz/HnprGLpf/cwNQjxjomV8g
      KiVaa66bBqGfvP9YR3wBRNvbN37WWrO2vMz411/zi1wev9i5fTPW20vqy6+4ND4BwIOOdnwf
      fkDMsp74YtOmDoSURE+ewHVd1lIp4oMD3LZrdKXXkNEosjPItVKJ/vl57jRF+GhllZLSrGpF
      WEimQkFksUTZMomeOI6/4X84CAS6ulg+cYzW6zcxXqEu0FKtsjw2Ru+FC7sqZf+RUFtYwAOU
      tWbSMLDPn8PyeF6ozczyMtHW1if+ls9kGL98md5cnqZdiB/ABPBdvMCdSATdFCG6j9iVWrlM
      KBLB4/PRc/w4pmVhNZTUng8/oOY4HFaKeysrCCGwvF5s06Q1GGS2UMDr99Pygguw7bhCIWxg
      Z5Xo5UE1HH2W1rQUiv9J/A3YtRrG9AxxISihSV04T/eW2K/nQbi5eePn9QiGcqGAFY2SWU2j
      DfEUPW/+3QSwPB6iJ0/suVOtNZVikdr0DBXHxnvqFHYuD99fwV8ssDw4iPT7US0tNCdaaeno
      QCsF4vFgXqZtPG/bpA2DjgMSrfaDLJprLXGajh6l+T8tQECdXnK379BbqeIIwVd+PwOHBg+k
      7c0MJp9OUy6WaE60Em5uxq7ZiIXFjc83E/76ZjHtWg22kcG01ti1GtX5eYyFRcxzZ/H4/Wit
      WfnhBwIjoxS1ol1DPpEg//Ahp5aXiUpJz737lICRX/wcrTWF8XGCt+9QlRLx85/hlkqoiUlq
      8ThGsYjbHMUXChGIRg/EmdXS3k4xEoZM9oXb2ivSWlOTgiSSj1bS3AzNIw8d+tH6f52Rnpgk
      ev8BnUKQB6KnTmFuEbF3wlZv/+Y4tc1/c2o1tG3jAYo3bhJcWSG5tvZUW1th5hYXcS2L8BY5
      Cq1JzcwQHhnl9MoqN0MhPKdPoVwXNTVN0lWckpI7AqxQiEQ2R1Q+jveZSrYRaWujMDHBka8v
      4wVuHzlM8c4d2kdGGRCSLw3JO46LAPJCMPXhTwj39OxpYXZDIBymdvYMtc+/5OAFrCehtSYj
      4KZl4m9P4pudYz6RwOjsfMk9//UgkGilQl00nAkEiO+R+2utyX77HVZvD8HGeirXZWp0lN6j
      RzEaVp+1R4/ouPwdvUphwr50P9kxOkb4L59SKRZRrotdrVItl6lVq7Rd/haZy/EIjWhLoLUm
      PzeH76cfMS0gD2ROHmf14UOqmxqtAeXjx1BKEb52Hb8QpAyDlM+Luv+A9oZJqk9rboeCSCCi
      NeEfruLYB2PCrDT+vWy4wKjWJLRGT05x5+JFrI9/TuSAjvi/diil4E+fcEjDjFIU334TY4/c
      37Ft3Olp7IZZvVouU1heJtHVVef4WpNeXMSpVmlTCq8Q+zZ8yJhSFA0D/fs/IP/p/yMzO0fm
      X/6FYjpNUMMZ2yEVjxNpa6NaLtPy+RcUxsZIIEArjty9T6ZQwCMEC1pzuy3BaHuSSGcn5Xye
      aLEEQDrZRttSil4pN7hym9JUWuI86O7i60QLc5Z1YAFQht/PdOTlp81UAGEYpHp7aNYgrl+n
      Uiy+9H7/WlC4f5/+Ygm/EKwGA8Q7Ovb0nNaazF8+pcnvJzz2kOz4OKZpsjo+js/nw+PzUatU
      qNy4gTcef27PjwRoK5U5Uq7QVyhSuneXw5Ua4tp1arG6ht3a2G1ev5/00BBvjozRLQRhIWnR
      mv7lFQqHDtEKqMEBgr/4GCklanyC5saO9GUy2K0tRHi8S2eVy6ppMhuNcjS1wpm1DM6//hvV
      TQkcz4t8NovnRyDEkBBcUgrPUgpaW/Ba1sbR/J8Ax+vDS0P+PnMasUebv1Or0bOU4kg2x+G1
      DN4HwxiWRTQYopBKkR0dJf3Fl4QuXMDy+1kzTZ4n7E8CJEQ90UQAH65ladGa5nKZnNcLQFOh
      SK1SQQhB8Pw5br1xkUJDoTCEoBoMYpsGtw2Jf1P4r7JrG8qKqtVYm19gqeGJ00BeSgKPxqnc
      uM6M62CgGczlWL5xY1uFZV+wbVq3SQY5SBQ3vIqCdwtFPEJQ7O3BGwg848n/GCitrBAYHkZS
      f99iH87A/Noa8U3ijLCsuiUxn0cpxVqlQjyT4cgfP4H7D1j5r3/HeFNk32N8YjuKTWbKRLVK
      tjHwmNZUFxYAMCyL2NAQE8ePsaIUk2iqzVHMlRWqgQDOpjgczyYzZJurCJomLVIiqEf+HVaa
      jzRcMix8CIJCYiKwZ2ZZnJqiXCw+90YImCYR4KZWLL6ksOCUIZnWCtWwVAyspgm8hjkKrwru
      1BRD6bUNuhKFwp6flek065qC0ppKdxelb76hY3ISZ3WV83fvEzYM/MDRkVGckRHmI2Gm9ulV
      luUd6CKE4J2FRQRgCoE5Nb3xmRAC6+QJZr0eVj7+OZEjR7AmJnmrUMS4dm2DaJVhUNQaR2vC
      WtNbLJH1+zbaCUqJFIJ2KTnZsOdWtKacz3P700+R//hbihMT+5rQxsT8AR7F46yeOskDr+e5
      jsdnoV9pKkJyxTRIU18X49E42aWll9DbXx+M/n4+bYpwz3VBawKTU89kaFprSqkUXXfubvye
      EiASCTompwlp8LS3sxKP0dzQL00hOHPvAb1Ly1S8+7P7Sf8uzMpqcDKtNWrLse7x+wn+t/+F
      WHs7pUfjnKpUEUBobg63kYJnnTrFN329fN4ap6g1naUSA5Xq1m6eQFAI3jItzmvwK83cjZtU
      CoV9nwShrk6Mv/0VQoMcOspDffBOsVnDIKIVlmUx+bOPKGrNKcdFLy8feF8HCa01+bU1JoeH
      Gbt2jdT0NKm7d+sWmwNEIBYjfPwYw34vGuhcWaX0DOaglUL/5VNaN9FJQmnE+DjL7UlCWtH6
      xZc4ts3VTSKPBqY72wlX92dEMf63v/31b+akpKJcAo67bQqdEAJjbY1RNE2JBKV8Hrta3Qjw
      sjNZIrNzeIVAaM1CPI4/2oSQktYbNzm1lsXX0DGemrDWKB5HiUohCAhBh5TcUy6eWo35+TkC
      pRJmIrGvwKnc1BSxmRm030ehOUr7avrAUgSV1jyQ9Tk1KY1z6iS1yUlWazWclhZ8He3PbONV
      oFqp8PCHH0jNzBC4/4CqY+MspajNziLmZrFDITyh0IGJcYFYDJ/PR7ZQYKFmszoxQfDI4R1D
      RJRSZFaW6crlN/4mhCCrFJXjx4hNTNLsurSUKyQq1Q0mLYQgmckwoxRt+xi78Q//43/8pmRa
      LHW0M5LL0luzt7WlBrQmvrBIulyiFAhgWBZeX12cqc7P0760hCEEHq2ZX1lB9vdheTyUWlqY
      XVxkUim6XIUQgpJWVLTGpB64/KXPQ0RpNp8xQgiaECy5Lu86Lku5LIVwmNCm2I9nobyyQnFy
      kqOLS9SUQpTKhA7oxS5oTQHNpFY4Q0dRuTzO8WPkW1vwJJN4DzDA70WhtSazskKtUmFxcpKl
      8XEGV1aJ+XwkqzU6SyWaHJfDpTKZqSmcgYEXDlJbhxACfzyOPHQI38kTePp6sSyLlW+/I9D9
      dNyZlBKVTpNcXnk8fmA50Yobi9EyMbmR9WdtedZA7Iv4AczjD4Zhdg5H63o9mx0a0FoTBlpG
      xlhdTdPyd7+uOyIWFrAiYRzYsO8XAn68to3X7yfQ2or8m1+Sf/SIf0uliJTKBE2TteVlSuEQ
      PR4vUeBOPM6l0TFCm/qMCMEp0+SeVhRLZXq//oZSPE4gsjdtP3L7Lu3VGjeSCWQ2R9Q0QB2M
      NtAhJSaadtND8sEIBjBnmYwNHaUtkTiQPg4Ky/PzjP35L9ihIKFyhRM1m17TQNdsLK1Iuy4V
      Dd94PXjOnyOiNMVMhsB6PvgBQDZMw+FoFMe2CSwvU/n6azh7Fm8wiJRyI1HF2aIsC8DxevBM
      TOI9YAPDhjxhbuNF08BmS/o1Kfm+vw+7p27qzCwvY/7lU1ZSy/y5uYmRUJCMgJA0eHTlCqWG
      B88XCNB36hTxSIRjq2lqqWVSHe3E33yTKY+HyrEhzJY4N5siGymFUOceUSkJKUUEwRXTrKe+
      7QFaawqJVqpC0L66RrGzA+8Bm0UTCLpcF1MIXGCxo52ec+cOtI8XxerCAo+uXCFk23Rns/y9
      qzhnGLRoaAWWHZcB02LAMAhWqyx/+RWVf/5nZv70J2rV6r51L601+VRq1+cM08T3d79mtVSm
      9bf/hPmPv6P81dfUSnWlNlOusCq3RHA6dUX6oGH8/f/xf/5mJhzGu5TaSFWEuoxbFIJrRw6j
      C0WaHIey6yIrFSLnz5NbW8N4MMyZTBa1soJ+600qoSDdi0v0FIukszlSpoGxtoavkepWyGRI
      LizSCxjFInZ7kuSZM2Smpwk2N1OsVbENg3ix9ATnaZUGk8ol4POBaWyUbdwNQgiMZJIlAeLN
      N9C2TXhunvBLMFFWteZObzdN7723weleNRzbZn50lLW7d2lfTdMnJX6tSbsuLYaxwfnWlEvM
      MFBa89Cx+anXR4/WhG2HiZERvOk01UoFMx7b02mQm5jk8F8+Y8aQ+NvagLpcr5R6Qn9Lzc0R
      aE/SPj5BwnFIZDIsLiyQD4WIHxuiWCjQksls9JlKtFKJhKlmc8y1J7HyOV4kxWi9XelbW8Nt
      T1Iy64tQ1poscK+rk1vnztBWLLDQ38utE8ep9vaQaU+iXZdKOo0yJKuGpA9BdXqaUj7PklVX
      bk5IQXl+gRPXblCcrptQXcsiq+t6QIfS6EoFQ0o8fj/N7e0EQiGW/H4eGPIJDqKpH1WTfh/x
      06f3PEnL4yF29iy+QACfbfOiaulWX4LWmjxwt7+PyPvvvzax/67jcPWPf2L82jVWiiVOSIND
      0qDgugQRjNg1Htk2jxybmKxv2GWlOG15NkSMuBC877icmJ7h+JUfsD/7HKf6pAVPa021UcZk
      42/KZS4ew9sIaiyl08z+279RLhSwazXKxSLZL78keucu0nGobNoUJ9cy9P75zxRv30ZcOM/M
      pvUMrqZpOnaMwqFBQksp7p46RWaXE+FZm3UjHLo1n2f68iTzb77JTKlIxnVp7+ujOL9A4sYN
      /EDNXCZ38QKRC+fpKpXwBQJ4gkGykQgjqWXcSITkhQvYa2s0PxwHwNLQ6zpIrSnOziJjMWLD
      I3TK+ka75vXQ1t2NNAyqjQGF+/pIK8VwtUpoZYXuhtIsgOPSoLC2xsi1axw5d27PxFbIZLC/
      +prgAYRFjGpND2AbBmnTIN/fhx4YINrS8to4v7TWrC4sYBcL+ICmSoXRWo0mw6DHNPELQdVx
      6TINakC4QYAOmrh8fHptVjANYGh2jpHPv6D67jt4G+UvhRCsPnpEfOwhTncXgfPniR46hB4c
      RK6tUf3DnyjlsviFoJxK0XL1Gq5SJB0XqTXuZ59jbcnYahWS0MgYNx2HPsfZKIPZvbLC9fEJ
      Om7foUsI7IUFViJhovntnWt7Fd2MX/23//U3taGjBOJxgskkpmmSGh2jbEjSaxnatWbQccln
      s5TyefxdXbi1Gk61SmpigncXlsjm82RqNXrv3ifekLNNIUhUqlQEZN96k/nvv6c3XyDcIOpy
      JIL31EmEEPgCAaRp4v3TJ/RNz7Bkmqwl20hkc3gbA/UKQY+Gqfl5hmdm8EciBPegDFcWl9Cj
      oxS9XiK2je8FCDUtBbNvvUmmswPz7bfx9fbiDQZfG+KHusJrVyr4olEys7P0u4qEYdBvWoSl
      xC8kQSlZcF3aNnNYIZl0bGINZXQ7tBSKVMcnSPt9eBt1O6XXS+et28SXUsy1JfAEAuSmpuj4
      /Et68nk6XZeQ49A8PUur69KkNZKGiLpDPxaQSK898a5yQOWNS6h0mnixxJJjk9hUYeR5YR7J
      50mNPaQS8COqVQarNQ4JwedNYZI1m04AITiZL6CGR1l4NIGlFV7bocU08AIBQ6LLZZKbjsh1
      D3JAa8yFBaJNUdqXljd2dP9ahrGpKUJ9ffiCQSrFIrFcHiUk8bfexOf3s5TNEV57XFjKFIIP
      LQ8P0hnsL75k7eOf78p9tdYUHz0k5ro0FYq7Ft96FrJoyh//gua2xGtF8FvR0t4OWnPrk084
      rjRDpkVgy3h9wNZqoZYQJKXBslK07aLHdFar+L65zFw4QjjRil0sUZKShZ+8R6ilhdzt2/Td
      vkts0zNNCLZ1Au2CzdYerTWpRCumZeFrFFducRXjlskZ23mhYmimB+hyHNjkeEBrzq2u8T2a
      N6XxWGEAOtfj9YWgya2nOXYpzfDi4ra1Og0h6Lh1hxJPymWW1tibzF1ev5/JNy5hBQPEk0mU
      UtR8vqfa9ArBWcvii1KJ6T//mdbjxzl08uSOymdiZZVDz0iM3gvmW1sJvebED/U1XpyYoGlh
      kaAQ2xYJE0KgtgkOWVGKvsapMCkFvUqxnfsypjQzi4uQaEXYtbr/xzDqhWhHx54g/heBapjm
      80Dh7Bnk2BhHGjSTcF0S9cm8UB8Svb281CUlrVo/xSm2Q1gILqmdg8BatKa14TiaVi4rWnOv
      q5PI0OOkaCElzceGCDWUp/LkJIPzCzhK4TZc9CnlsqDqItZPPB4OlyrIq9dIjYxs268QgvTJ
      k2TFk4F++0UWqJ4/tyfFartwAq01dnX3EJCDwuriIuY3l/nAtPDRSPreBtuxBMVjP5BtWVyL
      x0lJ+RR9VIVANjXhui6Rnh5KUtD25deYv/0d3c8IddkPPkFzVQru9HTjEYLOB8P7PUieCbmT
      qmAIwVlpvNDxsnnhZgMBblw4z7DfxzcdSQIf/GRHRbY8P0/vt9/XQyuom9G01swYBleSbQwr
      xYxSXDRNqpaJd1Pp9q2ILMwTfY5lWxBQAFKmwfi5M4Sf4dzSWlPKZLj7+z9QWlujVq1SzuXI
      rqyQnp6m+M//wuLY2L7HsR9orZkeHkHbNhO2TZuxs6FAb/NeQ0KQb2zgwUoV0zRY+tUvuXvy
      OGPxGHk0i4bBozOnQEqs3/0T6a+/IWY7tNo2feUKe8v12hvekQZmKESTx0Pzl1/TWj74HL9d
      TSnNL1CwSGnNFdOgU0q6bQef61JbWqLc1oYnFNrViqO9XtzGEW02RButNQtK0X3xIo/u3uXE
      xBQjyqESaya6C3GWOruozi3s2YPoak0ZmBCCpoE+nEOHaNqD30ErxaOvv6ZvNU35+ytUQ0Ga
      Fxaxi0WGDIOw0ty5dZtqZ+dLyxeolssEFxc5Z5jMuM5Tsj/U53fTMqkG/MQqVVo2nVhxKZlX
      inAjSvfs0jI37j+g6f33AJjMZrG8Xhh7SP9nnxHW0Dk+XueiL0E0bNKac/kC7GDpOQiYQvBS
      QoWlEJx3FVfaEqzMzVM5dpTBW3eY6O+l5ciRp75fSKdxh0dQ8Rie2Tmqbv3FrOsAQgjOKc1o
      KkX/pUuMzcyigxEOf/DBruNoOnKYqelpBheXNqwPO0FrzbghyXz0IUGvF29zM/49OraqlQpN
      HR2kWlrwPxrnyNISbUKihNwgkFOlEne//Q7vPmqh7gfFfJ5opYISAmubU08Dt/w+9Ac/IdnW
      xszkJJEvvtrQE1aVeoLpaa3RTU04tRpCSoJNTVSKRdpv3iTcIBrzORTc1wkmvLy6+h7g3bkF
      CkJwx7KIK0XX+CSTq2nKH36Av1EbSCmF9f0VTi6voMYesqQVCSHR1K/z8Zhm3XkmBA9v32Et
      EKDlb39FZmmJyDOC46RhUBgaYnZ+AVfAgNiZoFNSMHdsiO6Ojn2viS8QQAYCiOlphhyXlk3R
      retwNaxpzcsIk8usrpL69lvekZIFx6FrG/HH1RoxNEQ8mURrzfLoKFuDQ5wtoSj+TIbU7CyR
      m7epDPYTPXaMmdZWYqnXO+R7r9hRCT4IrLc71ddXD4yjvuMGMllif/gj5U1WINc0WEDzbbyZ
      q81RvmnE768TP9RfyPvVGrVPP6NaqdB7/PiexqG04qrHArk7N7eVQvl8z8UQhBB0HD5M23vv
      sczTBgFba0ZCIRLvvbfvtp8FrTXVuXm60xmiCBy9fVU8Qwhk452UFhZ4Z2n5CTt6m2GQ2ZI3
      4VlZIRQIILs7abl7n9Bv/4nEv6OEnw02cZDXDa0HtN2OhBGJBN4zpzHu3sUBhNZ8195GbCVN
      8c9/xv3gA0LNzdTOn2dZSjqamugQgoWpKe5/+RVDjZdZ1RqDRvaPNPi3W7eIJ5N7SkAPd3Vx
      1O+nv1Bgt/M6gCAcCu34+bNgmCari0vEAwHscgWrEd24JgRz58/iHRrac0GovcKu1ShmMrTd
      vIUpBON2DcXTs9TApGngO3qEtcVFWr/+htAWxifgiWBEgMFCkdTnXzB3/hwiFFsgAjAAACAA
      SURBVKQjm4MDMCsfFNYjSJ8X5vpK7ZX4dSO/dqc7g6Ee4/+dFMTeeZtQWxuu41CKRhlLtmFq
      TewnP6GytoZ/egbL56NSKlGZmcXx+zZEmmRPD8MnjmPevcdRBIuG5EYgwJv5AkEgvbRErVLZ
      U2FdwzTRHR2okVGMHaaptGbM6yEQffZlHbuh69gQ4sRx7j54gH92DtfrRV+8QPAFNtZOUK7L
      7S++wLO4xKpWnEITMIwnQhqgPrfhpgiVt9+ikkoR+f4K3TtYVCSCmtZP+A8SNZv4t9/XTaev
      wA+yTptbCf1FiR+26AC6UeVANhreblOs3zu1E9/VWpMzJK3hMFbDPGmYJs1DQ+RjMaymJsqp
      FG42S/iNSxuTCHW0E2xUp3McB8MwGDp7lpnlFZpSKTpdTaZa44f+XhJLKQ739+HbR5UB4+QJ
      pqZnGNjhcugsYBw/tudcgx37aVi3mk6cgBN7r7e6Xzi2zaNr1yhPT/M/mx40grR+Op/D1prv
      /D5afvkLIh4Ppd/+jqM73LMshGDANHnk2By2nkyIeZWVtnfCQYjuUjWcN+uc3XacjajH7TqQ
      QmDuwv1zWnMl2Yb4+OeYW0yd4US9ulz4q6/xOU49RHp5BadWozQ+Tun778ktLpEaHyc3MYGQ
      ksR77/LovXd50BLncK3GUHoN308/wjXNfXEjXyhEobfnqSN+HaPNUaInT74ST6/WmszqKsV8
      /tlfpi72XP/8c5x79/i1UdeRJGAINszH61gWEHr7LXyBAEopul33qUyqJ9rWGs9rJuJs/nnz
      v4OACfU7ZaUQ9dDkba6Y2TqInaC15nooyMDbb+PbwdZteTwU/+aXBBuijrpyhfKli7TMLzCY
      L1AaGaMK+KXg9lqGlnNnaR8YQPX2Mry8jDE2xvLMDJ2Dg/teBM+Z01wfG+PSNllhUcd5ddY8
      rZkcGeHQyZN7+vrIlR8IT05xybKIS2ODUVlCUtziia75fIQa1dgsjwc7EITa9hf3aa2ZcR0G
      zMd6ir2JNl4FdiqOe1CQjvt4wXZKGNdab/zbDVkpib337saF29tBSEko9ji5wnz3HcItLaST
      yXrhLSGICYFfQ9/du2Qa2UVCSqLJJOH33yfR1UVudnbfk/X4fHDixEaW2+b52K2te65adtAQ
      UtJ7+DCBPegJWmtktcK7locaT87BD5S2bIBcOPyEoaAS3r6PdeJvlwZuQyKAuuiz+fdXhb3Q
      3/PAlEIgpNxVrNkrliNhQo0soL0iEI1Sq1Zx1tJPfZYQEj79jIehIKH33iPUCMENt7Tgf05l
      tfnMaW5kMoRcB7Na48TKKgiotrfzKuu5NW+tzk1dzq80LiHZjEKhwLzWmOgnzD0uUNkiAnks
      a4OLaq1R26yzBqZch7A08DREYUcprEaA26tO83mZm0+aB0T8rtYUjg09l2xmeTwEe3uf1vKB
      Nselp1jC9HqZHx0F6taP8Zu3nmthZEOviPzsZxROHGdEK4a1xt/+ci5lfl5orXlw4waVRp7s
      OoQQ6GCQOeU+df2PxSazXgO98wssf/KvpJeWmLh/nweBAJcdm5rWrJoG16NNXDk+xMMzp8lb
      1rZ6ldwlR+Cg8WPrYKZG4zaSWLbKWkKIp+rwbCa6zd9XAMH9mfq01mTTaaLxOBWvlyr1WPWt
      sB0HKSUdjRCKwuIiHQ+GKQ8d3ZPYsBXrtviWnh5SP3mftdVVjr6Gl9h19vVt6+kONzcjp2dI
      bFr/SeXiU5qWLX4RPzC0lGK4UCASi9HR38/SxARXlCbYlsAwDILBIHJqikLATybnEDeMV6YP
      bb4A48cQuzZON9d1sSwL13WfODJ3K0T1xGYAdG3/obBNsRiu6xIee7hjtlZIaeZmZ+k8fLi+
      aaameEspvrhxk8H33n1uriGlJDkwQHJg4LmeP2isJ447ts3orVsMnT+/7foHw2Fym34vas2Y
      z0dTvsAloy7DryutNvCDZdLV3o4vEEArRaKnh8KdOzTfvEWz65Ly+/CXy5wU8pXY+bfDj6Vz
      mCAwDGNDUZKN3b9fojKAyK3bZFZWiF66tKdn1vvILi7Rv7K6o+9hTbnEv7/CqmmB69D3aAIP
      0DUxQe7YEE2N61v/mrGeM1BcXcVeWcXj8ezIfJJdXbRZFihNTWtGThyj/ehR+N0/4Sq9wb0z
      WjOcTBC/cKFuAABqtRrjn39OeyZLj6uQQrDc0kLzUgqecTmJq+rff92TgvYD4//6m1/9htxj
      fvIsG+tuIROxahUjnaZw+PC+XP6+cIjlUJDw3Py2VxrFhaBVa3KTkwzOzNHaGEPedZlxbJo6
      O1+bciT7hdYarRTjt25RSq/h++EHwuUy0Tff2DFk3LQsiolW0uk0K4cOETp/HsvjYXp2lsOV
      6oY1TwErFy/Q1NpKMZvFGwhQzuWwlEIMHWV+YgKf0hiFPHnX2Qjg22WwB2qDfx2wL+1XN6wD
      uyHuKsoLC5QLhT0VWy3mcmilCPb1MdX6JCffavoaEpIgj0+OfsOk6eEjVv/Kg7O01qxlMkyP
      jdJtO+RyOazf/4Hs+M6VsZva2/H9l78jcP4c5ZUVlq9epfnQILVN6+UC2jRJf/vtxmkillIE
      0ml80Sj9UuKiWaxWie9B4vgxleEfC/s2/zyzuKzWBL+/QvK3v0P/8RPyDx7suhEq5TKVct01
      n4/tre7n+sYQwBHDJD09/cxnXlesc9TOgQFs16WiFW9qiJbKWPHds2uFEIzfuMnUJ5+ggGB3
      N6nQYx9MEU25VMYYHCQYjeI6DtF79zg2t0Dg8y9pRpAwTI5bHrLq4Krm/TVtkn1tALEHj6Ah
      BEdqNjENh1ZWOH7lKuUfru6o1BQyGW58/jmObSMbDpf9OD2yWpHL5V65o+ZFIKSkubUVy+9n
      QWvyWnE9mcC/h7gk/+ws77uayvw8WmtmwyE0MG+aPGyK0NrZQbxx+XmtUiGdyzHj2OjVFUZr
      NXJK4ZWSglKUDqiE/H4ji3f67l4jEF4EL93HYQKHh0eYTqWoXTiPv71en219QuFolIHTp9GO
      Q3Jyat/t9xsm7uISs8PDdB87dpBD/1FhmSamZTFumZxQmjOLSyyNjBAc2v02dY+UFIA1nw/9
      +99TcVxmpSTz61+R3OIFRggihsGAeHyd7bTrMFVz6DFNZh0HFxg0rW2rSeyEnUIVtiPanRjV
      ZrPn+s85pQgJsSF17Ke9veIpJfhlwATi5Qr+ySnKw8MwPEJWa3yJBKbXSy2VovX7K3RuqQm6
      F6yXUR+bnSWXzyPDYTzPmdTyKqC1Zvabyyxe/paepiiRUAizUKBZQzmfRwwd3XUu89kcq0uL
      lGwbLQTNb7wB585SzucJNSoxlwsFDNNk7s4d7KUUNdeh2aiXu0m79TpAzdIgbhho6srzfguI
      bU5aem7uL+pFhtNKMebYoCHlOhhC7lgA60WVclPwcnKCt0NYKcKNshl31+9+LRTouvIDHbsk
      Vm/nFFFab4RtS+BjIak9muDz6Rk8//A/7RiM9zqhUi6Tm55mbXycoVoNe26e1MXzjMdbiN66
      TVe+wMOr1whcvLDjS/ZGm0gIgdneQcHvozgzQ81x6BwYIPfoEc3XruOtVJno7cE/NkarlCy5
      Lu2Goqo1DnrjgnOoF0KYdt0n/raOneLyN/9tv8Toak0NzbLrklGKiJREhOSM5UEIgaM1P1Qr
      DFgeWhv3y802HLfdB1CLtZ7T/JzRdk7DLvw8t66YjfudgtEo6XicjpXVfT2vtUaLJ8s2WcAb
      tsP1Kz+QOHeWYCPn+HVFZmWFlsvfclEaFE2LO4cHaevpwfJ4WBgfZ6hYwvdgmMrxY08k/iil
      qJbLlJaXEbkcAjg/PUPeMEi6LldnZslfu84px90wK/dMTiE8XrTW9Bsm31Qr9Jsm/ab1BIOx
      hMAvYMZ16N6UV7xVHt9K8Ou/70f+F0JwuVKm0zBpMwy6DfOpZw3ghMdDynG5b9dISoOkYbCq
      FK7W+8pT2I6Rmus5wZuPsM0T2skl7TQUVlfr57LBlzIZclev4h0YQETCsMsG2K7/7ZRxIQQR
      rfnJ5BTfezwE33l73+P6MRGNx5kK+DlUqdU5n+1QKRQofP4FPdUqCEmf1nx/7x7GqdN4/PVK
      eaNXrzI4+hC/XeO4NPDLuvMyouqV+gZdB1M9zup6KqYeSEiDLtPadm3zSmG+5JwAIQQaTVVr
      mmS9XulO34sIg7Al6dAmHiEwhSAsJZOOw2DD37SdDrEV2+a37MTvN8tW28lZ65xfPWeY6mCp
      jBsOE4xEqDbHdkxU2S9kY4FKzxGW8WPDrlQIVKvYQEYparFm/OEwbaZJR4MATSG4+GAE54cf
      Np4Rj8YJOja4LsHGe9j8foJCUlBPx3eto7Ylo2/r+7O1xgPMuk79ft9t2thKE8+TqJJTmkOm
      RWwPwZhCCAJSbhRqM0U9dH6z+fZ59IHn1gGkECC2v/huL4i4Lp337pOOxajMzu7fIbEDalqz
      bBqEotEDTfR/GVidnyesNGPtSdwL54lEo8x9+SVHqjVSSpFoyLwpKagdPoRfa8a+/563KlVS
      rkvPDjKwTwgquzAUC1hULtVaDQPQaLzU64hWtCZkGESlQVErMkoRe44TPu26pJSLVwjaDIPA
      NifKpGPTs43Ys1e0GQZjtk3Ekk9JLnvF1ujZXbFdJ/u5tXFrW125PM5fPqW/Uj0QQp30eVl7
      6y3c0VHySyn2l5nw46Pn+HGqAwP4fL6NZJyW8xeY++orujMZMq5CC0FBSorLy5Rv36F7dpYy
      UFAuYWFtu8mXlcui69LVqA+6FUIIWg2DI43ML1drqkBZa0ytaWtYiDxaMGbX8Aqxo4iyFRqY
      cRyE1vQZJor6NUwVHBKGwaLj4mhNh2VyyLS4b9e4+JweZiEEzYbkRq2KV0hihsTVms4dSkK6
      QE4pmqTcYLjmi5iA9rLrdrMOSCEYqNb2FYGYBdLhEK4QGK6LFBKrUqEYCWO/+w4WEFpYRH78
      s33N5VVASol/k7XKrlZZuX6NkBDMvv0WjpSE4nEM0yT27bck5hdY1pAwTVbdp51WFa0Zt20S
      UnLJ42XCtqmgGTAtIpsIWOl68YP1AggGEICNUorr78onBIcsD+N2DYs6J4/sQqyrrktaKTSa
      ww3lGqBXSuZtm6LSDFlW3VHnOhQ0HNn0vedBizSIegwqSqGol32fcZynLERLrktRK4JC8NB2
      saSgXRqYz0P/2w3Ybpgjt2rlaj2A6jn62YqC1ky+/y7h/n5yy8uUbt8h3N+Hv7sb0+PBFILc
      N5dRWjF59SqR/n7ae3sJhMMH0PvLhdb1vIy2t97C6/dTLhZJj48jWluxv7nM0aUlfIaBXwge
      OjYLyuUUTxbAsgCPgJbGyz9iWThaM2LXCEiDFimpoSmp+qbYzcG0Dr8QnPB4UVqzqhTjjk1E
      SFq3Eb9WlSIqBIFNJfXX0bEpOFIAXebB1EcSQmABlvE4N7rsOjxybEwhiAjJrFuvlJc06zax
      JJBxXVaUiznnOhQde9s68Jux3UYRG59pilrjA3oMA7+QG4tbFIJxyySpFMkXuKJ03u9jYnCA
      2MQk4odr6LZWmi9dpDQ1hW89OjSdJjAxwWEEydU05ZU0D/MF/G++8cryffcKIeo35biuS3Zp
      CZTCmpun7fYdml21ofyFpOSE5WHAtHho24SloLNBTIYQtBgmY7aNQjcqNde9v1EhKWqFiWDe
      rXt+N/I+1sewy/hkQ2zyCkFmp7ghrUkccOGv/WB903WZ9Y1/s1YlJxTHLc9TVc6jhkEUA7PT
      MMG0nmjgeaC1pqgVaVdR0jYmAiEF15ujDH30ESnHofrHT+h4RlmO7ZCRgvloE6fuPaDmOmS9
      PrAsfJEIgTNnNvovDI9wyHHrLn8EHgGTE+PEz5z+q3CMASxPTdH75deEDQOhVP1Wyy3rJYTA
      D0SlxCfEE4ScUy5eIC7rxDrq2BwyPUzbdqP+vybccIZ5hSCnFTNOXT5vkcYzFd76JnoartbY
      HGyFweeF0poHdo0Tloe0cplybLpMa9sK4duGQjzvBDxC0CQlMSnJtiUo/PQjYr291CoVAuEw
      6fYkxuwc4T2ESa/D0Zq7pkHTapqA1kSkpKAVmSNHiLS2Ui6VqFUqWB4PTjbDcmsri/EYV8ol
      5kwDs1rFbG4mFDuoe0teLvzhMCuxZpbSaTrKFWTDzLweUbu5htOobVPUignHJatc1lxFXikO
      mRYeKckqRRGoaug2DFoNA43AKwURKaloTUwaWEKSNAxmXIfWbcQXqBPVqGNT1preTeLTOqQQ
      +IRg3HGISonR8OIelPi7F9haY6ORCIpakzBNItIgIASPHJvENsrxjrFAL7KLlwzJrMeDqJQJ
      X7+JXa3ihILoqSkWsll6HXfP7ZeBsl2j2zCYd10Spolfa8aloCYl0jQRhQK5pRTxY8fwt7fj
      7+zE9PuJnzyJUyrTcuQIptf7zL5eB0gpCTQ3E+ntJfvwIZFaPUtrIwRcCJRSTCqXbrPuQa0r
      lS4Ro24nr2hFTmnuOTYnLA+thrGhm824Lr2GidWw7JgNpjXdsPmXhGDK4wHXIdTw88wGA8wc
      GmTK56W7XGWnehxeIfALwSPHYbW7i+H+XmaaowTSawdSEXt94+8UeTDhONS0Jq0V7YaxIWmY
      jc2Zbtx9sBm7BlM8K7JvMzZ735JK05Zeg/RaPZ5japp7s3OIaBNVIbgR8NNXrtC0hxQ7P/X7
      xIJSoqgTgVcIWmbnmF5NY8aa0bkctsdLfKB/wyvd0t8PQOCjD3cd9+sIrTUqEGDxjUskvr5M
      eLOYozWGYWDaNiOOjV9KFHDe4yUsJUU0I7ZDq4Buw2TZdZhzBVXlUtSaU57tGUFZawJSkj40
      iHX2DOM3b7E8Ps6wz8uZ//pf8Jsm7X/6hI6Gt3mnceeEIHP2NPETJ+j2+7GrVUrD9TLs65tw
      vfLgfkNo1kNvduobNF3mdjmFUPeVP62D7rgBtpo29yLbbTaLbv7uI9Og/OEHlKemuLC2xvSJ
      E0y1Jej89DNimxQ8qIs8c46Doq5cV4D+hsUhZhjc9Vi4XV0szc9zqlDEXypzr6+Hw++8s21I
      xquWR58XWmtCTU0sKUVIPg5fXv+/0zCo6LpZcX1j1ITg3qWLLN2/TzaTqV8ipwWI+mfHLA8p
      1924CG8zgkIyLwTxixfw+v1UurtonZklWKky+ulnCEPy4fLKrkS7Asz/4ue0J5OUCgXKP1zF
      XFxkRMKqkAzaDssb4q8mKo2nqljsBkNsX6VkynGooXf16Dpas6YUJVU3HKyLQ/sKp9urgrM1
      FiPv9eJ1HIbGHtKEYK5QwHP4EOVAAFmo12mztWYZTdVxaTcf++cs6taJm8rF7evDPXSIyLXr
      HAPmz50l1NtDXzT6V0vou6FWKnF0h3kZQuCiWTZNKoZBZ7WK0BrT62Pwl7/k4Wef07a0xCHT
      RAt4ULPr+pNSXK9VOe/x1pNktCarFHHTJPfBTzaS52N9fcwur+Dp7OBQWxuubTN6/Qb9j8YJ
      Noh465ovJlqJtrUhhCA7PU18bIxjjktIafqEYlwrBjfd95B2XRYch/Y9RnXu5HS10Ryxtuf8
      62gyDCJG/ZL2nFI8tGu0GeaLJcRsPpZh55iRQKKVWjZLVEhqgGdhgSW/jwvFElUp+aEtgdsc
      xa3WeOfR+BOx6FprrrcnsS5eIBKLoVyX9FgY9/Q7tG1TTe2vDY5tkx0bw1cq41omOhRGoxHB
      IM78fP2iwE2iw7zXi6dWI6YUta4uli5dxBMOM/n7PzCQy5P8/gprH7xP3/vvUf7mMncWFjhu
      Wqxqhd2QjWccm4eOjYFANjjxLdOgraP9iXcYu3Rx42dpGFjvvM1ksg3ji69o1nVr0mYPcXsq
      xeTyMrG2NtqPH0eNT8BahoEdCDdmGKy6LuO23VCYod+0dryY0Wn4mjafQutK9p4kFOqMo7nh
      0Jtw7L3HAq1bH+DpUIjNCpoQ9TIrT4RYmxY6FsOhrigNVWu49+5T8HhY9Hgwlpe5sLiEwdOJ
      GHNC4H/nbfwNZ5ZhmrT89KN/Nxw/8+gRx3+4tqEkrlvY3QanGlUumrpyWfX50P/w9+Rdl+nF
      RZp6etBKsfjwIaItQXcuT6dtU7x9B+MXH1N8/z2Gr1whMzdPp2FwrVolbhiEhWTQfHyLmAOE
      3noTy7M7FwXw9/dTCAZZ/uYbqmsZZpy69a/VqFtbLOdxEF7hwnlGr1zlcDb7RBurSiE8Hppt
      m7hhbNxOr7TmfsN8uXnTP7JrWEKS06oRU6Q3wuEt2DXuaScYQhCTBsb/vceMsM2Rdutpdut/
      20z820XkrZkGju3QsbqKEIJbUlDo7iZ/5DDBlVVOVWs73mm7LAWp5mYim8yY/16IH+pVG+bv
      3KHUyM31N25oNICAlMRNk3gjKG7ZNPCeOonl9eJvbkZKSX5+Hu//3957dcl1pemZz97HhM2I
      9BbpEx4gAVSRrCLLF6u71Sq1zNyO5m6u+k6/QP9Aa/7DaC5mjUZS9Sx1V/e0utVVRVskaEAQ
      JoH03tuIOGcbXZwTgcjMSAfCBMh818qFROaJyB3n7G/vb3/mfR+P0fTOO8w5kvzCIi07uyxu
      bVFK+AzfuoU3PMTGwiLu7i4poufTFE+6LWOY0IrdnnNkYn4lawybExOED0fZXVxAp9MV10gI
      QSKbpeC4DM3M0uo4NEnJaBivpouLBENDuK5LsqGBpcIu68NDlNIp1OIytqGB4ru/IPv2D5me
      mKBpXx3Ychyp8YQgsIaPSyX6XI9Wx6HRkXQ4Lk1S0iglLY7DqrF4ApqPkIQ9DCkpT1YKUd2k
      XsvlKRvEYU0RI4tLsLhU+dmAsSwtL9M9PUO6hvUWrOWegHnfJ339+qmEMF41uIkEA76PUYqi
      UpXEVvXOWvQ8Zvv78G7ePMAVpF2XnXSKvOeRfe01RjMZkl/e4dLYGHMLCywqTcPgAOpcD8ml
      ZZJSsKQN91XImuuyE5R4PZFk5/59JpaWaEylSK+ucGVuAZ/IO1i9e4/5/j7C3nPYQgE8j+yd
      O0xoxXbsGZSsxWrIbWxS+PRT7A9/iBCC9hs3EEKQv36duWyWQjrDhRs3oojRG99nanyClgcP
      KtWiw67L3TAgg8AIQREYi2P4PVWffUprSlh6HZf0N8jyn9hsjDFRSDMWtpBSVpRchBAVflEp
      5QH+mP31QY1CkD9EoscQiTrsvP1Dhvv7T7Qtv8qw2uBY2LKWAek84e+JDUFby9T1a6Ru3ax0
      giWqFgR3fILB2flI48FxyIyMUOjs5IsPP+Ti9CzLDx+ytLBAOpUiKaNGko1cjjGtaH3nHXa+
      /pqHc/P4mTTN4+NcNRa0jsYhBFhLi1I0P3qMiTWBLfEz9Xy+DgIGvEhV5locYl14PMbjri46
      BgdxHYfOhgbSiQQdv/rVns/ef+MG3LjB/f/zPzI4Nw9ELvJNP8E9pZgIAyzRWWHNaPJGMqMU
      JWsZcN0jC/NOihMZgBACNz69V7s/1YwDTlyMdNiAqn93WPXorLU8tIamtja6hoefutT6eaKw
      s0Mynd7j+n0ThBMTNAnBpLUHFHUA5hI+/mvXMVoz+d575C5d2tP0r32PLdchWXWvUtksiZ/9
      jIe//VsYHCDX3Y02hsWvvqJPG3yg+e23SabTZDIZhqyle2au8norZWVBq97tPc87UDDU5br8
      U6kYRaDiX6rODtoHBqLxGYNmb7Fa2U0u73Jdf/7PmPqvv6EnDrPOaIW2hu64Xim0ljbH4VEY
      8HocvXpWONUMM8aglKp8aa3RWle+Lx+UD+P2OYrvJ8TyuVY0CIH5wVt1OfmBSk2RCkOmHz06
      sazRYVhdXycgisPvhxACT0jCUomtjQ363nmH5ra2PRPAHRxE/OmfPDk0GoMxhmKhwI7rolNp
      UnHn3cb1azzCsrq1xfIXX4AQyGwDs1ULWXliuq6L53n4vo/nedHkrwEXuOp59LgejXEmeqOv
      d88YV2M5XGMMa2trewxBxpxIA//bv2Xm/AgFY2iPWzxf8xP0ex7nfZ9zsaszq58dgVd5/CfG
      /lW/jPLErjVpT9qh41oQrst0dxdX67hup/xgXc+jZ2gIKSUbKyskUqmnKrhru36N3dFRasXi
      NqVg7vXrNGYyh6ruNMSh4fJ9Xvwf/0TH8jIlYxA3b5DvPVcZdzqfZzebxezuUgpD5icnaWxt
      ZSudgq2dPZP2sO+rsWsMgigKczV2Va20bG1u7XHVAqUYu32b0j/8I4kgZOn166T6+jhXxeMk
      pWTwX/4Ff/zDe3T94T18BEtasaINCstFz6dROsxrRc8zpLM69TudlC79tBBC0G4NpTp1fWqh
      PM5cczNB6el6kIWUTFy+TCmbYeWzL0iqkKVkEqRk49ZN8oODGGPYWltDbG4iV1YxyQTObgFZ
      LLLhOrRPzzDb3Ezjm2/Q9qMfsTn6EMYnaBsZ2TN5O/v7Wd3ZYffLO4z8+MfMTkxEeYiODv6h
      OMn3taEkBTuJBH27Bay1zCV8SsZgCoVovBYQsKwNGSloEJJlbRh2n0QCX3v0mJnFRZZffz0q
      lZ+e5vvjk1ROLp9/yc7nX3J/bo6OmzfJxewdX//X39D3cJSCNYRYAhv1NNwJSvyhVMQzFiUF
      i0rR/gwoUQDE5H/4Pywn1Ns6yr8/7PrTGMVXWjF64TyvPQc19bqHtSx9/EdEPkfzyEil33pz
      eprcZ5/TtbZOgshnjecgQghGw4ARz+d+awvOn/0pQgjCIMAas+ew/OTPWDZWVvATCbxkEqMU
      W5ubhNvbZB0HIyXZ7m4Kn3+OdT28kWGW//Ae12ZmaYrrjiQwqhQj8blwXWtmVcglP7EnSVUm
      OijrC++fPdoYJm/eYOSXv+D++x/Q+cmnZEp7w6I2Lm2+4LgVJpCHKqQFQaPjQOx5PO254BuX
      QpykHfIkMMBjzyUfawt/12CtpWlhgeT0NLtT0xSkBK25OjtHtfe9v7xYT/ScawAAIABJREFU
      xv9rWV5hdnOTbGPjkZEzIQSNra1MfPEFpbU13MZG2gcHad2n7bYTKrbmF+i7eIF8IlHJGzxx
      gJ/MhbyUzNY4wzjHBAqkEKx98gmPZmboXlwitS+HVM1V5EhJyRh2BfQ4Uag0baNml28SjDj1
      GaB6YNWJsFrXntQAStZyp7WZgR/9qO7JrJ4XtufmGFldi4T6tqJD42gYHnr4BFg3mqyUKGt5
      dPUKTfE54SSToe/69cr3ta5vuHyJllQKx3VZWFlh3RiaHIfQWiZVSMe+xJMLNUsSVCxvVVa/
      qT5DzmrNoJA0Li1HO8T+xRV4EATk3eg1D1VIp+OyieWmn2DJaGbDcE+75WnxjagRqzPAT+v/
      B8C9WzdovHr1lRW5OA5KKbC2pmiIVorihx8x+HiMzL4koxFHT2ZrQRFx/HTe/ZpJ36NpcBAv
      kTh0F9jd2sLzfbxj+iPS8UK0PDODu7JCo59gRoWsacNl3z/IyCYiShp/36pfdk/KEZ/9rynX
      7Nf6nBvG4ElBZ9ykk5MRR2i6nJ+QDjP65L0lteBOacVmGNIso66go3AY21atAZzEIOaBmbfe
      oOni0QSwtVAsFF6JDLG1lt3NTRpqiN0BFO7c4froowMZ9mml2DSGojF7YvzVaHIctlTIjrU0
      W0Pw8R9p+exzCtJhpb+X1NtvV1ZcYwzF99+n59EYG67L0ltvkGxrI3MMBfvW+AQZCw/DkE7H
      YcJG42raFzodcj3GlaLdkTQIWZkXFemtWlpnQlCwhqw86IhYa1nUmgtVi0af6/FxUOJm3OM7
      rUK+qby52+a4zF28gDc1xdZuAVcIpIhCW8ZGzSeNUtIsn+3qbK1l4eKFp5r8AIlkLcab+oMQ
      Yk8dUzW0UjTeuw/sdStHw4gq8aaf4Li73uu43AtDHEFERYIAY2h7PM4d34fBQXKtrWilaJ6Y
      ogloDEN6f/8eXwkIOjsJmhoJe3tJ5/MEd77C3d6mNDSIlpLC40cMuS7WGhaM4YafYNtaRsOA
      XtclUcVgN+y63A8DLsalycf55lkh+TwsRUVp5TxG/N4lBN1VSVeIPJWcEJVq0Q7HZUGF3+wM
      4GCRw0NsNzZy89PbT1buqsPWolasGUPTMeHJanYBYy2TUqLyObaUQjoOHevrNCHwRFSBuNvU
      SO4pB/5tKIiz1u4pxhIiin0LqNm/WgtCCEIsrXIvw5ovBDfvPaB47wHTzU0Ueno4VyWH6wDJ
      IODC/AJ2bp7w7j3WBbTZ6PfB5BQWeK9UoCORxFrJgtGkpSQNtMUs0nlho2gMUU/HtrU8xtKB
      IMPRRuAKQaN09rjgj8OQYc+Pokn7vIhprThXReabFoKc4/J1EODLiLeo4ZQLtTvX2kL+k09Z
      unaVKaC3xmDbpMNDFbJuJIEx+EIwuM+fXQO+7mjHb2/Hbm/RNDfPPWPo/uEPaIzr9hfm55kz
      hsToI/rGxgnn5uAYAYhvG6oTRMWlJXqCgF1rmdYaQeTXDscraLVkLRwkGSv71dl4l94PISL2
      iPNr69i4PXXv759c50PUQSaiheyh43DZaFwhmVMKRwj697FF97sus1qxpRQpAXNKsdTcRPJP
      /oR7Y+PcvP3ZkaUG1lrmtQJACghNxPbsVK34Zawbg4eodMeVjaBFShaFoNdxmdeaBa0ZdL0j
      WaONtSxqRcGCq69cIdjexr93n5nLF2m/e+8AfYQQgvOux7a1NLgu68awbDStsfV+6EgS37tF
      Z5U7o8KQS/EDKv8sF6vDlJqb2Z2YpGdymt3t7acSu35VsLG6CnEJSb6lhdmxMfovXWJncpK+
      994nATzQistubZV2oMIIUZ7w5YhKGemYBaHxiIdeaxVWh+VvgKwjmZGCtFIMOO6hE6rbcStd
      ZTnXJVMo4qdS+JcvMfHwIYPbO4fuAkJEbZorRjPkeOAczECXGaQXteL8PjKtshF4ImK07nNd
      inHeoC1ut5REh/N5o+lyXEJrGdeKTumgjEaqMETNznFhcZFcfz+333yDYo24kBCi0lHfKCWb
      xhBYy9fG4P7qXfKXLu2tUfE8HNetSUglhGDbcegDwpWIFv2bZJHrGeWIi+c4qDCk41wvU//x
      /8L5+//OUqHAgzAgwZP4fvU0cRynUpPjeR6u61bqdMpVtxDF05/GISzf8uoy9vJXXxAykc+j
      3v0lS4mjK3LLDTH9jss72rD2yac4rsv2O29zv6O90uQTxmXT1WiO2RsKNYxkyxgehiFTSu2h
      WqyGEIKRePF4EIZMK0WHdHBFVEb9+2KBT4MSjUJwJyjxWIVcclzyNhIGcf7y3/27f19oa2W5
      VCL1xZd4b73JXDpNbmb2SJ2olIioNELPI/vmG6cqX5COw0JQondpmVXfY11KRu/cwfd9Ut+y
      3aBsAIlMBiklwccf8dbaOh2OS0vMwjyqFNZa8k8ZBl42utJEchrMBwFNNuIcKrtb5aJGYww4
      ksRbb7LmOLTOzp6IxUEKQdvyMmNS0NDfjzMywiMsG47Dx/kc6/kc5zY2nxTvWcuK0QRECbVq
      LGpFWkj6vKP5Q4WIqNNbpKTJcdi2UQN8mbFQC4FE4EtBt3RIAFsiEhJ3/ve//Mt/L5JJEgP9
      qNlZNosFMkND7E5O0hweHmRyRVQHMm8NzuXLpxLGFkKQbGtjYWaGYkcnjQP9pDMZioUCmVzu
      W3HArYWNr+/x+t2v0cBHQYkilg0bEVllHYeJMCQJeKeshdoxlqQQpxK2s9ayiqXd9SoJqvK/
      5a9sqJhuyJI9P8La7CzNhcKJdhpXCB6trbE9N0tuZIRMVxf0niOYnMS/cIGNMGQDy1ZQYlmF
      JB0HIR1WgXlH0mBshdfzsQrpPGHdTznfkI2NocVxUEScQEZAo5A0SIkrJXNKc87d1xS/ks3Q
      cPdrgoEBnH/xa778b3/Na1vbe5rfq//1hSDT0YH/FPF41/NQv/wFed9HK8X47dsM3LrF/NQU
      3f39p36/eoe1lsz0dOX+dTruHnoSYy0r1mK1Jm3MqbKbZZ78Dud4asMyqhNVh8EDmr/8ilJf
      H9sXLxL84b2a9IK18HqhyCeex3YshK4++ZT82Bh2cJDUL3+BtRZlLTtrawSJBF4igXQcXOCf
      fvtbfra4zILWhMCyVrTWiIodR8YAsGsNwzFX6KbWjBnNiBsxVLtCRDuAiru9sr29lPI51Ecf
      k716BTk8xObcHLntnUrtf9lHLNf+L3Z34/X1nuimVA+8sBO9p+M4+IkEMpmkIZ9nbTlqiki8
      QkqPJ8H6p7e59ngMIQQrWoNgD2U5QICthAAnw5BsVUTkKEghaJWSB2HAto2qNI21TClFg5SH
      ui7LWtN2TLg1VyrxuDFP0/AQk8kELdMzh7I2VCMpBLlCkeK9e7Q+eMj5rS2WjWFgboH1uTnC
      lhb8dJpEOo3n+8i4s1AIQaKzk9+vrnBte4de1yMjngRSynOw7LbBE8KGWiXcSRGdV1tdly/D
      gLQQjGnNoBfJLVUMoPwiP58nbGsjEdeBlM6dg/sPaIgjEOWoTnnlWOzpxu/uPvaGlLE1NcXS
      P/4ji2PjNN6+TfHu10xtbpJpa6OhsZFUJsP60hI7W1skM5ma/QevGsJSicb33ievDcpalow5
      oIwihGBBRSudL6Km9RmjCY09VpxiN25s73c92h2Haa35Ogy57PtMacWGNjXbB48zAGstWEth
      ZxfV10ums5ON8XGaS8GJPndaSrQ27BjNrNa0SYc2IWjb2UHNzLDd34dbo2TDTyToGhriztwc
      dneXZiEiWd19u1Z1mUX5az+EECwbQ1IKHnoeaaVokRFPKtQohhNC7KnINNayNDJM+4OHe+LP
      5X8z0zPYW7dq/vHtjQ3U1BRyt4Ds7yPd1sZ6oYC8do20UmynUiTXN+h5/Bj37yZYf+st0n29
      dA8MsLW+zurCAp7v09zefqIbXq9YvnOH1q0t7hNVvbqidvnufoPodz3WjeFRGDBYg5DW2kjo
      WhJFQsqvH3Q9hI3KkIdcj5K1PFIhSSE4V2V4gbWMKXXouKNVFdylJdY++pjWn/6E4JSFZ9X+
      +6MwrHyvjDn63CgE7edH6F1eoWThS9/nx6HaM/mPw0wmw/32NnZdh6XWVtpyOWZ+81dcqVpU
      jz1dJNNptgq7h/6+fWOT8aUlMvsmaRgENP7V/8c5pdmRkrvNTWQ7Oui9cGFvcqfXstjchH38
      mKvvf8Dqp5+ycvkSorOT1q6uV6Y55ih4HR20ptM0h4dPNqBmFKdRSjLC424Y0u84NMQPT1vL
      YxXS63o1Ra3PuS4TKsqqJoTgvOezaw2PlCIjoqypCxXayeNQWl2N/PZr11j93e9pPgXDN8C8
      VrTFz3IimWDqxut0H1O2nTl/ngfJFEpAdm0NPvtiz+/h8PC5BZbPDzMY0+eXry2cH2F9fJLW
      +PXHfnohBE5fP2tTM9Qq58paS/r3f8D8q3+5Z7IW5xfojyv1JpMJWoeHDwx+d3sbIQQd586x
      3dDAvaGhKHuZbWBraZHl3/2eXBAQtLdjX3+Nxpi35lVDY0cHG0rRcozvHBwyqTwhuOp53AlD
      2oxhi6jqcrjGrlCG4CAbR1pIhl3BlrV8EJQOJJaOQjJUhMaQ7utl+k/exf2bv+XoMrrISKe1
      qlSJdsTGu3ztGl0jI8f+TSEE2fh8uTE3d8zVT7Ds+0zeeI38xYsH3q/9nXd4f3uHP19ZjbLO
      1WeAw+A1NbHW38fWzAzJUnBgpWoMAtbHxlm3BjUxgb3zFY137tBkYUZrHnR20FZlAGW4nofn
      +xit2fzqK1xraR4YYHt+jrlHj9je2KCTKNGyNjODaW5m6b33WN/aQhHF2EX0yer6wCykRM/P
      07Jz+E4KEWPaYWSxIj7ojhnNedej6YjDLUTuzZaxe6o2y++TEIKQaJc4KZJKseBI/I4O/EyG
      9aVFWre2D9z3Fa2Y05olrdnGEthIL6wxpnH/44XzpC9dPDXdzWahQM/k1LHPec1xmP/lz8kN
      Dta81nEcZK4BZ2qKBlNb7OMAhBCkm5qw/+Zf83B5mcbPvyC9uEhLEFaykENbW/DxJ5XXfBKU
      2BGCTWtpunihZsiqEopzHFJDQ5SKxagzamCAxv5+rLXsrKyQa2+nh4ixzFy7Riafr0QAtre2
      SGcyp8pDPGtYa9ne2CCTy6GCoMKitueaMKRoNIlD/H+IIhZHqZ87QtDA4fXz1QisJSmf3aIQ
      GEPi4z+ylcvR0N9PcOsWj9b+gdLmBgkhSApJWghKlop4NUTFbYuOg5PPc/f8MN0XLjyVW5tu
      aWHL2gPFk+WwsgWmmxrZfOcd0i1Hkyq0dHayk8mg1zdO3xGWa2vDvPtLNpRiamKC9Ogj8vML
      bLW2oH2fc3PzhFrhC0GLdBjzHJqVYml8HLm5idvSQr6n58ADzDY3k933twByVWcLISXNnZ17
      XrefKe1lQAhBIpVCBQGlQuGAAZR2dwkWF1mSkh0dMuS4ICJeywAor4VNUrKkdc3ET3kBMdhj
      M77KWtatoe8QFyewNtb5Otm9s9ayrDUXPZ+7Y+MsJxK0dHQwM9jPW3e/JnmIqry1ltUrlwhv
      fQ8v4XPuRH+tNjL5PMvZDA07uwd3HWB6eIjErZukT8DMoZXiw2KB2e4uxEd379rCEZGAk0Ap
      VSF12p2bI/jt33JTSIy13Fch52PGX2Ut95Vi+tIFzr/zzjNzWzbX1sgd0nDyorCztUVxd5d8
      c/Oe3chay8Z773Pr0WOAyj0JjCUtBS5lpffo+m7p4Mar2pIxrGiFRpAQ0Ws7XJfGI0p+rbWM
      hiFD3uEVkaNhQK/jkjjhSrxqNNpYNFCQgsmuLjp+8mM2Jqf43gcf4rB3R9oCZpub2O3tjdyd
      Z6TOs/5wlOvvvb9nAbDW8tn3b5G7cuVU86m8oDyT5bOa0Szd1QW//ufcu/0Zm7Nz5IEZrZDA
      roUR1yUIVaWi8VkYgeM4FerGl3UWyDQ0kKkhxyqEwLS1Mnr/PspGIs69jsu2MJVDYfk6iB5M
      YC33woBu6XDR87kfhpUDb9EY7geReHV/1X0vx0IK1hCKgwfgMgIbtVCedPIDGBvp+na5HkkL
      /TOzLP/2t+ibN1mTglYTUThuCJjv7UVfuUymo4Nn3d2dGx5i+tPbDBSLT56zAHEKoXWjIxHF
      shv2XPyHdGsr/OpdGoOAzZlZpqanufBwlItudBAKm5txHKeSCT4M1lq0ioylfGja/0GttRR2
      d0mkUlFpbB1yiQa+z0QYIolq5i97PjMqErTetXsTXTs2Eru+5PuV2p5Ox+HLIGDY81jQiou+
      T2AtoyqKq3tEtS4QcWtKYEapPWSyZawZjXdMRc/+0OKMCitSo+X7n1nb4Is/fsKo77OWzbJx
      9Srp1pYDxYzWWtZm50g15kkdQu51Ukgp2e49Bw9H94zxNEve7Pg4rV1dFRKz5+pAe75Py+AA
      zQP9bOZzBLc/B8DJRwG0wya/0ZrC9jZrH32E09nJxu4u2eYWuoeH0EohpMQag+O6GGPINjQg
      pMSt06xxc2cnH2Uy3CqVolCiELQ4UZORBRqtQ4fjYIBxFXLF93F4MhEbpWRNSh6GQYUJ2Y9j
      +7WwLQwflAoVA6ieLO3S4a4J6TmmjfDviwVe93wCqLiw+6/Pr2/An7yL29tLC08WrKBYJJyY
      wGay+G2tJBqy+M9KpPDiBTYfPSYXRy4LgDlhKY61lp3NTdrPPTmNvJATpBCC9PXr3B59RNPq
      GjrmiqyFnelpMn94n7bdXTCawuoavygUUcDdrU0818W2t7O5sYGZncPp6iTY2aH/tdegTg3A
      SyS4/Kt3mfriC/40JqHNxhlZYy2fhQFFa1k2mk7HwQHuBtFk3zWGGa34USLJgOPwOC6dhtqR
      oHINUK/joq090JE1pRTKWnatRVpL0UahUmsthuiQHVjodV1WjUZZKgmr6gSmCwRa0Xb7M9aM
      wZ+eIbGxQWZ5hRZraETwwc3XyQ8828LGTEsLU709XJ2IQqJFa08sgi6EoHtoaI8xvrAQihAC
      Ll+iOPqIrtufMZ1K0TE4yPb8AuHGBpn+PrxEAvvVXQaLRca1Jp1Oozo6SExMkgDe+PIrADbi
      B9sgBFNzc4w3NCBu3HhRH+XUEELQ0tFB0y9+wafvf0DzvfuE1tLiOLQ4DlkhaZOSLimZ05px
      G1LAciVmR1YCFowmJ+SeArpanVazcWtlKZ7k2fhAbYBFrUkKwXXX53GsJp+RklVlsMZQtJFS
      pANccD3uhAF9bu1FpclxeE34LC8vc/Mf/6nCVBd94EijONt7uiLJk6LY348en0QAXw0PsjP6
      iIamphMZwv7uwxcaQ2y/fBlz8SJf/be/Jvu732M+vY1Opyk0NSI++4xiawtvzS8AUYnvbGGX
      8+MTB1oF81X/7w0VqZUVvn7/A1pvvE6yjhtqpOOQvnUTOTrKeQQfBiU0MQMH4EtJf/wQgzAq
      OBMiai4vWkvBaC7XOOOUd4TAWgrGcN7zeRR3mkUNJ4Y5oxlwIk59S1QmnJSSrrIw9r55XozL
      lVOHhDghYrQ2IooqCSFojuWXPGC+u4tM42GKwt8M+d5eHrY0U8jnyV+7Ru9//i+sNTWRv3D+
      2NcarSkVChVDeOGFNlJKRv7sT2n6X/4NC/k8ZqCfjjfeIPB9Lk/PVp5DKqbCWzWazWMy1WkL
      nV/fo+Gv/4agWFt4o16QSKWYvXiRGWsZdF0WtKIQM7yVYaytUB5CHElC4NRw2ctJoA1jmNOK
      c3EfbF463A0DxlTU1HTd8yu7hwCu+wmyiCrZ0r0wcfXl/j+5n/q+QUrOez4jrseaUqwaw7KU
      6HfefqYRueq/6bgu3j//c3I/egeEICsE2c8/x56gPsn1PLbW15+810lKIZ41pJR4iQQNw8Ok
      2tuRjoPJ5+h6PLan1rw5bl/bNJYZrVg2msYaJQCjKqTXdXGDkJ3ZWbZyDYRBQBgEUblEHZVJ
      RH0X51jv6cZZXuFCqFi3hsYqbpyAaAUutwiuGctCY45iaxs7uQacUpFU/Mws0cHZEtUMNToO
      yloWtOaK79PsOKSlrBkpaZAyivHDgZXei1f0hyqMNMqOuYfrRuPLSMNrbHCA5PDwM7/v1S5f
      OeTteB7ro6ME7e0kYnH0oyBEJPRREXR5Fomwb4qs67K7ukrLf/rPZPZV+VXH9h+FIYOue8AA
      prVi11jOex6rWrNuLR2Ow7Ln0vhv/1cKQlB8xsIKzwI6DFG/+x3dk9NR/2syyXYuh/F9lubn
      GXI9Vs8PEw4M0FgljLExNsbl//E7PCGY0oqmfWeDMC5CG4wzwdZaprSiVUbGENpIgXLLRNz7
      81rzZiKJQ+QSVE/cRyoK3w7WyCrb2L3aiXeLDsdhyfNY+otfv9De7uPC6bWws7FB8Ps/vNgz
      wGEICgWKOzsUtKqk1Ss1HlWGoIxGxEN+EIZEpBkCj6iHdMcYlo3hQkzbvZFIkG9oIKs1t997
      j5br1+tqN3A8D/nzn/N4cZHixgbNAwOVPEaX1uxoTbaGz9/Q38+X39tmWxscz2XtyzvcqGpS
      8YRA2ThHEkeXGqXDqjVMhQpXRA03vW5EdzLkWia0wtrouJVDoASsaMM512WXqJ+gVUZSqJNK
      EViDi6DNdemNd+VdYOEHb5J5DpP/KBGWp2maSudyyN7e+jAA4/sEGxvkPf/IASWspQikgLSI
      aFoyIpLlGVeKtBC0S8mM1rQ7DmzvUNjZYfmzz2i/e4/wypW6qB2qhhCCfEcH+X305OXG9FqQ
      UtJy/TotwObKCrqxkd2/+3vKFUgC6HNdPgsC8o7DsjF0OS456R447ELUUlle4SfDkJIUNAhB
      kxeRzw55HlZG7A0TStPvukxpxVDVrlAExn7wJpmhoW9+U2rgWWf5hRCEvefqwwAW7nzF9Y//
      eCirwboxzGsVRUJUyKW4CWRaaa760RNNARvWsGUjUtUVY8j7Pov/9/9D884OCa355LPP6Pze
      9+pqF/gmCIOAXEsLa+PjTGvFhokUJ30pSCMIRNTwokNzYsqUtIyoFhtkWf3ziXvcIh1apEPB
      aDzxhBV8Lplk5c3vkx4YeE6f9EmS7VlW/fqJxPMxgPJgpeMcW/q6MfqI1i+/ZFKFdDsuSXGw
      EXxOK1IILnoeo0rxdRjSKCVXqm5Gh+syr6Kuo77qVT4WsbNAODGJuXnzW9FnbIypfI7NmRkS
      1jLguGSl4EGoaHcdhqRHYI+vHi0jtJYNYyvlzDvGkKRW19WTc9pEcxOlX71L5gWQFT/r3TuZ
      Tj+fMKgKQ7764AO21tcrdfu1YLQmd+8eA6WAftdjwxpuhwHjVb2jENW6nIv9+vOexxXfp9t1
      D6zkna5L6hCDm7WW7fV1Vv7/v2d1Zobizs4rzUYXlkoRiZXWNKxvcMX1aHMcUkKSEaKysu1Y
      S/aIWH41lrWiw3Wjqk+lmAkDeo7oGhuPJ7/3AiZ/NQvEs8Rz2QFcz6NvZARrogzjYSUK23Nz
      XF5ZBaLali7psG0MGSkZCwMG4pvf4TgsaU3XN1gBOoXgzx2XhdlZ1PwCrrVMtDQhr12nZaD/
      lXKLykV/0nEIikXatrYid4RoFe9wHFaNpkUI1rQ+cd/vtrVMhAEZIRDGAIKxMKDX9fbsIkkp
      WUj45F7Q5IeTNcE/DZ6LAQghaIqJcI+8zve5LeAtG22381rT47hkZCTGNqYUiiiSMXSK/tVa
      KLtVncIpD5KOlTU+ee89VmamES2teK0tCCnJNDXVdTO+EAIRLyp+MsnGrZuU3v+Qx2FIyUb5
      gcuez4QK97BFHAVjLYvGoK3lZiKJYwyOlFghmNYK4vogAUxlMng/+8kLm/zw/OjwX+oh2Esk
      2HFdtkolFo3ZE+PvcBxwHHaN4Z+CEteeww0QQjAchjSOPsaOPo4qC7EstLRQfPuHJPcJ9j1N
      vPlFIHP+PA+LJQoffsj3vKhP2sZfJ+HzJL6uWzpoa5CAGxNVAfS7HlvGMBazUKzeukn+KQgK
      vomQxfPCSzUA88dPaNrdZcJaLpVFEWJoa5lQCiHgins4Pfc3RZN4Uh4QS8zRsLrGyt/+HZNv
      voHX0kI6n99DBlZviKptrxGWSnx8+zYJEamojJxQZKOMDWMY9p64O9VnpKwQ4Dj8MZuhqfv4
      3X0/jDHsbm+TPUaS6UXjpT7RsKmJi55fabaoxqzWdDkOg653aG/r80RLEPLa7/5A+3/5Ddur
      0Tml3lavagghSFy+xLrrkhCRAsyYVuyeosylQYojuT/TCDZbmk+9C5a7/+pt8sNLNoDMtat8
      3d93YGLpOIN5WETnRcERgnYhYHz8pY7jpEhmMvQODnLZ87ns+Zx3PRZMFDlZ0IqvgoClIyIp
      HdKpKLbUghCCzmLp1OHI8s5pYl7PesJLnWGu7+O89SbzDXtT54onTAn1APGCiwWfFkII1NUr
      bJcbvkXUdD8ahmwYw4jrsqQ1psYktNaigAWlDohYVN4f8IrFp664lVXninrBS3dq/VSKhWtX
      qV6XEkJgBWxqjY7r0sso02q/qHVkVwjMc8xwPmtIISLBrRi9rsuI53HB80lISUYKaq3xa8aw
      YS2X/QTTWnFfhezErMvVSARBzWxsGAToqm61VwUv3QAA0gMDzO/TGDjnuCxaw50wYF4rLFGo
      9JFWfB4EhCe80RW1kxj769mPQgg8vn6VhleIktHNZtk+4szUHJdA7//8gbW0SklWSoZdj17H
      4cswYHKfS9S1W2Dl/v0Dr5eOA0Lsude1EldhcDJm6ReFujAAz/dZuX4VHdeWaK1xgWHH5ZLn
      s2ktH5WKUZTCcelwZM1VrBbKGUSlFEEQoGKWifL/D8suWuCrq5dJ37hRd9v2UUikUqz2HB6l
      SQrBotZ8HAZ8FpTYNYZdYwjZS87rIOiUkmWtmVGKBa25HwbMqhAn5jiy1rIb93dXK8tU3qPG
      YfllMvjVQl0YAED6/Hkmm6IWOmstSqko7q41l12PFunQGfuQnY57YD95AAANAElEQVTLrFJM
      qLCmP1uNstBcWWzOdV0cx6kIz9V6SIG1jDbmyd68+UpNfgAVBKRX1w/9vYvgiufTKiRXPJ+l
      mLt/w2juhgE78Qpeit3MbFw6nSRihxjx/D2kuMXdXXbieqsypj/5JOLfqYF6u591YwCO67J5
      6yZB3LFTnqxl0q3qpI4rBCOeR7fjMqYU98OAoq19UK0uo91fUnvYw5hOpwh+/rO6THodBWst
      6vd/oH9j49BrlrTmvgoRIpJA6nc9RjyPoVg2qLycLBlNj+thEKSEIO84T+5/+ESdvbm9fQ8h
      2NyDhwzfu8/m+MTz+6DPEHVjAACJfJ71+CywX/mj1kA9IRj2PC64HhPPsKtNp9Oka7C81TtU
      GJKbnz9ylVVY+hw3EtGoui4tJTf9BJqoxTSwkf5ASkpm9p0DnGKp5gofFIukPvmErlDhxvK3
      9Y76MoBslpWf/5SJTAZd5dpo9gQ2DqBsJOYZRYecIHhhUaZnicLCAq3HiHAcBmstMyrkq5g3
      9LLnM+x6GCyl6uuAIJ/bsztqpdiYm2P3b/6G66WAXSJ1oFchIlQXDTHVSLW1UfqLX/Plgwe0
      3rlLd7GIBMJj7mVOSB4oRV4Kuk5ZArAf6nk1SjxnqLk5tDEE4nDJ1Jx0WLeGhqq1z1rLpFJk
      peQ1z2FRawrWMBRLNA3E99NYy3wySfD2DysMdcYYir/5K85vbpEiclOLWNzLl+rO36+FunzO
      rueRu3qV7ZERHvz3fyA1N0/ymHvZ6Ti0S8lDFdIuD+fYPwnC5uZTi07XAwLPZ9UajIl4f+KT
      DwCugASCkrVMqpBFR7NrLf2OQ2ihy3UqzBBZKRlXIdparngePoKlhM/Mlcskz58nXRWy3pyb
      48rm1p4SitVEkuYTVAPXA+rSAMrwEwnUu79k/T/9v6R2do68tpwsSyAwcS3M02DLWsyli8df
      WIfID/STufs1TYech5aMZkNpXvMTFK2lUUpmtabXdQ/ojDlEpSCuECz4Pss/+xn5zo4D7+lk
      MpSEoJr5s9CYP7XY98tC3Y/S9TwSuTxpIQlq+JTbxnAvDJjSiimtWLWGwyLNJ2ms3kwl65pd
      7iikmpqYunjh0N97CHpcjxbHoceN+i6yQrBmDh5oyzG1iVwD67/+c9I1Jj9AJpdjbZ8ewk7v
      uUPvszWGoFA48POXlSCrewMA0OkUrqBm8mtWKy66HoPxV/pUZNl7EVjL6o0bdZesOQ28ixdZ
      PkWxWpfrYm3EG1qNwEa7QDGTwTtiQdhZWKC1qoV1VUCyr+/Q61UY1pzsL4vW/pUwAKSkQzrM
      asWaMTxSIataM64VIXvj+QrLmtYHCrr28wzVwkzCJzVyUMzvVUKyIcvs5UsHoljKWmaNrvnA
      uxyHTaO5H4ZsG8Oy1rQ6ERtcfn6Bnc3Nmn/LWkvqw4+oZv1fbW4+cgf1Egky+WctnfH0qHsD
      MFqTWFuLe16jNP45x2HVGHqkQ0pEFNlljHg+RsBjFe5JgB2GBWu5k/C5m0qy9ctfvHLJr1rw
      L11keZ8PvmstedjDIFeGIfL3m6Vk0xrmjaYplmFqs4bS6tqhf2v/vd3p7X0loj9l1PUhGKKC
      quzuLtZaclIgrCAhJCNe9CAHHJdprVBAX0yrkhQOO8byKAwqvcT7V/5tIRhrb0W//jrZ9vZv
      xcSvIG6Q3/MjaiupWBuxvg3FIhgARRtW1CoLFmSytriFEIJiZyesR5nnDWtx+w93f+oRdW8A
      1lqkiVQPyxpb1ZBC0Od6qDiWnRCCbsehz3V5pKIqUvZN/qVkkvkfv0Omq+uVWq1OCj+ZZKup
      kfaYcQOiyb9hDN1QKSd3heCBCjnnuHs68jJCUrSWbc9jaXhwj1LnfpiWFnYBaS3Tba2k68i9
      OQnq3gB0EJAwhsBacjFLcS0/3hWCIc+LhR+iA9y2MUyqkP5qCj9rmX37B+S6u1/ch3jBEEJQ
      zOVgnwEsGMN5axnXCp+o3LsjZuEoQ1nLlAqRzc2k/tmfkTlG1ys7PMRoKokBsh0dJ1ZrqRfU
      vwEUiySNYddGXWJHHWILxqCIfNo1rWmSgqLZe/0u4L9kSdUXgbC1BcbG9/xMAg/DkB7XfaIV
      sG8HXDWajHSYDAJGTkB7IoSgoafnWQ37haPuzVXPzZMkkv9sPGR1qehWCUE+Jsdd1xoFDO0L
      rxksQZ01ZTwPJPr7WUwk2KhqUBlwPS77fs2DcBnt0qHNkfR0dkZNLt9y1LUBWGvJzMwwo9UB
      378WPBFx1Dc7Dq4jGd7HNm2B1Z4ess9JuqeekMhkmPvJj3iE5WEYMqMVrTUmtLWRntiDMGAh
      ziD7ng9HJNS+TahrAwDAmIghosZhtVatf8laJrWqFHBVYzqZRPz0J3XL7/OskevqIt3Tw3nP
      o99Y/LgzTmtd6YrTWjMZlDgnHdaMoQSM/+BNMq+wW3Ma1PVMCIolMqtrNft/D4vejKmQZiGZ
      2NegHRjDyvVruHUopP3cIATB+RECwPO8PYtFuaFFSkm74zJlNCOex0RH+3Pj+K9H1LUBuJ7L
      tuuQOuT35QlePdE9IelxXdochzGlKMTh04cjwzS8okVu3wSZvj4mm5ueaGrFbaXlyW+tJec4
      XHA9lrIZzNs//M7skFDnUSDpOEjPo6g0SkT+6X6R6OoSByEEYXzoy0jJoBA8CENMTzepd95+
      5UJ0zwJCSgqpVKX5v3qxKBuA1prFhizb7/6SRB2ytz1P1LUBBIUCrcUia27ENlCm2CuvYOVJ
      X36ou9aS3tfzW0z4uG98/zs5+cuQCR83Ft2GKExsAYRgzZGstrfj/OTH+C+Q7bleUNcGUJiZ
      pVkb1oSAePsuY/8BGMC1ltlcA47W5HZ2QEjEG98n9Qrx+jxrCCEoDA0xurJKQim2OzspdnQg
      PBcTKhId7aQaGr6VGfGToG4NwFpLcnoaiLK6J3k8SSG4UCgw9bOfsppKIawl8x1Ieh2H5p4e
      VHs7RSDpeXz31vnDUbcGUNjepnN6hnVjDnQrweFc87lQYVdWyF6//iKG+crgVe5xeJ6oS8fY
      WsvOl1/SZAxrRp+qyd0TgsTq2ivBSHCGl4+6NACsJbe5VRncYe5PrUk+43nw/W+PFOoZni/q
      1gUKY+aBwFqMtYdK/UxiKaXTmGyWQmcH/vAwyWMqGM9whjLq0gCEEAjPo2gNKSGO1LnaSqVI
      /Ot/hec4hzbDn+EMh6EuXSClFLmJCTaMpUUeLOAywCpR8kvl89/pGP8ZvhnqcgcwWrOjNMtG
      c7HGAXjHWh79/Kc4pRKpjo4zf/8MT426XDqLm5vca8gy7jjUmttJYGdsDNJpkq9YC94Z6gt1
      aQDh5iaO53JOa7waMSAJ6GLppXHJnOHbg7o0gJLj4DU20SMlmzUE6pZdh56f/oTsEc3aZzjD
      SVB3ZwClFFOPH7M9O0uHtVitaKmqATLWsp1On2U2z/BMUHcGIKVECoEfhAxKh/WqXJeylrsj
      wzhXr5A+pVbtGc5QC3U3i4rb2yTGJ2g2BiMd8lUhzqWET/LNN858/zM8M9TdGWBtcZGW7m7e
      8ROUrMWtOgO3BiHBZ59TOISr8gxnOC3qzgAa29uZDkos2Ui+s0E8GaIHXLn7NerevZc3wDN8
      q1B3BjD18CGzMzOE1mI42Pw+29SIe/G719t7hueDujOAUrFIh+NQNIaOfTw28wmfnV+9S+os
      +fWdQGMqhfOcy1zqzgAymQwFISgZs+cAbIHltjb8dPrlDe4MLxSFWI/4eaLuDMD1fQpCshLz
      1Jdxr6ebxE9+/BJHdoYXjZJSmOdsAHUXBm3q7ATPpUlLto2tmGjY1ETykOTX1vo6M48ekU6m
      yLQ009LZ+QJHfIZXGXW3Aziui7HwXhjwyGgeK8W4UjA+jj5E/XB5fp6le/eY/OADNpeWXvCI
      z/Aqo+52gExDA0NXLlO6cwctJAGCDc9l0RqGCgXSDQ0HXtN/4QKdfX0Utrdpamt7CaM+w6uK
      utsBhBA0tbYyC2xYw0K+AZ1M0ru5RWFlpeZrpJSk0mma2trOegPOcCrUnQEAdA8O0nvhAtvG
      sLi9w3IYkLGWlk8+pXhEFvhs8p/htKhLAxBCcOWNN+i4fp11Y9jc3mHUGNKbm+T/5rcsf/EF
      awsLBMXicx2H7zjPPQ59hpeLujsDlOEnElx7802aWlt5+NnnPF5ZZj3hk8vn6Wltxc9knjvV
      eaAPKqif4dsF8dHdu7ZwSHSlXqCVYm1piaXZWboGBmhsaXnZQzrDtwR1uwNUw3FdWru6zuL7
      Z3jmeCUMoIyzQ+4ZnjXOTnhn+E7jzADO8J3GmQGc4TuNMwM4w3caZwZwhu80zgzgDN9pnBnA
      Gb7TODOAM3yncWYAZ/hO48wAzvCdxrfSAKQQpM/oE89wAnyrDCDt+3TkckgpCeq8wvUM9YFX
      qhiuFsoCel35PAnPI1QKY8xzp9M4w7cD/xMPrTG97Q08sQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='FirstCase Weeks' width='192'>
      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
      DIIZjJeF/w9qFAlNrb1puAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Further Ideas' width='192'>
      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
      4vfj/wNxPYCqE1ZbnQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='GER vs. JP' width='192'>
      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
      /2DwYOYsZToaAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Germany' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Incidence Japan (2)' width='192'>
      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
      bVnIfy8d/KQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Measures' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Others' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Predictions' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='World Map' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
